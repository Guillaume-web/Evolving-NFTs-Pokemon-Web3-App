{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "evolve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "124:573:44:-:0;;;180:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;274:5;281:7;290:10;302:1;413:42:26;516:4;274:5:44;281:7;302:1;1083:12:18;274:5:44;302:1;1083:12:18;:::i;:::-;-1:-1:-1;1105:6:18;:16;1114:7;1105:6;:16;:::i;:::-;-1:-1:-1;;;905:42:30;1317:45;:49;1313:537;;1386:9;1382:458;;;1415:92;;-1:-1:-1;;;1415:92:30;;1469:4;1415:92;;;4359:34:46;-1:-1:-1;;;;;4429:15:46;;4409:18;;;4402:43;905:42:30;;1415:45;;4294:18:46;;1415:92:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1382:458;;;-1:-1:-1;;;;;1550:44:30;;;1546:280;;1618:94;;-1:-1:-1;;;1618:94:30;;1674:4;1618:94;;;4359:34:46;-1:-1:-1;;;;;4429:15:46;;4409:18;;;4402:43;905:42:30;;1618:47;;4294:18:46;;1618:94:30;4147:304:46;1546:280:30;1759:48;;-1:-1:-1;;;1759:48:30;;1801:4;1759:48;;;4602:51:46;905:42:30;;1759:33;;4575:18:46;;1759:48:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:280;-1:-1:-1;;202:1:43;307:7;:22;2755:23:17::1;2767:10;2755:11;:23::i;:::-;2788:56;2813:17:::0;-1:-1:-1;;;;;2788:56:17;::::1;:24;:56::i;:::-;2854:29;2878:4;2854:23;:29::i;:::-;2579:311:::0;;;;180:127:44;;124:573;;1421:172:31;1501:6;;;-1:-1:-1;;;;;1517:18:31;;;-1:-1:-1;;;;;;1517:18:31;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:32:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:32;;4866:2:46;3571:25:32;;;4848:21:46;4905:2;4885:18;;;4878:30;-1:-1:-1;;;4924:18:46;;;4917:45;4979:18;;3571:25:32;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:32;;-1:-1:-1;;;;;;3663:32:32;;;;;-1:-1:-1;;;3663:32:32;;;;;;;;3711:46;;5154:25:46;;;3711:46:32;;5142:2:46;5127:18;3711:46:32;;;;;;;3430:334;;:::o;457:160:29:-;528:19;:34;;-1:-1:-1;;528:34:29;;;;;;;;;;577:33;;5330:41:46;;;577:33:29;;5318:2:46;5303:18;577:33:29;;;;;;;457:160;:::o;14:127:46:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:46;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:46;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:46:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:46;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:46;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:46;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:46;;;3992:26;3943:89;-1:-1:-1;;2747:1:46;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:46;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:46;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:46;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:46:o;5190:187::-;124:573:44;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101ed5760003560e01c8063600dd5ea1161010d578063a22cb465116100a0578063d37c353b1161006f578063d37c353b146105fd578063e8a3d4851461061d578063e985e9c514610632578063f242432a1461066d578063f5298aca1461068d57600080fd5b8063a22cb46514610558578063ac9650d814610578578063b24f2d39146105a5578063bd85b039146105d057600080fd5b80638da5cb5b116100dc5780638da5cb5b146104e5578063938e3d7b1461050357806395d89b41146105235780639bcf7a151461053857600080fd5b8063600dd5ea1461047b57806363b45e2d1461049b5780636b20c454146104b0578063734b8147146104d057600080fd5b80632eb2c2d6116101855780634bbb1abf116101545780634bbb1abf146103d25780634cc157df146103f25780634e1273f414610434578063504c6e011461046157600080fd5b80632eb2c2d61461034357806332f0cd64146103635780633b1475a71461038357806341f434341461039857600080fd5b806313af4035116101c157806313af4035146102af5780632419f51b146102d15780632a55205a146102f15780632bc43fd91461033057600080fd5b8062fdd58e146101f257806301ffc9a71461023d57806306fdde031461026d5780630e89341c1461028f575b600080fd5b3480156101fe57600080fd5b5061022a61020d36600461267d565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561024957600080fd5b5061025d6102583660046126bd565b6106ad565b6040519015158152602001610234565b34801561027957600080fd5b5061028261071a565b604051610234919061272a565b34801561029b57600080fd5b506102826102aa36600461273d565b6107a8565b3480156102bb57600080fd5b506102cf6102ca366004612756565b6107e9565b005b3480156102dd57600080fd5b5061022a6102ec36600461273d565b610822565b3480156102fd57600080fd5b5061031161030c366004612771565b610890565b604080516001600160a01b039093168352602083019190915201610234565b6102cf61033e366004612793565b6108cd565b34801561034f57600080fd5b506102cf61035e366004612919565b6109d0565b34801561036f57600080fd5b506102cf61037e3660046129d0565b6109ff565b34801561038f57600080fd5b50600b5461022a565b3480156103a457600080fd5b506103ba6daaeb6d7670e522a718067333cd4e81565b6040516001600160a01b039091168152602001610234565b3480156103de57600080fd5b506102cf6103ed366004612793565b610a70565b3480156103fe57600080fd5b5061041261040d36600461273d565b610b1f565b604080516001600160a01b03909316835261ffff909116602083015201610234565b34801561044057600080fd5b5061045461044f3660046129ed565b610b8a565b6040516102349190612af2565b34801561046d57600080fd5b50600c5461025d9060ff1681565b34801561048757600080fd5b506102cf61049636600461267d565b610c9e565b3480156104a757600080fd5b5060095461022a565b3480156104bc57600080fd5b506102cf6104cb366004612b05565b610cd0565b3480156104dc57600080fd5b506102cf610e72565b3480156104f157600080fd5b506006546001600160a01b03166103ba565b34801561050f57600080fd5b506102cf61051e366004612b78565b610e9d565b34801561052f57600080fd5b50610282610eca565b34801561054457600080fd5b506102cf610553366004612bc0565b610ed7565b34801561056457600080fd5b506102cf610573366004612bf5565b610f06565b34801561058457600080fd5b50610598610593366004612c2c565b610f1a565b6040516102349190612ca0565b3480156105b157600080fd5b506007546001600160a01b03811690600160a01b900461ffff16610412565b3480156105dc57600080fd5b5061022a6105eb36600461273d565b600e6020526000908152604090205481565b34801561060957600080fd5b5061022a610618366004612d4a565b61100e565b34801561062957600080fd5b5061028261111b565b34801561063e57600080fd5b5061025d61064d366004612dc3565b600360209081526000928352604080842090915290825290205460ff1681565b34801561067957600080fd5b506102cf610688366004612df6565b611128565b34801561069957600080fd5b506102cf6106a8366004612793565b61114f565b60006301ffc9a760e01b6001600160e01b0319831614806106de5750636cdb3d1360e11b6001600160e01b03198316145b806106f957506303a24d0760e21b6001600160e01b03198316145b8061071457506001600160e01b0319821663152a902d60e11b145b92915050565b6000805461072790612e5a565b80601f016020809104026020016040519081016040528092919081815260200182805461075390612e5a565b80156107a05780601f10610775576101008083540402835291602001916107a0565b820191906000526020600020905b81548152906001019060200180831161078357829003601f168201915b505050505081565b606060006107b583611244565b9050806107c1846113e0565b6040516020016107d2929190612e94565b604051602081830303815290604052915050919050565b6107f16114e8565b6108165760405162461bcd60e51b815260040161080d90612ec3565b60405180910390fd5b61081f81611515565b50565b600061082d60095490565b821061086b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161080d565b6009828154811061087e5761087e612eeb565b90600052602060002001549050919050565b60008060008061089f86610b1f565b90945084925061ffff1690506127106108b88287612f17565b6108c29190612f44565b925050509250929050565b6002600d540361091f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080d565b6002600d55600b5482106109625760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b604482015260640161080d565b61096d338383610a70565b610978838383611567565b81836001600160a01b0316336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6846040516109be91815260200190565b60405180910390a450506001600d5550565b846001600160a01b03811633146109ea576109ea33611582565b6109f78686868686611646565b505050505050565b610a076114e8565b610a675760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b606482015260840161080d565b61081f816116d5565b8115610abe5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792050696b6163687520637574652061726520636c61696d61626c6521604482015260640161080d565b80600114610b1a5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920312050696b6163687520637574652063616e20626520636c61696d60448201526265642160e81b606482015260840161080d565b505050565b6000818152600860209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610b665780516020820151610b80565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60608151835114610bad5760405162461bcd60e51b815260040161080d90612f58565b600083516001600160401b03811115610bc857610bc86127c6565b604051908082528060200260200182016040528015610bf1578160200160208202803683370190505b50905060005b8451811015610c965760026000868381518110610c1657610c16612eeb565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610c5257610c52612eeb565b6020026020010151815260200190815260200160002054828281518110610c7b57610c7b612eeb565b6020908102919091010152610c8f81612f81565b9050610bf7565b509392505050565b610ca66114e8565b610cc25760405162461bcd60e51b815260040161080d90612ec3565b610ccc828261171c565b5050565b336001600160a01b038416811480610d0d57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610d4d5760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b604482015260640161080d565b8151835114610d905760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161080d565b60005b8351811015610e6057828181518110610dae57610dae612eeb565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610def57610def612eeb565b60200260200101518152602001908152602001600020541015610e4e5760405162461bcd60e51b8152602060048201526017602482015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b604482015260640161080d565b610e59600182612f9a565b9050610d93565b50610e6c8484846117c2565b50505050565b610e7f3360006002611977565b610e9b3360018060405180602001604052806000815250611a9c565b565b610ea56114e8565b610ec15760405162461bcd60e51b815260040161080d90612ec3565b61081f81611b75565b6001805461072790612e5a565b610edf6114e8565b610efb5760405162461bcd60e51b815260040161080d90612ec3565b610b1a838383611c51565b81610f1081611582565b610b1a8383611d1b565b6060816001600160401b03811115610f3457610f346127c6565b604051908082528060200260200182016040528015610f6757816020015b6060815260200190600190039081610f525790505b50905060005b8281101561100757610fd730858584818110610f8b57610f8b612eeb565b9050602002810190610f9d9190612fad565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611dca92505050565b828281518110610fe957610fe9612eeb565b60200260200101819052508080610fff90612f81565b915050610f6d565b5092915050565b60006110186114e8565b6110345760405162461bcd60e51b815260040161080d90612ec3565b8560000361106c5760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b604482015260640161080d565b6000600b5490506110b4818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611df692505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d60016110ea8a84612f9a565b6110f49190612ff3565b8888888860405161110995949392919061302f565b60405180910390a25095945050505050565b6005805461072790612e5a565b846001600160a01b03811633146111425761114233611582565b6109f78686868686611e5a565b336001600160a01b03841681148061118c57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b6111cc5760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b604482015260640161080d565b6001600160a01b03841660009081526002602090815260408083208684529091529020548211156112395760405162461bcd60e51b8152602060048201526017602482015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b604482015260640161080d565b610e6c848484611977565b6060600061125160095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156112a157602002820191906000526020600020905b81548152602001906001019080831161128d575b5050505050905060005b828110156113a5578181815181106112c5576112c5612eeb565b602002602001015185101561139357600a60008383815181106112ea576112ea612eeb565b60200260200101518152602001908152602001600020805461130b90612e5a565b80601f016020809104026020016040519081016040528092919081815260200182805461133790612e5a565b80156113845780601f1061135957610100808354040283529160200191611384565b820191906000526020600020905b81548152906001019060200180831161136757829003601f168201915b50505050509350505050919050565b61139e600182612f9a565b90506112ab565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015260640161080d565b6060816000036114075750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611431578061141b81612f81565b915061142a9050600a83612f44565b915061140b565b6000816001600160401b0381111561144b5761144b6127c6565b6040519080825280601f01601f191660200182016040528015611475576020820181803683370190505b5090505b84156114e05761148a600183612ff3565b9150611497600a86613068565b6114a2906030612f9a565b60f81b8183815181106114b7576114b7612eeb565b60200101906001600160f81b031916908160001a9053506114d9600a86612f44565b9450611479565b949350505050565b60006114fc6006546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b610b1a83838360405180602001604052806000815250611a9c565b600c5460ff161561081f576daaeb6d7670e522a718067333cd4e3b1561081f57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa1580156115fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161e919061307c565b61081f57604051633b79c77360e21b81526001600160a01b038216600482015260240161080d565b6001600160a01b03851633148061168057506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6116c15760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b604482015260640161080d565b6116ce8585858585611ee2565b5050505050565b600c805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b6127108111156117605760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161080d565b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b0383166118095760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b604482015260640161080d565b805182511461182a5760405162461bcd60e51b815260040161080d90612f58565b600033905061184d81856000868660405180602001604052806000815250612095565b60005b835181101561191857600084828151811061186d5761186d612eeb565b60200260200101519050600084838151811061188b5761188b612eeb565b6020908102919091018101516001600160a01b03891660009081526002835260408082208683529093529190912054909150818110156118dd5760405162461bcd60e51b815260040161080d90613099565b6001600160a01b038816600090815260026020908152604080832095835294905292909220910390558061191081612f81565b915050611850565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516119699291906130c3565b60405180910390a450505050565b6001600160a01b0383166119be5760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b604482015260640161080d565b336119ed818560006119cf876121aa565b6119d8876121aa565b60405180602001604052806000815250612095565b6001600160a01b038416600090815260026020908152604080832086845290915290205482811015611a315760405162461bcd60e51b815260040161080d90613099565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b038416611ac25760405162461bcd60e51b815260040161080d906130f1565b33611ae281600087611ad3886121aa565b611adc886121aa565b87612095565b6001600160a01b038516600090815260026020908152604080832087845290915281208054859290611b15908490612f9a565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46116ce816000878787876121f5565b600060058054611b8490612e5a565b80601f0160208091040260200160405190810160405280929190818152602001828054611bb090612e5a565b8015611bfd5780601f10611bd257610100808354040283529160200191611bfd565b820191906000526020600020905b815481529060010190602001808311611be057829003601f168201915b505050505090508160059081611c13919061315d565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611c4592919061321c565b60405180910390a15050565b612710811115611c955760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161080d565b6040805180820182526001600160a01b038481168083526020808401868152600089815260088352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b336001600160a01b0383168103611d655760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b604482015260640161080d565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101611d0e565b6060611def83836040518060600160405280602781526020016133b760279139612348565b9392505050565b600080611e038486612f9a565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a60205260409020909250829150611e51848261315d565b50935093915050565b6001600160a01b038516331480611e9457506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b611ed55760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b604482015260640161080d565b6116ce8585858585612425565b8151835114611f035760405162461bcd60e51b815260040161080d90612f58565b6001600160a01b038416611f295760405162461bcd60e51b815260040161080d906130f1565b33611f38818787878787612095565b60005b845181101561202f576000858281518110611f5857611f58612eeb565b602002602001015190506000858381518110611f7657611f76612eeb565b6020908102919091018101516001600160a01b038b166000908152600283526040808220868352909352919091205490915081811015611fc85760405162461bcd60e51b815260040161080d90613099565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d16835290815282822086835290529081208054849290612014908490612f9a565b925050819055505050508061202890612f81565b9050611f3b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161207f9291906130c3565b60405180910390a46109f781878787878761254b565b6001600160a01b03851661211c5760005b835181101561211a578281815181106120c1576120c1612eeb565b6020026020010151600e60008684815181106120df576120df612eeb565b6020026020010151815260200190815260200160002060008282546121049190612f9a565b90915550612113905081612f81565b90506120a6565b505b6001600160a01b0384166109f75760005b83518110156121a15782818151811061214857612148612eeb565b6020026020010151600e600086848151811061216657612166612eeb565b60200260200101518152602001908152602001600020600082825461218b9190612ff3565b9091555061219a905081612f81565b905061212d565b50505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106121e4576121e4612eeb565b602090810291909101015292915050565b6001600160a01b0384163b156109f75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906122399089908990889088908890600401613241565b6020604051808303816000875af1925050508015612274575060408051601f3d908101601f1916820190925261227191810190613286565b60015b6122f6576122806132a3565b806308c379a0036122b957506122946132bf565b8061229f57506122bb565b8060405162461bcd60e51b815260040161080d919061272a565b505b60405162461bcd60e51b815260206004820152601060248201526f10a2a92198989a9aa922a1a2a4ab22a960811b604482015260640161080d565b6001600160e01b0319811663f23a6e6160e01b146121a15760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b604482015260640161080d565b60606001600160a01b0384163b6123b05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161080d565b600080856001600160a01b0316856040516123cb9190613348565b600060405180830381855af49150503d8060008114612406576040519150601f19603f3d011682016040523d82523d6000602084013e61240b565b606091505b509150915061241b828286612628565b9695505050505050565b6001600160a01b03841661244b5760405162461bcd60e51b815260040161080d906130f1565b3361245b818787611ad3886121aa565b6001600160a01b03861660009081526002602090815260408083208784529091529020548381101561249f5760405162461bcd60e51b815260040161080d90613099565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a168352908152828220888352905290812080548692906124eb908490612f9a565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46121a18288888888886121f5565b6001600160a01b0384163b156109f75760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061258f9089908990889088908890600401613364565b6020604051808303816000875af19250505080156125ca575060408051601f3d908101601f191682019092526125c791810190613286565b60015b6125d6576122806132a3565b6001600160e01b0319811663bc197c8160e01b146121a15760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b604482015260640161080d565b60608315612637575081611def565b8251156126475782518084602001fd5b8160405162461bcd60e51b815260040161080d919061272a565b80356001600160a01b038116811461267857600080fd5b919050565b6000806040838503121561269057600080fd5b61269983612661565b946020939093013593505050565b6001600160e01b03198116811461081f57600080fd5b6000602082840312156126cf57600080fd5b8135611def816126a7565b60005b838110156126f55781810151838201526020016126dd565b50506000910152565b600081518084526127168160208601602086016126da565b601f01601f19169290920160200192915050565b602081526000611def60208301846126fe565b60006020828403121561274f57600080fd5b5035919050565b60006020828403121561276857600080fd5b611def82612661565b6000806040838503121561278457600080fd5b50508035926020909101359150565b6000806000606084860312156127a857600080fd5b6127b184612661565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b0381118282101715612801576128016127c6565b6040525050565b60006001600160401b03821115612821576128216127c6565b5060051b60200190565b600082601f83011261283c57600080fd5b8135602061284982612808565b60405161285682826127dc565b83815260059390931b850182019282810191508684111561287657600080fd5b8286015b84811015612891578035835291830191830161287a565b509695505050505050565b60006001600160401b038311156128b5576128b56127c6565b6040516128cc601f8501601f1916602001826127dc565b8091508381528484840111156128e157600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261290a57600080fd5b611def8383356020850161289c565b600080600080600060a0868803121561293157600080fd5b61293a86612661565b945061294860208701612661565b935060408601356001600160401b038082111561296457600080fd5b61297089838a0161282b565b9450606088013591508082111561298657600080fd5b61299289838a0161282b565b935060808801359150808211156129a857600080fd5b506129b5888289016128f9565b9150509295509295909350565b801515811461081f57600080fd5b6000602082840312156129e257600080fd5b8135611def816129c2565b60008060408385031215612a0057600080fd5b82356001600160401b0380821115612a1757600080fd5b818501915085601f830112612a2b57600080fd5b81356020612a3882612808565b604051612a4582826127dc565b83815260059390931b8501820192828101915089841115612a6557600080fd5b948201945b83861015612a8a57612a7b86612661565b82529482019490820190612a6a565b96505086013592505080821115612aa057600080fd5b50612aad8582860161282b565b9150509250929050565b600081518084526020808501945080840160005b83811015612ae757815187529582019590820190600101612acb565b509495945050505050565b602081526000611def6020830184612ab7565b600080600060608486031215612b1a57600080fd5b612b2384612661565b925060208401356001600160401b0380821115612b3f57600080fd5b612b4b8783880161282b565b93506040860135915080821115612b6157600080fd5b50612b6e8682870161282b565b9150509250925092565b600060208284031215612b8a57600080fd5b81356001600160401b03811115612ba057600080fd5b8201601f81018413612bb157600080fd5b6114e08482356020840161289c565b600080600060608486031215612bd557600080fd5b83359250612be560208501612661565b9150604084013590509250925092565b60008060408385031215612c0857600080fd5b612c1183612661565b91506020830135612c21816129c2565b809150509250929050565b60008060208385031215612c3f57600080fd5b82356001600160401b0380821115612c5657600080fd5b818501915085601f830112612c6a57600080fd5b813581811115612c7957600080fd5b8660208260051b8501011115612c8e57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612cf557603f19888603018452612ce38583516126fe565b94509285019290850190600101612cc7565b5092979650505050505050565b60008083601f840112612d1457600080fd5b5081356001600160401b03811115612d2b57600080fd5b602083019150836020828501011115612d4357600080fd5b9250929050565b600080600080600060608688031215612d6257600080fd5b8535945060208601356001600160401b0380821115612d8057600080fd5b612d8c89838a01612d02565b90965094506040880135915080821115612da557600080fd5b50612db288828901612d02565b969995985093965092949392505050565b60008060408385031215612dd657600080fd5b612ddf83612661565b9150612ded60208401612661565b90509250929050565b600080600080600060a08688031215612e0e57600080fd5b612e1786612661565b9450612e2560208701612661565b9350604086013592506060860135915060808601356001600160401b03811115612e4e57600080fd5b6129b5888289016128f9565b600181811c90821680612e6e57607f821691505b602082108103612e8e57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351612ea68184602088016126da565b835190830190612eba8183602088016126da565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761071457610714612f01565b634e487b7160e01b600052601260045260246000fd5b600082612f5357612f53612f2e565b500490565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b600060018201612f9357612f93612f01565b5060010190565b8082018082111561071457610714612f01565b6000808335601e19843603018112612fc457600080fd5b8301803591506001600160401b03821115612fde57600080fd5b602001915036819003821315612d4357600080fd5b8181038181111561071457610714612f01565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000613049606083018688613006565b828103604084015261305c818587613006565b98975050505050505050565b60008261307757613077612f2e565b500690565b60006020828403121561308e57600080fd5b8151611def816129c2565b60208082526010908201526f125394d551919250d251539517d0905360821b604082015260600190565b6040815260006130d66040830185612ab7565b82810360208401526130e88185612ab7565b95945050505050565b6020808252600c908201526b2a27afad22a927afa0a2222960a11b604082015260600190565b601f821115610b1a57600081815260208120601f850160051c8101602086101561313e5750805b601f850160051c820191505b818110156109f75782815560010161314a565b81516001600160401b03811115613176576131766127c6565b61318a816131848454612e5a565b84613117565b602080601f8311600181146131bf57600084156131a75750858301515b600019600386901b1c1916600185901b1785556109f7565b600085815260208120601f198616915b828110156131ee578886015182559484019460019091019084016131cf565b508582101561320c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061322f60408301856126fe565b82810360208401526130e881856126fe565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061327b908301846126fe565b979650505050505050565b60006020828403121561329857600080fd5b8151611def816126a7565b600060033d11156132bc5760046000803e5060005160e01c5b90565b600060443d10156132cd5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156132fc57505050505090565b82850191508151818111156133145750505050505090565b843d870101602082850101111561332e5750505050505090565b61333d602082860101876127dc565b509095945050505050565b6000825161335a8184602087016126da565b9190910192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061339090830186612ab7565b82810360608401526133a28186612ab7565b9050828103608084015261305c81856126fe56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bd8fac804e6aeb08f950a2c358b94965e223ee08591d90fa084ed498de8c0ccc64736f6c63430008130033",
    "sourceMap": "124:573:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:64:18;;;;;;;;;;-1:-1:-1;645:64:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:46;;;585:2;570:18;645:64:18;;;;;;;;7447:449:17;;;;;;;;;;-1:-1:-1;7447:449:17;;;;;:::i;:::-;;:::i;:::-;;;1184:14:46;;1177:22;1159:41;;1147:2;1132:18;7447:449:17;1019:187:46;418:18:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3144:219:17:-;;;;;;;;;;-1:-1:-1;3144:219:17;;;;;:::i;:::-;;:::i;1133:173:31:-;;;;;;;;;;-1:-1:-1;1133:173:31;;;;;:::i;:::-;;:::i;:::-;;1277:203:24;;;;;;;;;;-1:-1:-1;1277:203:24;;;;;:::i;:::-;;:::i;1421:347:32:-;;;;;;;;;;-1:-1:-1;1421:347:32;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2788:32:46;;;2770:51;;2852:2;2837:18;;2830:34;;;;2743:18;1421:347:32;2596:274:46;4524:534:17;;;;;;:::i;:::-;;:::i;9142:303::-;;;;;;;;;;-1:-1:-1;9142:303:17;;;;;:::i;:::-;;:::i;243:208:29:-;;;;;;;;;;-1:-1:-1;243:208:29;;;;;:::i;:::-;;:::i;8160:112:17:-;;;;;;;;;;-1:-1:-1;8244:21:17;;8160:112;;806:142:30;;;;;;;;;;;;905:42;806:142;;;;;-1:-1:-1;;;;;6717:32:46;;;6699:51;;6687:2;6672:18;806:142:30;6520:236:46;313:274:44;;;;;;;;;;-1:-1:-1;313:274:44;;;;;:::i;:::-;;:::i;2008:381:32:-;;;;;;;;;;-1:-1:-1;2008:381:32;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6951:32:46;;;6933:51;;7032:6;7020:19;;;7015:2;7000:18;;6993:47;6906:18;2008:381:32;6761:285:46;1788:482:18;;;;;;;;;;-1:-1:-1;1788:482:18;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;205:31:29:-;;;;;;;;;;-1:-1:-1;205:31:29;;;;;;;;3087:256:32;;;;;;;;;;-1:-1:-1;3087:256:32;;;;;:::i;:::-;;:::i;980:96:24:-;;;;;;;;;;-1:-1:-1;1054:8:24;:15;980:96;;6621:564:17;;;;;;;;;;-1:-1:-1;6621:564:17;;;;;:::i;:::-;;:::i;593:102:44:-;;;;;;;;;;;;;:::i;871:86:31:-;;;;;;;;;;-1:-1:-1;944:6:31;;-1:-1:-1;;;;;944:6:31;871:86;;1003:188:25;;;;;;;;;;-1:-1:-1;1003:188:25;;;;;:::i;:::-;;:::i;442:20:18:-;;;;;;;;;;;;;:::i;4281:288:32:-;;;;;;;;;;-1:-1:-1;4281:288:32;;;;;:::i;:::-;;:::i;8505:227:17:-;;;;;;;;;;-1:-1:-1;8505:227:17;;;;;:::i;:::-;;:::i;698:319:28:-;;;;;;;;;;-1:-1:-1;698:319:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:32:-;;;;;;;;;;-1:-1:-1;2599:16:32;;-1:-1:-1;;;;;2599:16:32;;;-1:-1:-1;;;2624:10:32;;;;2499:144;;2347:46:17;;;;;;;;;;-1:-1:-1;2347:46:17;;;;;:::i;:::-;;;;;;;;;;;;;;1254:592:27;;;;;;;;;;-1:-1:-1;1254:592:27;;;;;:::i;:::-;;:::i;565:34:25:-;;;;;;;;;;;;;:::i;716:68:18:-;;;;;;;;;;-1:-1:-1;716:68:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;8799:271:17;;;;;;;;;;-1:-1:-1;8799:271:17;;;;;:::i;:::-;;:::i;5951:376::-;;;;;;;;;;-1:-1:-1;5951:376:17;;;;;:::i;:::-;;:::i;7447:449::-;7550:4;-1:-1:-1;;;;;;;;;7585:25:17;;;;:100;;-1:-1:-1;;;;;;;;;;7660:25:17;;;7585:100;:176;;;-1:-1:-1;;;;;;;;;;7736:25:17;;;7585:176;:279;;;-1:-1:-1;;;;;;;7823:41:17;;-1:-1:-1;;;7823:41:17;7585:279;7566:298;7447:449;-1:-1:-1;;7447:449:17:o;418:18:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3144:219:17:-;3213:13;3238:22;3263:21;3275:8;3263:11;:21::i;:::-;3238:46;;3325:8;3335:19;:8;:17;:19::i;:::-;3308:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3294:62;;;3144:219;;;:::o;1133:173:31:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:31;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;1277:203:24:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:24;;15844:2:46;1407:23:24;;;15826:21:46;15883:2;15863:18;;;15856:30;-1:-1:-1;;;15902:18:46;;;15895:43;15955:18;;1407:23:24;15642:337:46;1360:81:24;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1421:347:32:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:32;;-1:-1:-1;1613:66:32;;;-1:-1:-1;1755:6:32;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;4524:534:17:-;245:1:43;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:43;;16880:2:46;540:63:43;;;16862:21:46;16919:2;16899:18;;;16892:30;16958:33;16938:18;;;16931:61;17009:18;;540:63:43;16678:355:46;540:63:43;245:1;678:7;:18;8244:21:17;;4679:8:::1;:30;4671:53;;;::::0;-1:-1:-1;;;4671:53:17;;17240:2:46;4671:53:17::1;::::0;::::1;17222:21:46::0;17279:2;17259:18;;;17252:30;-1:-1:-1;;;17298:18:46;;;17291:40;17348:18;;4671:53:17::1;17038:334:46::0;4671:53:17::1;4734:44;4746:10;4758:8;4768:9;4734:11;:44::i;:::-;4855:54;4878:9;4889:8;4899:9;4855:22;:54::i;:::-;5031:8;5020:9;-1:-1:-1::0;;;;;4994:57:17::1;5008:10;-1:-1:-1::0;;;;;4994:57:17::1;;5041:9;4994:57;;;;597:25:46::0;;585:2;570:18;;451:177;4994:57:17::1;;;;;;;;-1:-1:-1::0;;202:1:43;851:7;:22;-1:-1:-1;4524:534:17:o;9142:303::-;9365:4;-1:-1:-1;;;;;2123:18:30;;2131:10;2123:18;2119:81;;2157:32;2178:10;2157:20;:32::i;:::-;9381:57:17::1;9409:4;9415:2;9419:3;9424:7;9433:4;9381:27;:57::i;:::-;9142:303:::0;;;;;;:::o;243:208:29:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:29;;17579:2:46;313:84:29;;;17561:21:46;17618:2;17598:18;;;17591:30;17657:34;17637:18;;;17630:62;-1:-1:-1;;;17708:18:46;;;17701:41;17759:19;;313:84:29;17377:407:46;313:84:29;407:37;431:12;407:23;:37::i;313:274:44:-;458:13;;450:58;;;;-1:-1:-1;;;450:58:44;;17991:2:46;450:58:44;;;17973:21:46;;;18010:18;;;18003:30;18069:34;18049:18;;;18042:62;18121:18;;450:58:44;17789:356:46;450:58:44;526:9;539:1;526:14;518:62;;;;-1:-1:-1;;;518:62:44;;18352:2:46;518:62:44;;;18334:21:46;18391:2;18371:18;;;18364:30;18430:34;18410:18;;;18403:62;-1:-1:-1;;;18481:18:46;;;18474:33;18524:19;;518:62:44;18150:399:46;518:62:44;313:274;;;:::o;2008:381:32:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:32;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:32;;;-1:-1:-1;;;2295:10:32;;;;2211:171;2192:190;;;;;2008:381;;;:::o;1788:482:18:-;1939:16;1998:3;:10;1979:8;:15;:29;1971:57;;;;-1:-1:-1;;;1971:57:18;;;;;;;:::i;:::-;2039:30;2086:8;:15;-1:-1:-1;;;;;2072:30:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2072:30:18;;2039:63;;2118:9;2113:120;2137:8;:15;2133:1;:19;2113:120;;;2192:9;:22;2202:8;2211:1;2202:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2192:22:18;-1:-1:-1;;;;;2192:22:18;;;;;;;;;;;;:30;2215:3;2219:1;2215:6;;;;;;;;:::i;:::-;;;;;;;2192:30;;;;;;;;;;;;2173:13;2187:1;2173:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2154:3;;;:::i;:::-;;;2113:120;;;-1:-1:-1;2250:13:18;1788:482;-1:-1:-1;;;1788:482:18:o;3087:256:32:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:32;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;:::-;3087:256;;:::o;6621:564:17:-;6785:10;-1:-1:-1;;;;;6814:16:17;;;;;:52;;-1:-1:-1;;;;;;6834:24:17;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;6814:52;6806:82;;;;-1:-1:-1;;;6806:82:17;;19240:2:46;6806:82:17;;;19222:21:46;19279:2;19259:18;;;19252:30;-1:-1:-1;;;19298:18:46;;;19291:47;19355:18;;6806:82:17;19038:341:46;6806:82:17;6926:8;:15;6906:9;:16;:35;6898:63;;;;-1:-1:-1;;;6898:63:17;;19586:2:46;6898:63:17;;;19568:21:46;19625:2;19605:18;;;19598:30;-1:-1:-1;;;19644:18:46;;;19637:45;19699:18;;6898:63:17;19384:339:46;6898:63:17;6977:9;6972:157;6996:9;:16;6992:1;:20;6972:157;;;7079:8;7088:1;7079:11;;;;;;;;:::i;:::-;;;;;;;7044:9;:17;7054:6;-1:-1:-1;;;;;7044:17:17;-1:-1:-1;;;;;7044:17:17;;;;;;;;;;;;:31;7062:9;7072:1;7062:12;;;;;;;;:::i;:::-;;;;;;;7044:31;;;;;;;;;;;;:46;;7036:82;;;;-1:-1:-1;;;7036:82:17;;19930:2:46;7036:82:17;;;19912:21:46;19969:2;19949:18;;;19942:30;-1:-1:-1;;;19988:18:46;;;19981:53;20051:18;;7036:82:17;19728:347:46;7036:82:17;7014:6;7019:1;7014:6;;:::i;:::-;;;6972:157;;;;7139:39;7150:6;7158:9;7169:8;7139:10;:39::i;:::-;6758:427;6621:564;;;:::o;593:102:44:-;628:23;634:10;646:1;649;628:5;:23::i;:::-;661:27;667:10;679:1;682;661:27;;;;;;;;;;;;:5;:27::i;:::-;593:102::o;1003:188:25:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:25;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;442:20:18:-;;;;;;;:::i;4281:288:32:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:32;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;8505:227:17:-;8658:8;2296:30:30;2317:8;2296:20;:30::i;:::-;8682:43:17::1;8706:8;8716;8682:23;:43::i;698:319:28:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:28;;-1:-1:-1;;;922:54:28:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;1254:592:27:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:27;;;;;;;:::i;1436:70::-;1520:7;1531:1;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:27;;20938:2:46;1548:15:27;;;20920:21:46;20977:1;20957:18;;;20950:29;-1:-1:-1;;;20995:18:46;;;20988:35;21040:18;;1548:15:27;20736:328:46;1516:58:27;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:27;;-1:-1:-1;;;1669:55:27:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:27;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;565:34:25:-;;;;;;;:::i;8799:271:17:-;8997:4;-1:-1:-1;;;;;2123:18:30;;2131:10;2123:18;2119:81;;2157:32;2178:10;2157:20;:32::i;:::-;9013:50:17::1;9036:4;9042:2;9046;9050:6;9058:4;9013:22;:50::i;5951:376::-:0;6090:10;-1:-1:-1;;;;;6119:16:17;;;;;:52;;-1:-1:-1;;;;;;6139:24:17;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;6119:52;6111:82;;;;-1:-1:-1;;;6111:82:17;;19240:2:46;6111:82:17;;;19222:21:46;19279:2;19259:18;;;19252:30;-1:-1:-1;;;19298:18:46;;;19291:47;19355:18;;6111:82:17;19038:341:46;6111:82:17;-1:-1:-1;;;;;6211:17:17;;;;;;:9;:17;;;;;;;;:27;;;;;;;;;:38;-1:-1:-1;6211:38:17;6203:74;;;;-1:-1:-1;;;6203:74:17;;19930:2:46;6203:74:17;;;19912:21:46;19969:2;19949:18;;;19942:30;-1:-1:-1;;;19988:18:46;;;19981:53;20051:18;;6203:74:17;19728:347:46;6203:74:17;6288:32;6294:6;6302:8;6312:7;6288:5;:32::i;2153:390:24:-;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:24;;-1:-1:-1;;;2511:25:24;;22187:2:46;2511:25:24;;;22169:21:46;22226:2;22206:18;;;22199:30;-1:-1:-1;;;22245:18:46;;;22238:45;22300:18;;2511:25:24;21985:339:46;305:703:42;361:13;578:5;587:1;578:10;574:51;;-1:-1:-1;;604:10:42;;;;;;;;;;;;-1:-1:-1;;;604:10:42;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:42;;-1:-1:-1;750:2:42;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:42;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:42;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:42;;;;;;;;-1:-1:-1;949:11:42;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:42:o;10717:115:17:-;10781:4;10818:7;944:6:31;;-1:-1:-1;;;;;944:6:31;;871:86;10818:7:17;-1:-1:-1;;;;;10804:21:17;:10;-1:-1:-1;;;;;10804:21:17;;10797:28;;10717:115;:::o;1421:172:31:-;1501:6;;;-1:-1:-1;;;;;1517:18:31;;;-1:-1:-1;;;;;;1517:18:31;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10016:193:17:-;10161:41;10167:9;10178:8;10188:9;10161:41;;;;;;;;;;;;:5;:41::i;2350:477:30:-;2539:19;;;;2535:286;;;905:42;2578:45;:49;2574:237;;2652:67;;-1:-1:-1;;;2652:67:30;;2703:4;2652:67;;;22658:34:46;-1:-1:-1;;;;;22728:15:46;;22708:18;;;22701:43;905:42:30;;2652;;22593:18:46;;2652:67:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2647:150;;2750:28;;-1:-1:-1;;;2750:28:30;;-1:-1:-1;;;;;6717:32:46;;2750:28:30;;;6699:51:46;6672:18;;2750:28:30;6520:236:46;3088:360:18;-1:-1:-1;;;;;3300:18:18;;3308:10;3300:18;;:56;;-1:-1:-1;;;;;;3322:22:18;;;;;;:16;:22;;;;;;;;3345:10;3322:34;;;;;;;;;;3300:56;3292:87;;;;-1:-1:-1;;;3292:87:18;;23207:2:46;3292:87:18;;;23189:21:46;23246:2;23226:18;;;23219:30;-1:-1:-1;;;23265:18:46;;;23258:48;23323:18;;3292:87:18;23005:342:46;3292:87:18;3389:52;3412:4;3418:2;3422:3;3427:7;3436:4;3389:22;:52::i;:::-;3088:360;;;;;:::o;457:160:29:-;528:19;:34;;-1:-1:-1;;528:34:29;;;;;;;;;;577:33;;1159:41:46;;;577:33:29;;1147:2:46;1132:18;577:33:29;;;;;;;457:160;:::o;3430:334:32:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:32;;23554:2:46;3571:25:32;;;23536:21:46;23593:2;23573:18;;;23566:30;-1:-1:-1;;;23612:18:46;;;23605:45;23667:18;;3571:25:32;23352:339:46;3531:76:32;3617:16;:36;;-1:-1:-1;;;;;3617:36:32;;-1:-1:-1;;;;;;3663:32:32;;;;;-1:-1:-1;;;3663:32:32;;;;;;;;3711:46;;597:25:46;;;3711:46:32;;585:2:46;570:18;3711:46:32;;;;;;;3430:334;;:::o;7284:799:18:-;-1:-1:-1;;;;;7431:18:18;;7423:45;;;;-1:-1:-1;;;7423:45:18;;23898:2:46;7423:45:18;;;23880:21:46;23937:2;23917:18;;;23910:30;-1:-1:-1;;;23956:18:46;;;23949:44;24010:18;;7423:45:18;23696:338:46;7423:45:18;7500:7;:14;7486:3;:10;:28;7478:56;;;;-1:-1:-1;;;7478:56:18;;;;;;;:::i;:::-;7545:16;7564:10;7545:29;;7585:66;7606:8;7616:4;7630:1;7634:3;7639:7;7585:66;;;;;;;;;;;;:20;:66::i;:::-;7667:9;7662:344;7686:3;:10;7682:1;:14;7662:344;;;7717:10;7730:3;7734:1;7730:6;;;;;;;;:::i;:::-;;;;;;;7717:19;;7750:14;7767:7;7775:1;7767:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7814:15:18;;7792:19;7814:15;;;:9;:15;;;;;;:19;;;;;;;;;;;7767:10;;-1:-1:-1;7855:21:18;;;;7847:50;;;;-1:-1:-1;;;7847:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;7939:15:18;;;;;;:9;:15;;;;;;;;:19;;;;;;;;;;7961:20;;7939:42;;7698:3;;;;:::i;:::-;;;;7662:344;;;;8059:1;-1:-1:-1;;;;;8021:55:18;8045:4;-1:-1:-1;;;;;8021:55:18;8035:8;-1:-1:-1;;;;;8021:55:18;;8063:3;8068:7;8021:55;;;;;;;:::i;:::-;;;;;;;;7413:670;7284:799;;;:::o;6691:587::-;-1:-1:-1;;;;;6813:18:18;;6805:45;;;;-1:-1:-1;;;6805:45:18;;23898:2:46;6805:45:18;;;23880:21:46;23937:2;23917:18;;;23910:30;-1:-1:-1;;;23956:18:46;;;23949:44;24010:18;;6805:45:18;23696:338:46;6805:45:18;6880:10;6901:102;6880:10;6932:4;6861:16;6950:21;6968:2;6950:17;:21::i;:::-;6973:25;6991:6;6973:17;:25::i;:::-;6901:102;;;;;;;;;;;;:20;:102::i;:::-;-1:-1:-1;;;;;7036:15:18;;7014:19;7036:15;;;:9;:15;;;;;;;;:19;;;;;;;;;7073:21;;;;7065:50;;;;-1:-1:-1;;;7065:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;7149:15:18;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;7171:20;;;7149:42;;7217:54;;25028:25:46;;;25069:18;;;25062:34;;;7149:15:18;;7217:54;;;;;25001:18:46;7217:54:18;;;;;;;6795:483;;6691:587;;;:::o;5482:530::-;-1:-1:-1;;;;;5629:16:18;;5621:41;;;;-1:-1:-1;;;5621:41:18;;;;;;;:::i;:::-;5692:10;5713:102;5692:10;5673:16;5756:2;5760:21;5778:2;5760:17;:21::i;:::-;5783:25;5801:6;5783:17;:25::i;:::-;5810:4;5713:20;:102::i;:::-;-1:-1:-1;;;;;5826:13:18;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5847:6;;5826:13;:27;;5847:6;;5826:27;:::i;:::-;;;;-1:-1:-1;;5868:52:18;;;25028:25:46;;;25084:2;25069:18;;25062:34;;;-1:-1:-1;;;;;5868:52:18;;;;5901:1;;5868:52;;;;;;25001:18:46;5868:52:18;;;;;;;5931:74;5962:8;5980:1;5984:2;5988;5992:6;6000:4;5931:30;:74::i;1273:185:25:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4671:362:32:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:32;;23554:2:46;4840:25:32;;;23536:21:46;23593:2;23573:18;;;23566:30;-1:-1:-1;;;23612:18:46;;;23605:45;23667:18;;4840:25:32;23352:339:46;4807:69:32;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:32;;;;;;;;;;;;;-1:-1:-1;4886:29:32;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:32;;;;;;;;;;;-1:-1:-1;4886:81:32;;;;;;;4983:43;;597:25:46;;;4918:49:32;;4886:29;;4983:43;;570:18:46;4983:43:32;;;;;;;;4671:362;;;:::o;2457:291:18:-;2567:10;-1:-1:-1;;;;;2595:17:18;;;;2587:44;;;;-1:-1:-1;;;2587:44:18;;28242:2:46;2587:44:18;;;28224:21:46;28281:2;28261:18;;;28254:30;-1:-1:-1;;;28300:18:46;;;28293:44;28354:18;;2587:44:18;28040:338:46;2587:44:18;-1:-1:-1;;;;;2641:23:18;;;;;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;:44;;-1:-1:-1;;2641:44:18;;;;;;;;;;2700:41;;1159::46;;;2700::18;;1132:18:46;2700:41:18;1019:187:46;6538:198:41;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:41:o;2840:362:24:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:24;;;:7;3126:22;3159:16;;;;3044:34;;-1:-1:-1;3044:34:24;;-1:-1:-1;3159:36:24;3178:17;3159:16;:36;:::i;:::-;;2840:362;;;;;;:::o;2754:328:18:-;-1:-1:-1;;;;;2941:18:18;;2949:10;2941:18;;:56;;-1:-1:-1;;;;;;2963:22:18;;;;;;:16;:22;;;;;;;;2986:10;2963:34;;;;;;;;;;2941:56;2933:87;;;;-1:-1:-1;;;2933:87:18;;23207:2:46;2933:87:18;;;23189:21:46;23246:2;23226:18;;;23219:30;-1:-1:-1;;;23265:18:46;;;23258:48;23323:18;;2933:87:18;23005:342:46;2933:87:18;3030:45;3048:4;3054:2;3058;3062:6;3070:4;3030:17;:45::i;4386:967::-;4606:7;:14;4592:3;:10;:28;4584:56;;;;-1:-1:-1;;;4584:56:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;4658:16:18;;4650:41;;;;-1:-1:-1;;;4650:41:18;;;;;;;:::i;:::-;4721:10;4742:60;4721:10;4773:4;4779:2;4783:3;4788:7;4797:4;4742:20;:60::i;:::-;4818:9;4813:385;4837:3;:10;4833:1;:14;4813:385;;;4868:10;4881:3;4885:1;4881:6;;;;;;;;:::i;:::-;;;;;;;4868:19;;4901:14;4918:7;4926:1;4918:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4965:15:18;;4943:19;4965:15;;;:9;:15;;;;;;:19;;;;;;;;;;;4918:10;;-1:-1:-1;5006:21:18;;;;4998:50;;;;-1:-1:-1;;;4998:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;5090:15:18;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;5112:20;;;5090:42;;5160:13;;;;;;;;;;;:17;;;;;;;;:27;;5126:6;;5090:15;5160:27;;5126:6;;5160:27;:::i;:::-;;;;;;;;4854:344;;;4849:3;;;;:::i;:::-;;;4813:385;;;;5243:2;-1:-1:-1;;;;;5213:47:18;5237:4;-1:-1:-1;;;;;5213:47:18;5227:8;-1:-1:-1;;;;;5213:47:18;;5247:3;5252:7;5213:47;;;;;;;:::i;:::-;;;;;;;;5271:75;5307:8;5317:4;5323:2;5327:3;5332:7;5341:4;5271:35;:75::i;11334:632:17:-;-1:-1:-1;;;;;11646:18:17;;11642:155;;11685:9;11680:107;11704:3;:10;11700:1;:14;11680:107;;;11762:7;11770:1;11762:10;;;;;;;;:::i;:::-;;;;;;;11739:11;:19;11751:3;11755:1;11751:6;;;;;;;;:::i;:::-;;;;;;;11739:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11716:3:17;;-1:-1:-1;11716:3:17;;:::i;:::-;;;11680:107;;;;11642:155;-1:-1:-1;;;;;11811:16:17;;11807:153;;11848:9;11843:107;11867:3;:10;11863:1;:14;11843:107;;;11925:7;11933:1;11925:10;;;;;;;;:::i;:::-;;;;;;;11902:11;:19;11914:3;11918:1;11914:6;;;;;;;;:::i;:::-;;;;;;;11902:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11879:3:17;;-1:-1:-1;11879:3:17;;:::i;:::-;;;11843:107;;;;11334:632;;;;;;:::o;9722:193:18:-;9841:16;;;9855:1;9841:16;;;;;;;;;9788;;9816:22;;9841:16;;;;;;;;;;;;-1:-1:-1;9841:16:18;9816:41;;9878:7;9867:5;9873:1;9867:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;9903:5;9722:193;-1:-1:-1;;9722:193:18:o;8309:667::-;-1:-1:-1;;;;;8516:14:18;;;:18;8512:458;;8554:72;;-1:-1:-1;;;8554:72:18;;-1:-1:-1;;;;;8554:38:18;;;;;:72;;8593:8;;8603:4;;8609:2;;8613:6;;8621:4;;8554:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8554:72:18;;;;;;;;-1:-1:-1;;8554:72:18;;;;;;;;;;;;:::i;:::-;;;8550:410;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8872:6;8865:14;;-1:-1:-1;;;8865:14:18;;;;;;;;:::i;8550:410::-;;;8919:26;;-1:-1:-1;;;8919:26:18;;30265:2:46;8919:26:18;;;30247:21:46;30304:2;30284:18;;;30277:30;-1:-1:-1;;;30323:18:46;;;30316:46;30379:18;;8919:26:18;30063:340:46;8550:410:18;-1:-1:-1;;;;;;8675:55:18;;-1:-1:-1;;;8675:55:18;8671:127;;8754:25;;-1:-1:-1;;;8754:25:18;;30610:2:46;8754:25:18;;;30592:21:46;30649:2;30629:18;;;30622:30;-1:-1:-1;;;30668:18:46;;;30661:45;30723:18;;8754:25:18;30408:339:46;6922:387:41;7063:12;-1:-1:-1;;;;;1427:19:41;;;7087:69;;;;-1:-1:-1;;;7087:69:41;;30954:2:46;7087:69:41;;;30936:21:46;30993:2;30973:18;;;30966:30;31032:34;31012:18;;;31005:62;-1:-1:-1;;;31083:18:46;;;31076:36;31129:19;;7087:69:41;30752:402:46;7087:69:41;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:41;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:41:o;3636:744:18:-;-1:-1:-1;;;;;3817:16:18;;3809:41;;;;-1:-1:-1;;;3809:41:18;;;;;;;:::i;:::-;3880:10;3901:96;3880:10;3932:4;3938:2;3942:21;3960:2;3942:17;:21::i;3901:96::-;-1:-1:-1;;;;;4030:15:18;;4008:19;4030:15;;;:9;:15;;;;;;;;:19;;;;;;;;;4067:21;;;;4059:50;;;;-1:-1:-1;;;4059:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;4143:15:18;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;4165:20;;;4143:42;;4205:13;;;;;;;;;;;:17;;;;;;;;:27;;4179:6;;4143:15;4205:27;;4179:6;;4205:27;:::i;:::-;;;;-1:-1:-1;;4248:46:18;;;25028:25:46;;;25084:2;25069:18;;25062:34;;;-1:-1:-1;;;;;4248:46:18;;;;;;;;;;;;;;25001:18:46;4248:46:18;;;;;;;4305:68;4336:8;4346:4;4352:2;4356;4360:6;4368:4;4305:30;:68::i;8982:734::-;-1:-1:-1;;;;;9214:14:18;;;:18;9210:500;;9252:79;;-1:-1:-1;;;9252:79:18;;-1:-1:-1;;;;;9252:43:18;;;;;:79;;9296:8;;9306:4;;9312:3;;9317:7;;9326:4;;9252:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9252:79:18;;;;;;;;-1:-1:-1;;9252:79:18;;;;;;;;;;;;:::i;:::-;;;9248:452;;;;:::i;:::-;-1:-1:-1;;;;;;9410:60:18;;-1:-1:-1;;;9410:60:18;9406:132;;9494:25;;-1:-1:-1;;;9494:25:18;;30610:2:46;9494:25:18;;;30592:21:46;30649:2;30629:18;;;30622:30;-1:-1:-1;;;30668:18:46;;;30661:45;30723:18;;9494:25:18;30408:339:46;7529:692:41;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:41;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:41;;;;;;;;:::i;14:173:46:-;82:20;;-1:-1:-1;;;;;131:31:46;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:46:o;633:131::-;-1:-1:-1;;;;;;707:32:46;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:250::-;1296:1;1306:113;1320:6;1317:1;1314:13;1306:113;;;1396:11;;;1390:18;1377:11;;;1370:39;1342:2;1335:10;1306:113;;;-1:-1:-1;;1453:1:46;1435:16;;1428:27;1211:250::o;1466:271::-;1508:3;1546:5;1540:12;1573:6;1568:3;1561:19;1589:76;1658:6;1651:4;1646:3;1642:14;1635:4;1628:5;1624:16;1589:76;:::i;:::-;1719:2;1698:15;-1:-1:-1;;1694:29:46;1685:39;;;;1726:4;1681:50;;1466:271;-1:-1:-1;;1466:271:46:o;1742:220::-;1891:2;1880:9;1873:21;1854:4;1911:45;1952:2;1941:9;1937:18;1929:6;1911:45;:::i;1967:180::-;2026:6;2079:2;2067:9;2058:7;2054:23;2050:32;2047:52;;;2095:1;2092;2085:12;2047:52;-1:-1:-1;2118:23:46;;1967:180;-1:-1:-1;1967:180:46:o;2152:186::-;2211:6;2264:2;2252:9;2243:7;2239:23;2235:32;2232:52;;;2280:1;2277;2270:12;2232:52;2303:29;2322:9;2303:29;:::i;2343:248::-;2411:6;2419;2472:2;2460:9;2451:7;2447:23;2443:32;2440:52;;;2488:1;2485;2478:12;2440:52;-1:-1:-1;;2511:23:46;;;2581:2;2566:18;;;2553:32;;-1:-1:-1;2343:248:46:o;2875:322::-;2952:6;2960;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3060:29;3079:9;3060:29;:::i;:::-;3050:39;3136:2;3121:18;;3108:32;;-1:-1:-1;3187:2:46;3172:18;;;3159:32;;2875:322;-1:-1:-1;;;2875:322:46:o;3202:127::-;3263:10;3258:3;3254:20;3251:1;3244:31;3294:4;3291:1;3284:15;3318:4;3315:1;3308:15;3334:249;3444:2;3425:13;;-1:-1:-1;;3421:27:46;3409:40;;-1:-1:-1;;;;;3464:34:46;;3500:22;;;3461:62;3458:88;;;3526:18;;:::i;:::-;3562:2;3555:22;-1:-1:-1;;3334:249:46:o;3588:183::-;3648:4;-1:-1:-1;;;;;3673:6:46;3670:30;3667:56;;;3703:18;;:::i;:::-;-1:-1:-1;3748:1:46;3744:14;3760:4;3740:25;;3588:183::o;3776:724::-;3830:5;3883:3;3876:4;3868:6;3864:17;3860:27;3850:55;;3901:1;3898;3891:12;3850:55;3937:6;3924:20;3963:4;3986:43;4026:2;3986:43;:::i;:::-;4058:2;4052:9;4070:31;4098:2;4090:6;4070:31;:::i;:::-;4136:18;;;4228:1;4224:10;;;;4212:23;;4208:32;;;4170:15;;;;-1:-1:-1;4252:15:46;;;4249:35;;;4280:1;4277;4270:12;4249:35;4316:2;4308:6;4304:15;4328:142;4344:6;4339:3;4336:15;4328:142;;;4410:17;;4398:30;;4448:12;;;;4361;;4328:142;;;-1:-1:-1;4488:6:46;3776:724;-1:-1:-1;;;;;;3776:724:46:o;4505:468::-;4569:5;-1:-1:-1;;;;;4595:6:46;4592:30;4589:56;;;4625:18;;:::i;:::-;4674:2;4668:9;4686:69;4743:2;4722:15;;-1:-1:-1;;4718:29:46;4749:4;4714:40;4668:9;4686:69;:::i;:::-;4773:6;4764:15;;4803:6;4795;4788:22;4843:3;4834:6;4829:3;4825:16;4822:25;4819:45;;;4860:1;4857;4850:12;4819:45;4910:6;4905:3;4898:4;4890:6;4886:17;4873:44;4965:1;4958:4;4949:6;4941;4937:19;4933:30;4926:41;;4505:468;;;;;:::o;4978:220::-;5020:5;5073:3;5066:4;5058:6;5054:17;5050:27;5040:55;;5091:1;5088;5081:12;5040:55;5113:79;5188:3;5179:6;5166:20;5159:4;5151:6;5147:17;5113:79;:::i;5203:943::-;5357:6;5365;5373;5381;5389;5442:3;5430:9;5421:7;5417:23;5413:33;5410:53;;;5459:1;5456;5449:12;5410:53;5482:29;5501:9;5482:29;:::i;:::-;5472:39;;5530:38;5564:2;5553:9;5549:18;5530:38;:::i;:::-;5520:48;;5619:2;5608:9;5604:18;5591:32;-1:-1:-1;;;;;5683:2:46;5675:6;5672:14;5669:34;;;5699:1;5696;5689:12;5669:34;5722:61;5775:7;5766:6;5755:9;5751:22;5722:61;:::i;:::-;5712:71;;5836:2;5825:9;5821:18;5808:32;5792:48;;5865:2;5855:8;5852:16;5849:36;;;5881:1;5878;5871:12;5849:36;5904:63;5959:7;5948:8;5937:9;5933:24;5904:63;:::i;:::-;5894:73;;6020:3;6009:9;6005:19;5992:33;5976:49;;6050:2;6040:8;6037:16;6034:36;;;6066:1;6063;6056:12;6034:36;;6089:51;6132:7;6121:8;6110:9;6106:24;6089:51;:::i;:::-;6079:61;;;5203:943;;;;;;;;:::o;6151:118::-;6237:5;6230:13;6223:21;6216:5;6213:32;6203:60;;6259:1;6256;6249:12;6274:241;6330:6;6383:2;6371:9;6362:7;6358:23;6354:32;6351:52;;;6399:1;6396;6389:12;6351:52;6438:9;6425:23;6457:28;6479:5;6457:28;:::i;7051:1208::-;7169:6;7177;7230:2;7218:9;7209:7;7205:23;7201:32;7198:52;;;7246:1;7243;7236:12;7198:52;7286:9;7273:23;-1:-1:-1;;;;;7356:2:46;7348:6;7345:14;7342:34;;;7372:1;7369;7362:12;7342:34;7410:6;7399:9;7395:22;7385:32;;7455:7;7448:4;7444:2;7440:13;7436:27;7426:55;;7477:1;7474;7467:12;7426:55;7513:2;7500:16;7535:4;7558:43;7598:2;7558:43;:::i;:::-;7630:2;7624:9;7642:31;7670:2;7662:6;7642:31;:::i;:::-;7708:18;;;7796:1;7792:10;;;;7784:19;;7780:28;;;7742:15;;;;-1:-1:-1;7820:19:46;;;7817:39;;;7852:1;7849;7842:12;7817:39;7876:11;;;;7896:148;7912:6;7907:3;7904:15;7896:148;;;7978:23;7997:3;7978:23;:::i;:::-;7966:36;;7929:12;;;;8022;;;;7896:148;;;8063:6;-1:-1:-1;;8107:18:46;;8094:32;;-1:-1:-1;;8138:16:46;;;8135:36;;;8167:1;8164;8157:12;8135:36;;8190:63;8245:7;8234:8;8223:9;8219:24;8190:63;:::i;:::-;8180:73;;;7051:1208;;;;;:::o;8264:435::-;8317:3;8355:5;8349:12;8382:6;8377:3;8370:19;8408:4;8437:2;8432:3;8428:12;8421:19;;8474:2;8467:5;8463:14;8495:1;8505:169;8519:6;8516:1;8513:13;8505:169;;;8580:13;;8568:26;;8614:12;;;;8649:15;;;;8541:1;8534:9;8505:169;;;-1:-1:-1;8690:3:46;;8264:435;-1:-1:-1;;;;;8264:435:46:o;8704:261::-;8883:2;8872:9;8865:21;8846:4;8903:56;8955:2;8944:9;8940:18;8932:6;8903:56;:::i;8970:669::-;9097:6;9105;9113;9166:2;9154:9;9145:7;9141:23;9137:32;9134:52;;;9182:1;9179;9172:12;9134:52;9205:29;9224:9;9205:29;:::i;:::-;9195:39;;9285:2;9274:9;9270:18;9257:32;-1:-1:-1;;;;;9349:2:46;9341:6;9338:14;9335:34;;;9365:1;9362;9355:12;9335:34;9388:61;9441:7;9432:6;9421:9;9417:22;9388:61;:::i;:::-;9378:71;;9502:2;9491:9;9487:18;9474:32;9458:48;;9531:2;9521:8;9518:16;9515:36;;;9547:1;9544;9537:12;9515:36;;9570:63;9625:7;9614:8;9603:9;9599:24;9570:63;:::i;:::-;9560:73;;;8970:669;;;;;:::o;9852:450::-;9921:6;9974:2;9962:9;9953:7;9949:23;9945:32;9942:52;;;9990:1;9987;9980:12;9942:52;10030:9;10017:23;-1:-1:-1;;;;;10055:6:46;10052:30;10049:50;;;10095:1;10092;10085:12;10049:50;10118:22;;10171:4;10163:13;;10159:27;-1:-1:-1;10149:55:46;;10200:1;10197;10190:12;10149:55;10223:73;10288:7;10283:2;10270:16;10265:2;10261;10257:11;10223:73;:::i;10307:322::-;10384:6;10392;10400;10453:2;10441:9;10432:7;10428:23;10424:32;10421:52;;;10469:1;10466;10459:12;10421:52;10505:9;10492:23;10482:33;;10534:38;10568:2;10557:9;10553:18;10534:38;:::i;:::-;10524:48;;10619:2;10608:9;10604:18;10591:32;10581:42;;10307:322;;;;;:::o;10634:315::-;10699:6;10707;10760:2;10748:9;10739:7;10735:23;10731:32;10728:52;;;10776:1;10773;10766:12;10728:52;10799:29;10818:9;10799:29;:::i;:::-;10789:39;;10878:2;10867:9;10863:18;10850:32;10891:28;10913:5;10891:28;:::i;:::-;10938:5;10928:15;;;10634:315;;;;;:::o;10954:626::-;11051:6;11059;11112:2;11100:9;11091:7;11087:23;11083:32;11080:52;;;11128:1;11125;11118:12;11080:52;11168:9;11155:23;-1:-1:-1;;;;;11238:2:46;11230:6;11227:14;11224:34;;;11254:1;11251;11244:12;11224:34;11292:6;11281:9;11277:22;11267:32;;11337:7;11330:4;11326:2;11322:13;11318:27;11308:55;;11359:1;11356;11349:12;11308:55;11399:2;11386:16;11425:2;11417:6;11414:14;11411:34;;;11441:1;11438;11431:12;11411:34;11494:7;11489:2;11479:6;11476:1;11472:14;11468:2;11464:23;11460:32;11457:45;11454:65;;;11515:1;11512;11505:12;11454:65;11546:2;11538:11;;;;;11568:6;;-1:-1:-1;10954:626:46;;-1:-1:-1;;;;10954:626:46:o;11585:801::-;11745:4;11774:2;11814;11803:9;11799:18;11844:2;11833:9;11826:21;11867:6;11902;11896:13;11933:6;11925;11918:22;11971:2;11960:9;11956:18;11949:25;;12033:2;12023:6;12020:1;12016:14;12005:9;12001:30;11997:39;11983:53;;12071:2;12063:6;12059:15;12092:1;12102:255;12116:6;12113:1;12110:13;12102:255;;;12209:2;12205:7;12193:9;12185:6;12181:22;12177:36;12172:3;12165:49;12237:40;12270:6;12261;12255:13;12237:40;:::i;:::-;12227:50;-1:-1:-1;12335:12:46;;;;12300:15;;;;12138:1;12131:9;12102:255;;;-1:-1:-1;12374:6:46;;11585:801;-1:-1:-1;;;;;;;11585:801:46:o;12391:348::-;12443:8;12453:6;12507:3;12500:4;12492:6;12488:17;12484:27;12474:55;;12525:1;12522;12515:12;12474:55;-1:-1:-1;12548:20:46;;-1:-1:-1;;;;;12580:30:46;;12577:50;;;12623:1;12620;12613:12;12577:50;12660:4;12652:6;12648:17;12636:29;;12712:3;12705:4;12696:6;12688;12684:19;12680:30;12677:39;12674:59;;;12729:1;12726;12719:12;12674:59;12391:348;;;;;:::o;12744:788::-;12844:6;12852;12860;12868;12876;12929:2;12917:9;12908:7;12904:23;12900:32;12897:52;;;12945:1;12942;12935:12;12897:52;12981:9;12968:23;12958:33;;13042:2;13031:9;13027:18;13014:32;-1:-1:-1;;;;;13106:2:46;13098:6;13095:14;13092:34;;;13122:1;13119;13112:12;13092:34;13161:59;13212:7;13203:6;13192:9;13188:22;13161:59;:::i;:::-;13239:8;;-1:-1:-1;13135:85:46;-1:-1:-1;13327:2:46;13312:18;;13299:32;;-1:-1:-1;13343:16:46;;;13340:36;;;13372:1;13369;13362:12;13340:36;;13411:61;13464:7;13453:8;13442:9;13438:24;13411:61;:::i;:::-;12744:788;;;;-1:-1:-1;12744:788:46;;-1:-1:-1;13491:8:46;;13385:87;12744:788;-1:-1:-1;;;12744:788:46:o;13537:260::-;13605:6;13613;13666:2;13654:9;13645:7;13641:23;13637:32;13634:52;;;13682:1;13679;13672:12;13634:52;13705:29;13724:9;13705:29;:::i;:::-;13695:39;;13753:38;13787:2;13776:9;13772:18;13753:38;:::i;:::-;13743:48;;13537:260;;;;;:::o;13802:606::-;13906:6;13914;13922;13930;13938;13991:3;13979:9;13970:7;13966:23;13962:33;13959:53;;;14008:1;14005;13998:12;13959:53;14031:29;14050:9;14031:29;:::i;:::-;14021:39;;14079:38;14113:2;14102:9;14098:18;14079:38;:::i;:::-;14069:48;;14164:2;14153:9;14149:18;14136:32;14126:42;;14215:2;14204:9;14200:18;14187:32;14177:42;;14270:3;14259:9;14255:19;14242:33;-1:-1:-1;;;;;14290:6:46;14287:30;14284:50;;;14330:1;14327;14320:12;14284:50;14353:49;14394:7;14385:6;14374:9;14370:22;14353:49;:::i;14413:380::-;14492:1;14488:12;;;;14535;;;14556:61;;14610:4;14602:6;14598:17;14588:27;;14556:61;14663:2;14655:6;14652:14;14632:18;14629:38;14626:161;;14709:10;14704:3;14700:20;14697:1;14690:31;14744:4;14741:1;14734:15;14772:4;14769:1;14762:15;14626:161;;14413:380;;;:::o;14798:496::-;14977:3;15015:6;15009:13;15031:66;15090:6;15085:3;15078:4;15070:6;15066:17;15031:66;:::i;:::-;15160:13;;15119:16;;;;15182:70;15160:13;15119:16;15229:4;15217:17;;15182:70;:::i;:::-;15268:20;;14798:496;-1:-1:-1;;;;14798:496:46:o;15299:338::-;15501:2;15483:21;;;15540:2;15520:18;;;15513:30;-1:-1:-1;;;15574:2:46;15559:18;;15552:44;15628:2;15613:18;;15299:338::o;15984:127::-;16045:10;16040:3;16036:20;16033:1;16026:31;16076:4;16073:1;16066:15;16100:4;16097:1;16090:15;16116:127;16177:10;16172:3;16168:20;16165:1;16158:31;16208:4;16205:1;16198:15;16232:4;16229:1;16222:15;16248:168;16321:9;;;16352;;16369:15;;;16363:22;;16349:37;16339:71;;16390:18;;:::i;16421:127::-;16482:10;16477:3;16473:20;16470:1;16463:31;16513:4;16510:1;16503:15;16537:4;16534:1;16527:15;16553:120;16593:1;16619;16609:35;;16624:18;;:::i;:::-;-1:-1:-1;16658:9:46;;16553:120::o;18554:339::-;18756:2;18738:21;;;18795:2;18775:18;;;18768:30;-1:-1:-1;;;18829:2:46;18814:18;;18807:45;18884:2;18869:18;;18554:339::o;18898:135::-;18937:3;18958:17;;;18955:43;;18978:18;;:::i;:::-;-1:-1:-1;19025:1:46;19014:13;;18898:135::o;20080:125::-;20145:9;;;20166:10;;;20163:36;;;20179:18;;:::i;20210:521::-;20287:4;20293:6;20353:11;20340:25;20447:2;20443:7;20432:8;20416:14;20412:29;20408:43;20388:18;20384:68;20374:96;;20466:1;20463;20456:12;20374:96;20493:33;;20545:20;;;-1:-1:-1;;;;;;20577:30:46;;20574:50;;;20620:1;20617;20610:12;20574:50;20653:4;20641:17;;-1:-1:-1;20684:14:46;20680:27;;;20670:38;;20667:58;;;20721:1;20718;20711:12;21069:128;21136:9;;;21157:11;;;21154:37;;;21171:18;;:::i;21202:267::-;21291:6;21286:3;21279:19;21343:6;21336:5;21329:4;21324:3;21320:14;21307:43;-1:-1:-1;21395:1:46;21370:16;;;21388:4;21366:27;;;21359:38;;;;21451:2;21430:15;;;-1:-1:-1;;21426:29:46;21417:39;;;21413:50;;21202:267::o;21474:506::-;21717:6;21706:9;21699:25;21760:2;21755;21744:9;21740:18;21733:30;21680:4;21786:62;21844:2;21833:9;21829:18;21821:6;21813;21786:62;:::i;:::-;21896:9;21888:6;21884:22;21879:2;21868:9;21864:18;21857:50;21924;21967:6;21959;21951;21924:50;:::i;:::-;21916:58;21474:506;-1:-1:-1;;;;;;;;21474:506:46:o;22329:112::-;22361:1;22387;22377:35;;22392:18;;:::i;:::-;-1:-1:-1;22426:9:46;;22329:112::o;22755:245::-;22822:6;22875:2;22863:9;22854:7;22850:23;22846:32;22843:52;;;22891:1;22888;22881:12;22843:52;22923:9;22917:16;22942:28;22964:5;22942:28;:::i;24039:340::-;24241:2;24223:21;;;24280:2;24260:18;;;24253:30;-1:-1:-1;;;24314:2:46;24299:18;;24292:46;24370:2;24355:18;;24039:340::o;24384:465::-;24641:2;24630:9;24623:21;24604:4;24667:56;24719:2;24708:9;24704:18;24696:6;24667:56;:::i;:::-;24771:9;24763:6;24759:22;24754:2;24743:9;24739:18;24732:50;24799:44;24836:6;24828;24799:44;:::i;:::-;24791:52;24384:465;-1:-1:-1;;;;;24384:465:46:o;25107:336::-;25309:2;25291:21;;;25348:2;25328:18;;;25321:30;-1:-1:-1;;;25382:2:46;25367:18;;25360:42;25434:2;25419:18;;25107:336::o;25574:545::-;25676:2;25671:3;25668:11;25665:448;;;25712:1;25737:5;25733:2;25726:17;25782:4;25778:2;25768:19;25852:2;25840:10;25836:19;25833:1;25829:27;25823:4;25819:38;25888:4;25876:10;25873:20;25870:47;;;-1:-1:-1;25911:4:46;25870:47;25966:2;25961:3;25957:12;25954:1;25950:20;25944:4;25940:31;25930:41;;26021:82;26039:2;26032:5;26029:13;26021:82;;;26084:17;;;26065:1;26054:13;26021:82;;26295:1352;26421:3;26415:10;-1:-1:-1;;;;;26440:6:46;26437:30;26434:56;;;26470:18;;:::i;:::-;26499:97;26589:6;26549:38;26581:4;26575:11;26549:38;:::i;:::-;26543:4;26499:97;:::i;:::-;26651:4;;26715:2;26704:14;;26732:1;26727:663;;;;27434:1;27451:6;27448:89;;;-1:-1:-1;27503:19:46;;;27497:26;27448:89;-1:-1:-1;;26252:1:46;26248:11;;;26244:24;26240:29;26230:40;26276:1;26272:11;;;26227:57;27550:81;;26697:944;;26727:663;25521:1;25514:14;;;25558:4;25545:18;;-1:-1:-1;;26763:20:46;;;26881:236;26895:7;26892:1;26889:14;26881:236;;;26984:19;;;26978:26;26963:42;;27076:27;;;;27044:1;27032:14;;;;26911:19;;26881:236;;;26885:3;27145:6;27136:7;27133:19;27130:201;;;27206:19;;;27200:26;-1:-1:-1;;27289:1:46;27285:14;;;27301:3;27281:24;27277:37;27273:42;27258:58;27243:74;;27130:201;-1:-1:-1;;;;;27377:1:46;27361:14;;;27357:22;27344:36;;-1:-1:-1;26295:1352:46:o;27652:383::-;27849:2;27838:9;27831:21;27812:4;27875:45;27916:2;27905:9;27901:18;27893:6;27875:45;:::i;:::-;27968:9;27960:6;27956:22;27951:2;27940:9;27936:18;27929:50;27996:33;28022:6;28014;27996:33;:::i;28383:561::-;-1:-1:-1;;;;;28680:15:46;;;28662:34;;28732:15;;28727:2;28712:18;;28705:43;28779:2;28764:18;;28757:34;;;28822:2;28807:18;;28800:34;;;28642:3;28865;28850:19;;28843:32;;;28605:4;;28892:46;;28918:19;;28910:6;28892:46;:::i;:::-;28884:54;28383:561;-1:-1:-1;;;;;;;28383:561:46:o;28949:249::-;29018:6;29071:2;29059:9;29050:7;29046:23;29042:32;29039:52;;;29087:1;29084;29077:12;29039:52;29119:9;29113:16;29138:30;29162:5;29138:30;:::i;29203:179::-;29238:3;29280:1;29262:16;29259:23;29256:120;;;29326:1;29323;29320;29305:23;-1:-1:-1;29363:1:46;29357:8;29352:3;29348:18;29256:120;29203:179;:::o;29387:671::-;29426:3;29468:4;29450:16;29447:26;29444:39;;;29387:671;:::o;29444:39::-;29510:2;29504:9;-1:-1:-1;;29575:16:46;29571:25;;29568:1;29504:9;29547:50;29626:4;29620:11;29650:16;-1:-1:-1;;;;;29756:2:46;29749:4;29741:6;29737:17;29734:25;29729:2;29721:6;29718:14;29715:45;29712:58;;;29763:5;;;;;29387:671;:::o;29712:58::-;29800:6;29794:4;29790:17;29779:28;;29836:3;29830:10;29863:2;29855:6;29852:14;29849:27;;;29869:5;;;;;;29387:671;:::o;29849:27::-;29953:2;29934:16;29928:4;29924:27;29920:36;29913:4;29904:6;29899:3;29895:16;29891:27;29888:69;29885:82;;;29960:5;;;;;;29387:671;:::o;29885:82::-;29976:57;30027:4;30018:6;30010;30006:19;30002:30;29996:4;29976:57;:::i;:::-;-1:-1:-1;30049:3:46;;29387:671;-1:-1:-1;;;;;29387:671:46:o;31159:287::-;31288:3;31326:6;31320:13;31342:66;31401:6;31396:3;31389:4;31381:6;31377:17;31342:66;:::i;:::-;31424:16;;;;;31159:287;-1:-1:-1;;31159:287:46:o;31451:827::-;-1:-1:-1;;;;;31848:15:46;;;31830:34;;31900:15;;31895:2;31880:18;;31873:43;31810:3;31947:2;31932:18;;31925:31;;;31773:4;;31979:57;;32016:19;;32008:6;31979:57;:::i;:::-;32084:9;32076:6;32072:22;32067:2;32056:9;32052:18;32045:50;32118:44;32155:6;32147;32118:44;:::i;:::-;32104:58;;32211:9;32203:6;32199:22;32193:3;32182:9;32178:19;32171:51;32239:33;32265:6;32257;32239:33;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "burn(address,uint256,uint256)": "f5298aca",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "claim(address,uint256,uint256)": "2bc43fd9",
    "contractURI()": "e8a3d485",
    "evolve()": "734b8147",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "uri(uint256)": "0e89341c",
    "verifyClaim(address,uint256,uint256)": "4bbb1abf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when approval for a second party/operator address to manage all tokens for an owner address is enabled or disabled (absense of an event assumes disabled).\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed\"},\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \\\"Safe Transfer Rules\\\" section of the standard). The `_operator` argument MUST be msg.sender. The `_from` argument MUST be the address of the holder whose balance is decreased. The `_to` argument MUST be the address of the recipient whose balance is increased. The `_ids` argument MUST be the list of tokens being transferred. The `_values` argument MUST be the list of number of tokens (matching the list and order of tokens specified in _ids) the holder balance is decreased by and match what the recipient balance is increased by. When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address). When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \\\"Safe Transfer Rules\\\" section of the standard). The `_operator` argument MUST be msg.sender. The `_from` argument MUST be the address of the holder whose balance is decreased. The `_to` argument MUST be the address of the recipient whose balance is increased. The `_id` argument MUST be the token type being transferred. The `_value` argument MUST be the number of tokens the holder balance is decreased by and match what the recipient balance is increased by. When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address). When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\"},\"URI(string,uint256)\":{\"details\":\"MUST emit when the URI is updated for a token ID. URIs are defined in RFC 3986. The URI MUST point a JSON file that conforms to the \\\"ERC-1155 Metadata URI JSON Schema\\\".\"}},\"kind\":\"dev\",\"methods\":{\"burn(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the NFT to burn.\",\"_owner\":\"The owner of the NFT to burn.\",\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"burnBatch(address,uint256[],uint256[])\":{\"params\":{\"_amounts\":\"The amounts of the NFTs to burn.\",\"_owner\":\"The owner of the NFTs to burn.\",\"_tokenIds\":\"The tokenIds of the NFTs to burn.\"}},\"claim(address,uint256,uint256)\":{\"details\":\"The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.                   The logic in `transferTokensOnClaim` does actual minting of tokens,                   can also be used to apply other state changes.\",\"params\":{\"_quantity\":\"The number of tokens to mint.\",\"_receiver\":\"The recipient of the tokens to mint.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC1155-setApprovalForAll}\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"verifyClaim(address,uint256,uint256)\":{\"details\":\"Checks a request to claim NFTs against a custom condition.\",\"params\":{\"_claimer\":\"Caller of the claim function.\",\"_quantity\":\"The number of NFTs being claimed.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenId.\"},\"burnBatch(address,uint256[],uint256[])\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenIds.\"},\"claim(address,uint256,uint256)\":{\"notice\":\"Lets an address claim multiple lazy minted NFTs at once to a recipient.                   This function prevents any reentrant calls, and is not allowed to be overridden.                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`                   functions to create custom logic for verification and claiming,                   for e.g. price collection, allowlist, max quantity, etc.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be lazy minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract supports the given interface.\"},\"totalSupply(uint256)\":{\"notice\":\"Returns the total supply of NFTs of a given tokenId\"},\"uri(uint256)\":{\"notice\":\"Returns the metadata URI for the given tokenId.\"},\"verifyClaim(address,uint256,uint256)\":{\"notice\":\"Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract.sol\":\"PokemonEvolveContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol\":{\"keccak256\":\"0xd379ce942de3bc9da5cfe23416daf81e7e42371f97fe4c0df70de4f47973b0eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://40d501e5cd293ee1bfcb0965f4f6604d8b16ef143674e3f1a75d2dbc476c5a1c\",\"dweb:/ipfs/QmYAgPi6oyxqnrkR8DLEmk5vnBb3j5reDeEgGJLUnjdMcS\"]},\"node_modules/@thirdweb-dev/contracts/eip/ERC1155.sol\":{\"keccak256\":\"0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b\",\"dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Metadata.sol\":{\"keccak256\":\"0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43\",\"dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0x445161870535140ce42418fa5857bdea248b4c9485fd15b3b876138330d65cd2\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ce42f04a1f0d9dce0987b5907f2cfc4919033e862f0b0d13777a90fb4679f400\",\"dweb:/ipfs/QmYyRrecF1vZ8pv1KKUWy25evTuNP5BSj8vUs4EnZ2YJv5\"]},\"node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"node_modules/@thirdweb-dev/contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"node_modules/@thirdweb-dev/contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"node_modules/@thirdweb-dev/contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x1de27fa31eb5989508ca5c67e81b71bca975497ba1d6180ad2ae3a187511bddd\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://88a19808fcb9d4d84ca7fba1d32022e905ba3306dd93b7f874bd2241ff7c535e\",\"dweb:/ipfs/QmaBCo2piS6xJQnrCAW4Ws39teVKaJTBzf8k6d2MzpcXAx\"]},\"node_modules/@thirdweb-dev/contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"node_modules/@thirdweb-dev/contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol\":{\"keccak256\":\"0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df\",\"dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"node_modules/@thirdweb-dev/contracts/openzeppelin-presets/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]},\"src/Contract.sol\":{\"keccak256\":\"0x5725cd398bcee97fedf6f1106d3e0246b2b951b4b43ce6e65f99d1cdd649b9e3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48795783dd090a443aa4b09435712e8f56b4c7a225c92fa7c7c2b13576d52e7\",\"dweb:/ipfs/QmV3h86nezJNWKrqGq1iBSNm5gpHHB34C428zKHXtoGLcm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "_values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "evolve"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burn(address,uint256,uint256)": {
            "params": {
              "_amount": "The amount of the NFT to burn.",
              "_owner": "The owner of the NFT to burn.",
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "burnBatch(address,uint256[],uint256[])": {
            "params": {
              "_amounts": "The amounts of the NFTs to burn.",
              "_owner": "The owner of the NFTs to burn.",
              "_tokenIds": "The tokenIds of the NFTs to burn."
            }
          },
          "claim(address,uint256,uint256)": {
            "details": "The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.                   The logic in `transferTokensOnClaim` does actual minting of tokens,                   can also be used to apply other state changes.",
            "params": {
              "_quantity": "The number of tokens to mint.",
              "_receiver": "The recipient of the tokens to mint.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "params": {
              "_amount": "The number of NFTs to lazy mint.",
              "_baseURIForTokens": "The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.",
              "_data": "Additional bytes data to be used at the discretion of the consumer of the contract."
            },
            "returns": {
              "batchId": "         A unique integer identifier for the batch of NFTs lazy minted together."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC1155-setApprovalForAll}"
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "verifyClaim(address,uint256,uint256)": {
            "details": "Checks a request to claim NFTs against a custom condition.",
            "params": {
              "_claimer": "Caller of the claim function.",
              "_quantity": "The number of NFTs being claimed.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address,uint256)": {
            "notice": "Get the balance of an account's Tokens."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenId."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenIds."
          },
          "claim(address,uint256,uint256)": {
            "notice": "Lets an address claim multiple lazy minted NFTs at once to a recipient.                   This function prevents any reentrant calls, and is not allowed to be overridden.                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`                   functions to create custom logic for verification and claiming,                   for e.g. price collection, allowlist, max quantity, etc."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Queries the approval status of an operator for a given owner."
          },
          "lazyMint(uint256,string,bytes)": {
            "notice": "Lets an authorized address lazy mint a given amount of NFTs."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be lazy minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "supportsInterface(bytes4)": {
            "notice": "Returns whether this contract supports the given interface."
          },
          "totalSupply(uint256)": {
            "notice": "Returns the total supply of NFTs of a given tokenId"
          },
          "uri(uint256)": {
            "notice": "Returns the metadata URI for the given tokenId."
          },
          "verifyClaim(address,uint256,uint256)": {
            "notice": "Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contract.sol": "PokemonEvolveContract"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol": {
        "keccak256": "0xd379ce942de3bc9da5cfe23416daf81e7e42371f97fe4c0df70de4f47973b0eb",
        "urls": [
          "bzz-raw://40d501e5cd293ee1bfcb0965f4f6604d8b16ef143674e3f1a75d2dbc476c5a1c",
          "dweb:/ipfs/QmYAgPi6oyxqnrkR8DLEmk5vnBb3j5reDeEgGJLUnjdMcS"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/ERC1155.sol": {
        "keccak256": "0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6",
        "urls": [
          "bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b",
          "dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Metadata.sol": {
        "keccak256": "0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e",
        "urls": [
          "bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43",
          "dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0x445161870535140ce42418fa5857bdea248b4c9485fd15b3b876138330d65cd2",
        "urls": [
          "bzz-raw://ce42f04a1f0d9dce0987b5907f2cfc4919033e862f0b0d13777a90fb4679f400",
          "dweb:/ipfs/QmYyRrecF1vZ8pv1KKUWy25evTuNP5BSj8vUs4EnZ2YJv5"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x1de27fa31eb5989508ca5c67e81b71bca975497ba1d6180ad2ae3a187511bddd",
        "urls": [
          "bzz-raw://88a19808fcb9d4d84ca7fba1d32022e905ba3306dd93b7f874bd2241ff7c535e",
          "dweb:/ipfs/QmaBCo2piS6xJQnrCAW4Ws39teVKaJTBzf8k6d2MzpcXAx"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol": {
        "keccak256": "0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db",
        "urls": [
          "bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df",
          "dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      },
      "src/Contract.sol": {
        "keccak256": "0x5725cd398bcee97fedf6f1106d3e0246b2b951b4b43ce6e65f99d1cdd649b9e3",
        "urls": [
          "bzz-raw://b48795783dd090a443aa4b09435712e8f56b4c7a225c92fa7c7c2b13576d52e7",
          "dweb:/ipfs/QmV3h86nezJNWKrqGq1iBSNm5gpHHB34C428zKHXtoGLcm"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contract.sol",
    "id": 32128,
    "exportedSymbols": {
      "BatchMintMetadata": [
        30406
      ],
      "ContractMetadata": [
        30464
      ],
      "DefaultOperatorFilterer": [
        30486
      ],
      "ERC1155": [
        29993
      ],
      "ERC1155LazyMint": [
        28967
      ],
      "IClaimableERC1155": [
        31161
      ],
      "IContractMetadata": [
        31184
      ],
      "IERC165": [
        30177
      ],
      "IERC2981": [
        30196
      ],
      "ILazyMint": [
        31211
      ],
      "IMulticall": [
        31225
      ],
      "IOwnable": [
        31461
      ],
      "IRoyalty": [
        31525
      ],
      "LazyMint": [
        30564
      ],
      "Multicall": [
        30623
      ],
      "OperatorFilterer": [
        30805
      ],
      "Ownable": [
        30887
      ],
      "PokemonEvolveContract": [
        32127
      ],
      "ReentrancyGuard": [
        32062
      ],
      "Royalty": [
        31126
      ],
      "TWAddress": [
        31820
      ],
      "TWStrings": [
        32023
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:658:44",
    "nodes": [
      {
        "id": 32064,
        "nodeType": "PragmaDirective",
        "src": "39:23:44",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 32065,
        "nodeType": "ImportDirective",
        "src": "64:58:44",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol",
        "file": "@thirdweb-dev/contracts/base/ERC1155LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32128,
        "sourceUnit": 28968,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32127,
        "nodeType": "ContractDefinition",
        "src": "124:573:44",
        "nodes": [
          {
            "id": 32082,
            "nodeType": "FunctionDefinition",
            "src": "180:127:44",
            "nodes": [],
            "body": {
              "id": 32081,
              "nodeType": "Block",
              "src": "305:2:44",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 32074,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32069,
                    "src": "274:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 32075,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32071,
                    "src": "281:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "expression": {
                      "id": 32076,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "290:3:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 32077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "294:6:44",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "290:10:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "30",
                    "id": 32078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "302:1:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 32079,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32073,
                  "name": "ERC1155LazyMint",
                  "nameLocations": [
                    "258:15:44"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28967,
                  "src": "258:15:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "258:46:44"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32069,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "215:5:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 32082,
                  "src": "201:19:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32071,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "244:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 32082,
                  "src": "230:21:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32070,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "230:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "191:66:44"
            },
            "returnParameters": {
              "id": 32080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:0:44"
            },
            "scope": 32127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32107,
            "nodeType": "FunctionDefinition",
            "src": "313:274:44",
            "nodes": [],
            "body": {
              "id": 32106,
              "nodeType": "Block",
              "src": "440:147:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32093,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32086,
                          "src": "458:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "470:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "458:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792050696b6163687520637574652061726520636c61696d61626c6521",
                        "id": 32096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "473:34:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_216fb1c260180a717a9c1d6091d81e19f43de077da4af26aac4c821f13db6b4b",
                          "typeString": "literal_string \"Only Pikachu cute are claimable!\""
                        },
                        "value": "Only Pikachu cute are claimable!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_216fb1c260180a717a9c1d6091d81e19f43de077da4af26aac4c821f13db6b4b",
                          "typeString": "literal_string \"Only Pikachu cute are claimable!\""
                        }
                      ],
                      "id": 32092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "450:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "450:58:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32098,
                  "nodeType": "ExpressionStatement",
                  "src": "450:58:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32100,
                          "name": "_quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32088,
                          "src": "526:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 32101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "539:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "526:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920312050696b6163687520637574652063616e20626520636c61696d656421",
                        "id": 32103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:37:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9f9cf390e720296cff5ad2c2e36e1cec11129a9067451aec73484ce77daf274",
                          "typeString": "literal_string \"Only 1 Pikachu cute can be claimed!\""
                        },
                        "value": "Only 1 Pikachu cute can be claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9f9cf390e720296cff5ad2c2e36e1cec11129a9067451aec73484ce77daf274",
                          "typeString": "literal_string \"Only 1 Pikachu cute can be claimed!\""
                        }
                      ],
                      "id": 32099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "518:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:62:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32105,
                  "nodeType": "ExpressionStatement",
                  "src": "518:62:44"
                }
              ]
            },
            "baseFunctions": [
              28541
            ],
            "functionSelector": "4bbb1abf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "322:11:44",
            "overrides": {
              "id": 32090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "431:8:44"
            },
            "parameters": {
              "id": 32089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32084,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "351:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 32107,
                  "src": "343:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32086,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "377:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 32107,
                  "src": "369:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32088,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "403:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 32107,
                  "src": "395:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "333:85:44"
            },
            "returnParameters": {
              "id": 32091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:44"
            },
            "scope": 32127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32126,
            "nodeType": "FunctionDefinition",
            "src": "593:102:44",
            "nodes": [],
            "body": {
              "id": 32125,
              "nodeType": "Block",
              "src": "618:77:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "634:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "638:6:44",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "634:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 32113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "646:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 32114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "649:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 32110,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29704,
                      "src": "628:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 32115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "628:23:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32116,
                  "nodeType": "ExpressionStatement",
                  "src": "628:23:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "667:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "671:6:44",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "667:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 32120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "679:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 32121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "682:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 32122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "685:2:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 32117,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29528,
                      "src": "661:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 32123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "661:27:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32124,
                  "nodeType": "ExpressionStatement",
                  "src": "661:27:44"
                }
              ]
            },
            "functionSelector": "734b8147",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "evolve",
            "nameLocation": "602:6:44",
            "parameters": {
              "id": 32108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "608:2:44"
            },
            "returnParameters": {
              "id": 32109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:44"
            },
            "scope": 32127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32066,
              "name": "ERC1155LazyMint",
              "nameLocations": [
                "158:15:44"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28967,
              "src": "158:15:44"
            },
            "id": 32067,
            "nodeType": "InheritanceSpecifier",
            "src": "158:15:44"
          }
        ],
        "canonicalName": "PokemonEvolveContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32127,
          28967,
          32062,
          30486,
          30805,
          30666,
          31438,
          31161,
          30564,
          30406,
          31211,
          30623,
          31225,
          31126,
          31525,
          30196,
          30177,
          30887,
          31461,
          30464,
          31184,
          29993,
          30124,
          30112
        ],
        "name": "PokemonEvolveContract",
        "nameLocation": "133:21:44",
        "scope": 32128,
        "usedErrors": [
          30677
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 44
}