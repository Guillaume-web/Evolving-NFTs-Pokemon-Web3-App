{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claim(address,uint256,uint256)": "2bc43fd9",
    "verifyClaim(address,uint256,uint256)": "4bbb1abf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"thirdweb\",\"events\":{\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed\"}},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,uint256)\":{\"details\":\"The logic in the `verifyClaim` function determines whether the caller is authorized to mint NFTs.\",\"params\":{\"_quantity\":\"The number of tokens to mint.\",\"_receiver\":\"The recipient of the tokens to mint.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}},\"verifyClaim(address,uint256,uint256)\":{\"details\":\"Checks a request to claim NFTs against a custom condition.\",\"params\":{\"_claimer\":\"Caller of the claim function.\",\"_quantity\":\"The number of NFTs being claimed.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,uint256)\":{\"notice\":\"Lets an address claim multiple lazy minted NFTs at once to a recipient.                   Contract creators should override this function to create custom logic for claiming,                   for e.g. price collection, allowlist, max quantity, etc.\"},\"verifyClaim(address,uint256,uint256)\":{\"notice\":\"Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol\":\"IClaimableERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol\":{\"keccak256\":\"0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df\",\"dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claim(address,uint256,uint256)": {
            "details": "The logic in the `verifyClaim` function determines whether the caller is authorized to mint NFTs.",
            "params": {
              "_quantity": "The number of tokens to mint.",
              "_receiver": "The recipient of the tokens to mint.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          },
          "verifyClaim(address,uint256,uint256)": {
            "details": "Checks a request to claim NFTs against a custom condition.",
            "params": {
              "_claimer": "Caller of the claim function.",
              "_quantity": "The number of NFTs being claimed.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claim(address,uint256,uint256)": {
            "notice": "Lets an address claim multiple lazy minted NFTs at once to a recipient.                   Contract creators should override this function to create custom logic for claiming,                   for e.g. price collection, allowlist, max quantity, etc."
          },
          "verifyClaim(address,uint256,uint256)": {
            "notice": "Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol": "IClaimableERC1155"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol": {
        "keccak256": "0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db",
        "urls": [
          "bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df",
          "dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol",
    "id": 31162,
    "exportedSymbols": {
      "IClaimableERC1155": [
        31161
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1643:33",
    "nodes": [
      {
        "id": 31128,
        "nodeType": "PragmaDirective",
        "src": "39:23:33",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 31161,
        "nodeType": "ContractDefinition",
        "src": "86:1595:33",
        "nodes": [
          {
            "id": 31140,
            "nodeType": "EventDefinition",
            "src": "165:159:33",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 31130,
              "nodeType": "StructuredDocumentation",
              "src": "120:40:33",
              "text": "@dev Emitted when tokens are claimed"
            },
            "eventSelector": "ff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6",
            "name": "TokensClaimed",
            "nameLocation": "171:13:33",
            "parameters": {
              "id": 31139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31132,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "210:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31140,
                  "src": "194:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31134,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "243:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31140,
                  "src": "227:24:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31136,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "277:7:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31140,
                  "src": "261:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantityClaimed",
                  "nameLocation": "302:15:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31140,
                  "src": "294:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "184:139:33"
            }
          },
          {
            "id": 31150,
            "nodeType": "FunctionDefinition",
            "src": "961:118:33",
            "nodes": [],
            "documentation": {
              "id": 31141,
              "nodeType": "StructuredDocumentation",
              "src": "330:626:33",
              "text": "  @notice          Lets an address claim multiple lazy minted NFTs at once to a recipient.\n                   Contract creators should override this function to create custom logic for claiming,\n                   for e.g. price collection, allowlist, max quantity, etc.\n  @dev             The logic in the `verifyClaim` function determines whether the caller is authorized to mint NFTs.\n  @param _receiver  The recipient of the tokens to mint.\n  @param _tokenId   The tokenId of the lazy minted NFT to mint.\n  @param _quantity  The number of tokens to mint."
            },
            "functionSelector": "2bc43fd9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "970:5:33",
            "parameters": {
              "id": 31148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31143,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "993:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31150,
                  "src": "985:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31145,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1020:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31150,
                  "src": "1012:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31147,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "1046:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31150,
                  "src": "1038:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "975:86:33"
            },
            "returnParameters": {
              "id": 31149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:0:33"
            },
            "scope": 31161,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31160,
            "nodeType": "FunctionDefinition",
            "src": "1559:120:33",
            "nodes": [],
            "documentation": {
              "id": 31151,
              "nodeType": "StructuredDocumentation",
              "src": "1085:469:33",
              "text": "  @notice          Override this function to add logic for claim verification, based on conditions\n                   such as allowlist, price, max quantity etc.\n  @dev             Checks a request to claim NFTs against a custom condition.\n  @param _claimer   Caller of the claim function.\n  @param _tokenId   The tokenId of the lazy minted NFT to mint.\n  @param _quantity  The number of NFTs being claimed."
            },
            "functionSelector": "4bbb1abf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "1568:11:33",
            "parameters": {
              "id": 31158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31153,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "1597:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31160,
                  "src": "1589:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31155,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1623:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31160,
                  "src": "1615:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31157,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "1649:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 31160,
                  "src": "1641:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1579:85:33"
            },
            "returnParameters": {
              "id": 31159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:0:33"
            },
            "scope": 31161,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IClaimableERC1155",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 31129,
          "nodeType": "StructuredDocumentation",
          "src": "64:21:33",
          "text": "@author thirdweb"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          31161
        ],
        "name": "IClaimableERC1155",
        "nameLocation": "96:17:33",
        "scope": 31162,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 33
}