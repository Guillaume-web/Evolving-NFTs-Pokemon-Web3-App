{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_royaltyBps",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoyaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRoyaltyBps",
          "type": "uint256"
        }
      ],
      "name": "DefaultRoyalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restriction",
          "type": "bool"
        }
      ],
      "name": "OperatorRestriction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "royaltyRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantityClaimed",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "startTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedBaseURI",
          "type": "bytes"
        }
      ],
      "name": "TokensLazyMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OPERATOR_FILTER_REGISTRY",
      "outputs": [
        {
          "internalType": "contract IOperatorFilterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseURICount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getBatchIdAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyaltyInfoForToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_baseURIForTokens",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "lazyMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextTokenIdToMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorRestriction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_royaltyBps",
          "type": "uint256"
        }
      ],
      "name": "setDefaultRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_restriction",
          "type": "bool"
        }
      ],
      "name": "setOperatorRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_bps",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyInfoForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "verifyClaim",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1751:10217:17:-:0;;;2579:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;413:42:26;516:4;2729:5:17;2736:7;1083:4:18;:12;2729:5:17;1083:4:18;:12;:::i;:::-;-1:-1:-1;1105:6:18;:16;1114:7;1105:6;:16;:::i;:::-;-1:-1:-1;;;905:42:30;1317:45;:49;1313:537;;1386:9;1382:458;;;1415:92;;-1:-1:-1;;;1415:92:30;;1469:4;1415:92;;;4702:34:46;-1:-1:-1;;;;;4772:15:46;;4752:18;;;4745:43;905:42:30;;1415:45;;4637:18:46;;1415:92:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1382:458;;;-1:-1:-1;;;;;1550:44:30;;;1546:280;;1618:94;;-1:-1:-1;;;1618:94:30;;1674:4;1618:94;;;4702:34:46;-1:-1:-1;;;;;4772:15:46;;4752:18;;;4745:43;905:42:30;;1618:47;;4637:18:46;;1618:94:30;4490:304:46;1546:280:30;1759:48;;-1:-1:-1;;;1759:48:30;;1801:4;1759:48;;;4945:51:46;905:42:30;;1759:33;;4918:18:46;;1759:48:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:280;-1:-1:-1;;202:1:43;307:7;:22;2755:23:17::1;2767:10;2755:11;:23::i;:::-;2788:56;2813:17:::0;-1:-1:-1;;;;;2788:56:17;::::1;:24;:56::i;:::-;2854:29;2878:4;2854:23;:29::i;:::-;2579:311:::0;;;;1751:10217;;1421:172:31;1501:6;;;-1:-1:-1;;;;;1517:18:31;;;-1:-1:-1;;;;;;1517:18:31;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;3430:334:32:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:32;;5209:2:46;3571:25:32;;;5191:21:46;5248:2;5228:18;;;5221:30;-1:-1:-1;;;5267:18:46;;;5260:45;5322:18;;3571:25:32;;;;;;;3531:76;3617:16;:36;;-1:-1:-1;;;;;3617:36:32;;-1:-1:-1;;;;;;3663:32:32;;;;;-1:-1:-1;;;3663:32:32;;;;;;;;3711:46;;5497:25:46;;;3711:46:32;;5485:2:46;5470:18;3711:46:32;;;;;;;3430:334;;:::o;457:160:29:-;528:19;:34;;-1:-1:-1;;528:34:29;;;;;;;;;;577:33;;5673:41:46;;;577:33:29;;5661:2:46;5646:18;577:33:29;;;;;;;457:160;:::o;14:127:46:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:46;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:46;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:46:o;991:905::-;1108:6;1116;1124;1132;1185:3;1173:9;1164:7;1160:23;1156:33;1153:53;;;1202:1;1199;1192:12;1153:53;1229:16;;-1:-1:-1;;;;;1294:14:46;;;1291:34;;;1321:1;1318;1311:12;1291:34;1344:61;1397:7;1388:6;1377:9;1373:22;1344:61;:::i;:::-;1334:71;;1451:2;1440:9;1436:18;1430:25;1414:41;;1480:2;1470:8;1467:16;1464:36;;;1496:1;1493;1486:12;1464:36;;1519:63;1574:7;1563:8;1552:9;1548:24;1519:63;:::i;:::-;1625:2;1610:18;;1604:25;1509:73;;-1:-1:-1;1604:25:46;-1:-1:-1;;;;;;1658:31:46;;1648:42;;1638:70;;1704:1;1701;1694:12;1638:70;1777:2;1762:18;;1756:25;1727:5;;-1:-1:-1;;;;;;1812:33:46;;1800:46;;1790:74;;1860:1;1857;1850:12;1790:74;991:905;;;;-1:-1:-1;991:905:46;;-1:-1:-1;;991:905:46:o;1901:380::-;1980:1;1976:12;;;;2023;;;2044:61;;2098:4;2090:6;2086:17;2076:27;;2044:61;2151:2;2143:6;2140:14;2120:18;2117:38;2114:161;;2197:10;2192:3;2188:20;2185:1;2178:31;2232:4;2229:1;2222:15;2260:4;2257:1;2250:15;2114:161;;1901:380;;;:::o;2412:545::-;2514:2;2509:3;2506:11;2503:448;;;2550:1;2575:5;2571:2;2564:17;2620:4;2616:2;2606:19;2690:2;2678:10;2674:19;2671:1;2667:27;2661:4;2657:38;2726:4;2714:10;2711:20;2708:47;;;-1:-1:-1;2749:4:46;2708:47;2804:2;2799:3;2795:12;2792:1;2788:20;2782:4;2778:31;2768:41;;2859:82;2877:2;2870:5;2867:13;2859:82;;;2922:17;;;2903:1;2892:13;2859:82;;;2863:3;;;2503:448;2412:545;;;:::o;3133:1352::-;3253:10;;-1:-1:-1;;;;;3275:30:46;;3272:56;;;3308:18;;:::i;:::-;3337:97;3427:6;3387:38;3419:4;3413:11;3387:38;:::i;:::-;3381:4;3337:97;:::i;:::-;3489:4;;3553:2;3542:14;;3570:1;3565:663;;;;4272:1;4289:6;4286:89;;;-1:-1:-1;4341:19:46;;;4335:26;4286:89;-1:-1:-1;;3090:1:46;3086:11;;;3082:24;3078:29;3068:40;3114:1;3110:11;;;3065:57;4388:81;;3535:944;;3565:663;2359:1;2352:14;;;2396:4;2383:18;;-1:-1:-1;;3601:20:46;;;3719:236;3733:7;3730:1;3727:14;3719:236;;;3822:19;;;3816:26;3801:42;;3914:27;;;;3882:1;3870:14;;;;3749:19;;3719:236;;;3723:3;3983:6;3974:7;3971:19;3968:201;;;4044:19;;;4038:26;-1:-1:-1;;4127:1:46;4123:14;;;4139:3;4119:24;4115:37;4111:42;4096:58;4081:74;;3968:201;-1:-1:-1;;;;;4215:1:46;4199:14;;;4195:22;4182:36;;-1:-1:-1;3133:1352:46:o;5533:187::-;1751:10217:17;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101e25760003560e01c8063600dd5ea11610102578063ac9650d811610095578063e8a3d48511610064578063e8a3d485146105fd578063e985e9c514610612578063f242432a1461064d578063f5298aca1461066d57600080fd5b8063ac9650d814610558578063b24f2d3914610585578063bd85b039146105b0578063d37c353b146105dd57600080fd5b8063938e3d7b116100d1578063938e3d7b146104e357806395d89b41146105035780639bcf7a1514610518578063a22cb4651461053857600080fd5b8063600dd5ea1461047057806363b45e2d146104905780636b20c454146104a55780638da5cb5b146104c557600080fd5b80632eb2c2d61161017a5780634bbb1abf116101495780634bbb1abf146103c75780634cc157df146103e75780634e1273f414610429578063504c6e011461045657600080fd5b80632eb2c2d61461033857806332f0cd64146103585780633b1475a71461037857806341f434341461038d57600080fd5b806313af4035116101b657806313af4035146102a45780632419f51b146102c65780632a55205a146102e65780632bc43fd91461032557600080fd5b8062fdd58e146101e757806301ffc9a71461023257806306fdde03146102625780630e89341c14610284575b600080fd5b3480156101f357600080fd5b5061021f610202366004612578565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561023e57600080fd5b5061025261024d3660046125b8565b61068d565b6040519015158152602001610229565b34801561026e57600080fd5b506102776106fa565b6040516102299190612625565b34801561029057600080fd5b5061027761029f366004612638565b610788565b3480156102b057600080fd5b506102c46102bf366004612651565b6107c9565b005b3480156102d257600080fd5b5061021f6102e1366004612638565b610802565b3480156102f257600080fd5b5061030661030136600461266c565b610870565b604080516001600160a01b039093168352602083019190915201610229565b6102c461033336600461268e565b6108ad565b34801561034457600080fd5b506102c4610353366004612814565b6109a5565b34801561036457600080fd5b506102c46103733660046128cb565b6109d4565b34801561038457600080fd5b50600b5461021f565b34801561039957600080fd5b506103af6daaeb6d7670e522a718067333cd4e81565b6040516001600160a01b039091168152602001610229565b3480156103d357600080fd5b506102c46103e236600461268e565b505050565b3480156103f357600080fd5b50610407610402366004612638565b610a45565b604080516001600160a01b03909316835261ffff909116602083015201610229565b34801561043557600080fd5b506104496104443660046128e8565b610ab0565b60405161022991906129ed565b34801561046257600080fd5b50600c546102529060ff1681565b34801561047c57600080fd5b506102c461048b366004612578565b610bc4565b34801561049c57600080fd5b5060095461021f565b3480156104b157600080fd5b506102c46104c0366004612a00565b610bf6565b3480156104d157600080fd5b506006546001600160a01b03166103af565b3480156104ef57600080fd5b506102c46104fe366004612a73565b610d98565b34801561050f57600080fd5b50610277610dc5565b34801561052457600080fd5b506102c4610533366004612abb565b610dd2565b34801561054457600080fd5b506102c4610553366004612af0565b610e01565b34801561056457600080fd5b50610578610573366004612b27565b610e15565b6040516102299190612b9b565b34801561059157600080fd5b506007546001600160a01b03811690600160a01b900461ffff16610407565b3480156105bc57600080fd5b5061021f6105cb366004612638565b600e6020526000908152604090205481565b3480156105e957600080fd5b5061021f6105f8366004612c45565b610f09565b34801561060957600080fd5b50610277611016565b34801561061e57600080fd5b5061025261062d366004612cbe565b600360209081526000928352604080842090915290825290205460ff1681565b34801561065957600080fd5b506102c4610668366004612cf1565b611023565b34801561067957600080fd5b506102c461068836600461268e565b61104a565b60006301ffc9a760e01b6001600160e01b0319831614806106be5750636cdb3d1360e11b6001600160e01b03198316145b806106d957506303a24d0760e21b6001600160e01b03198316145b806106f457506001600160e01b0319821663152a902d60e11b145b92915050565b6000805461070790612d55565b80601f016020809104026020016040519081016040528092919081815260200182805461073390612d55565b80156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b505050505081565b606060006107958361113f565b9050806107a1846112db565b6040516020016107b2929190612d8f565b604051602081830303815290604052915050919050565b6107d16113e3565b6107f65760405162461bcd60e51b81526004016107ed90612dbe565b60405180910390fd5b6107ff81611410565b50565b600061080d60095490565b821061084b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016107ed565b6009828154811061085e5761085e612de6565b90600052602060002001549050919050565b60008060008061087f86610a45565b90945084925061ffff1690506127106108988287612e12565b6108a29190612e3f565b925050509250929050565b6002600d54036108ff5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ed565b6002600d55600b5482106109425760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b60448201526064016107ed565b61094d838383611462565b81836001600160a01b0316336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68460405161099391815260200190565b60405180910390a450506001600d5550565b846001600160a01b03811633146109bf576109bf3361147d565b6109cc8686868686611541565b505050505050565b6109dc6113e3565b610a3c5760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420617574686f72697a656420746f20736574206f70657261746f72207260448201526a32b9ba3934b1ba34b7b71760a91b60648201526084016107ed565b6107ff816115d0565b6000818152600860209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610a8c5780516020820151610aa6565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60608151835114610ad35760405162461bcd60e51b81526004016107ed90612e53565b600083516001600160401b03811115610aee57610aee6126c1565b604051908082528060200260200182016040528015610b17578160200160208202803683370190505b50905060005b8451811015610bbc5760026000868381518110610b3c57610b3c612de6565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610b7857610b78612de6565b6020026020010151815260200190815260200160002054828281518110610ba157610ba1612de6565b6020908102919091010152610bb581612e7c565b9050610b1d565b509392505050565b610bcc6113e3565b610be85760405162461bcd60e51b81526004016107ed90612dbe565b610bf28282611617565b5050565b336001600160a01b038416811480610c3357506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610c735760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b60448201526064016107ed565b8151835114610cb65760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064016107ed565b60005b8351811015610d8657828181518110610cd457610cd4612de6565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610d1557610d15612de6565b60200260200101518152602001908152602001600020541015610d745760405162461bcd60e51b8152602060048201526017602482015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b60448201526064016107ed565b610d7f600182612e95565b9050610cb9565b50610d928484846116bd565b50505050565b610da06113e3565b610dbc5760405162461bcd60e51b81526004016107ed90612dbe565b6107ff81611872565b6001805461070790612d55565b610dda6113e3565b610df65760405162461bcd60e51b81526004016107ed90612dbe565b6103e283838361194e565b81610e0b8161147d565b6103e28383611a18565b6060816001600160401b03811115610e2f57610e2f6126c1565b604051908082528060200260200182016040528015610e6257816020015b6060815260200190600190039081610e4d5790505b50905060005b82811015610f0257610ed230858584818110610e8657610e86612de6565b9050602002810190610e989190612ea8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ac792505050565b828281518110610ee457610ee4612de6565b60200260200101819052508080610efa90612e7c565b915050610e68565b5092915050565b6000610f136113e3565b610f2f5760405162461bcd60e51b81526004016107ed90612dbe565b85600003610f675760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b60448201526064016107ed565b6000600b549050610faf818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611af392505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001610fe58a84612e95565b610fef9190612eee565b88888888604051611004959493929190612f2a565b60405180910390a25095945050505050565b6005805461070790612d55565b846001600160a01b038116331461103d5761103d3361147d565b6109cc8686868686611b57565b336001600160a01b03841681148061108757506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b6110c75760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b60448201526064016107ed565b6001600160a01b03841660009081526002602090815260408083208684529091529020548211156111345760405162461bcd60e51b8152602060048201526017602482015276139bdd08195b9bdd59da081d1bdad95b9cc81bdddb9959604a1b60448201526064016107ed565b610d92848484611bdf565b6060600061114c60095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561119c57602002820191906000526020600020905b815481526020019060010190808311611188575b5050505050905060005b828110156112a0578181815181106111c0576111c0612de6565b602002602001015185101561128e57600a60008383815181106111e5576111e5612de6565b60200260200101518152602001908152602001600020805461120690612d55565b80601f016020809104026020016040519081016040528092919081815260200182805461123290612d55565b801561127f5780601f106112545761010080835404028352916020019161127f565b820191906000526020600020905b81548152906001019060200180831161126257829003601f168201915b50505050509350505050919050565b611299600182612e95565b90506111a6565b5060405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064016107ed565b6060816000036113025750506040805180820190915260018152600360fc1b602082015290565b8160005b811561132c578061131681612e7c565b91506113259050600a83612e3f565b9150611306565b6000816001600160401b03811115611346576113466126c1565b6040519080825280601f01601f191660200182016040528015611370576020820181803683370190505b5090505b84156113db57611385600183612eee565b9150611392600a86612f63565b61139d906030612e95565b60f81b8183815181106113b2576113b2612de6565b60200101906001600160f81b031916908160001a9053506113d4600a86612e3f565b9450611374565b949350505050565b60006113f76006546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6103e283838360405180602001604052806000815250611d04565b600c5460ff16156107ff576daaeb6d7670e522a718067333cd4e3b156107ff57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa1580156114f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115199190612f77565b6107ff57604051633b79c77360e21b81526001600160a01b03821660048201526024016107ed565b6001600160a01b03851633148061157b57506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6115bc5760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064016107ed565b6115c98585858585611ddd565b5050505050565b600c805460ff19168215159081179091556040519081527f38475885990d8dfe9ca01f0ef160a1b5514426eab9ddbc953a3353410ba780969060200160405180910390a150565b61271081111561165b5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016107ed565b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b0383166117045760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b60448201526064016107ed565b80518251146117255760405162461bcd60e51b81526004016107ed90612e53565b600033905061174881856000868660405180602001604052806000815250611f90565b60005b835181101561181357600084828151811061176857611768612de6565b60200260200101519050600084838151811061178657611786612de6565b6020908102919091018101516001600160a01b03891660009081526002835260408082208683529093529190912054909150818110156117d85760405162461bcd60e51b81526004016107ed90612f94565b6001600160a01b038816600090815260026020908152604080832095835294905292909220910390558061180b81612e7c565b91505061174b565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611864929190612fbe565b60405180910390a450505050565b60006005805461188190612d55565b80601f01602080910402602001604051908101604052809291908181526020018280546118ad90612d55565b80156118fa5780601f106118cf576101008083540402835291602001916118fa565b820191906000526020600020905b8154815290600101906020018083116118dd57829003601f168201915b5050505050905081600590816119109190613032565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516119429291906130f1565b60405180910390a15050565b6127108111156119925760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016107ed565b6040805180820182526001600160a01b038481168083526020808401868152600089815260088352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b336001600160a01b0383168103611a625760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b60448201526064016107ed565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101611a0b565b6060611aec83836040518060600160405280602781526020016132b2602791396120a5565b9392505050565b600080611b008486612e95565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a60205260409020909250829150611b4e8482613032565b50935093915050565b6001600160a01b038516331480611b9157506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b611bd25760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064016107ed565b6115c98585858585612182565b6001600160a01b038316611c265760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b60448201526064016107ed565b33611c5581856000611c37876122a8565b611c40876122a8565b60405180602001604052806000815250611f90565b6001600160a01b038416600090815260026020908152604080832086845290915290205482811015611c995760405162461bcd60e51b81526004016107ed90612f94565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b038416611d2a5760405162461bcd60e51b81526004016107ed90613116565b33611d4a81600087611d3b886122a8565b611d44886122a8565b87611f90565b6001600160a01b038516600090815260026020908152604080832087845290915281208054859290611d7d908490612e95565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46115c9816000878787876122f3565b8151835114611dfe5760405162461bcd60e51b81526004016107ed90612e53565b6001600160a01b038416611e245760405162461bcd60e51b81526004016107ed90613116565b33611e33818787878787611f90565b60005b8451811015611f2a576000858281518110611e5357611e53612de6565b602002602001015190506000858381518110611e7157611e71612de6565b6020908102919091018101516001600160a01b038b166000908152600283526040808220868352909352919091205490915081811015611ec35760405162461bcd60e51b81526004016107ed90612f94565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d16835290815282822086835290529081208054849290611f0f908490612e95565b9250508190555050505080611f2390612e7c565b9050611e36565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611f7a929190612fbe565b60405180910390a46109cc818787878787612446565b6001600160a01b0385166120175760005b835181101561201557828181518110611fbc57611fbc612de6565b6020026020010151600e6000868481518110611fda57611fda612de6565b602002602001015181526020019081526020016000206000828254611fff9190612e95565b9091555061200e905081612e7c565b9050611fa1565b505b6001600160a01b0384166109cc5760005b835181101561209c5782818151811061204357612043612de6565b6020026020010151600e600086848151811061206157612061612de6565b6020026020010151815260200190815260200160002060008282546120869190612eee565b90915550612095905081612e7c565b9050612028565b50505050505050565b60606001600160a01b0384163b61210d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016107ed565b600080856001600160a01b031685604051612128919061313c565b600060405180830381855af49150503d8060008114612163576040519150601f19603f3d011682016040523d82523d6000602084013e612168565b606091505b5091509150612178828286612523565b9695505050505050565b6001600160a01b0384166121a85760405162461bcd60e51b81526004016107ed90613116565b336121b8818787611d3b886122a8565b6001600160a01b0386166000908152600260209081526040808320878452909152902054838110156121fc5760405162461bcd60e51b81526004016107ed90612f94565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a16835290815282822088835290529081208054869290612248908490612e95565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461209c8288888888886122f3565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106122e2576122e2612de6565b602090810291909101015292915050565b6001600160a01b0384163b156109cc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906123379089908990889088908890600401613158565b6020604051808303816000875af1925050508015612372575060408051601f3d908101601f1916820190925261236f9181019061319d565b60015b6123f45761237e6131ba565b806308c379a0036123b757506123926131d6565b8061239d57506123b9565b8060405162461bcd60e51b81526004016107ed9190612625565b505b60405162461bcd60e51b815260206004820152601060248201526f10a2a92198989a9aa922a1a2a4ab22a960811b60448201526064016107ed565b6001600160e01b0319811663f23a6e6160e01b1461209c5760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016107ed565b6001600160a01b0384163b156109cc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061248a908990899088908890889060040161325f565b6020604051808303816000875af19250505080156124c5575060408051601f3d908101601f191682019092526124c29181019061319d565b60015b6124d15761237e6131ba565b6001600160e01b0319811663bc197c8160e01b1461209c5760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016107ed565b60608315612532575081611aec565b8251156125425782518084602001fd5b8160405162461bcd60e51b81526004016107ed9190612625565b80356001600160a01b038116811461257357600080fd5b919050565b6000806040838503121561258b57600080fd5b6125948361255c565b946020939093013593505050565b6001600160e01b0319811681146107ff57600080fd5b6000602082840312156125ca57600080fd5b8135611aec816125a2565b60005b838110156125f05781810151838201526020016125d8565b50506000910152565b600081518084526126118160208601602086016125d5565b601f01601f19169290920160200192915050565b602081526000611aec60208301846125f9565b60006020828403121561264a57600080fd5b5035919050565b60006020828403121561266357600080fd5b611aec8261255c565b6000806040838503121561267f57600080fd5b50508035926020909101359150565b6000806000606084860312156126a357600080fd5b6126ac8461255c565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156126fc576126fc6126c1565b6040525050565b60006001600160401b0382111561271c5761271c6126c1565b5060051b60200190565b600082601f83011261273757600080fd5b8135602061274482612703565b60405161275182826126d7565b83815260059390931b850182019282810191508684111561277157600080fd5b8286015b8481101561278c5780358352918301918301612775565b509695505050505050565b60006001600160401b038311156127b0576127b06126c1565b6040516127c7601f8501601f1916602001826126d7565b8091508381528484840111156127dc57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261280557600080fd5b611aec83833560208501612797565b600080600080600060a0868803121561282c57600080fd5b6128358661255c565b94506128436020870161255c565b935060408601356001600160401b038082111561285f57600080fd5b61286b89838a01612726565b9450606088013591508082111561288157600080fd5b61288d89838a01612726565b935060808801359150808211156128a357600080fd5b506128b0888289016127f4565b9150509295509295909350565b80151581146107ff57600080fd5b6000602082840312156128dd57600080fd5b8135611aec816128bd565b600080604083850312156128fb57600080fd5b82356001600160401b038082111561291257600080fd5b818501915085601f83011261292657600080fd5b8135602061293382612703565b60405161294082826126d7565b83815260059390931b850182019282810191508984111561296057600080fd5b948201945b83861015612985576129768661255c565b82529482019490820190612965565b9650508601359250508082111561299b57600080fd5b506129a885828601612726565b9150509250929050565b600081518084526020808501945080840160005b838110156129e2578151875295820195908201906001016129c6565b509495945050505050565b602081526000611aec60208301846129b2565b600080600060608486031215612a1557600080fd5b612a1e8461255c565b925060208401356001600160401b0380821115612a3a57600080fd5b612a4687838801612726565b93506040860135915080821115612a5c57600080fd5b50612a6986828701612726565b9150509250925092565b600060208284031215612a8557600080fd5b81356001600160401b03811115612a9b57600080fd5b8201601f81018413612aac57600080fd5b6113db84823560208401612797565b600080600060608486031215612ad057600080fd5b83359250612ae06020850161255c565b9150604084013590509250925092565b60008060408385031215612b0357600080fd5b612b0c8361255c565b91506020830135612b1c816128bd565b809150509250929050565b60008060208385031215612b3a57600080fd5b82356001600160401b0380821115612b5157600080fd5b818501915085601f830112612b6557600080fd5b813581811115612b7457600080fd5b8660208260051b8501011115612b8957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612bf057603f19888603018452612bde8583516125f9565b94509285019290850190600101612bc2565b5092979650505050505050565b60008083601f840112612c0f57600080fd5b5081356001600160401b03811115612c2657600080fd5b602083019150836020828501011115612c3e57600080fd5b9250929050565b600080600080600060608688031215612c5d57600080fd5b8535945060208601356001600160401b0380821115612c7b57600080fd5b612c8789838a01612bfd565b90965094506040880135915080821115612ca057600080fd5b50612cad88828901612bfd565b969995985093965092949392505050565b60008060408385031215612cd157600080fd5b612cda8361255c565b9150612ce86020840161255c565b90509250929050565b600080600080600060a08688031215612d0957600080fd5b612d128661255c565b9450612d206020870161255c565b9350604086013592506060860135915060808601356001600160401b03811115612d4957600080fd5b6128b0888289016127f4565b600181811c90821680612d6957607f821691505b602082108103612d8957634e487b7160e01b600052602260045260246000fd5b50919050565b60008351612da18184602088016125d5565b835190830190612db58183602088016125d5565b01949350505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176106f4576106f4612dfc565b634e487b7160e01b600052601260045260246000fd5b600082612e4e57612e4e612e29565b500490565b6020808252600f908201526e0988a9c8ea890be9a92a69a82a8869608b1b604082015260600190565b600060018201612e8e57612e8e612dfc565b5060010190565b808201808211156106f4576106f4612dfc565b6000808335601e19843603018112612ebf57600080fd5b8301803591506001600160401b03821115612ed957600080fd5b602001915036819003821315612c3e57600080fd5b818103818111156106f4576106f4612dfc565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000612f44606083018688612f01565b8281036040840152612f57818587612f01565b98975050505050505050565b600082612f7257612f72612e29565b500690565b600060208284031215612f8957600080fd5b8151611aec816128bd565b60208082526010908201526f125394d551919250d251539517d0905360821b604082015260600190565b604081526000612fd160408301856129b2565b8281036020840152612fe381856129b2565b95945050505050565b601f8211156103e257600081815260208120601f850160051c810160208610156130135750805b601f850160051c820191505b818110156109cc5782815560010161301f565b81516001600160401b0381111561304b5761304b6126c1565b61305f816130598454612d55565b84612fec565b602080601f831160018114613094576000841561307c5750858301515b600019600386901b1c1916600185901b1785556109cc565b600085815260208120601f198616915b828110156130c3578886015182559484019460019091019084016130a4565b50858210156130e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061310460408301856125f9565b8281036020840152612fe381856125f9565b6020808252600c908201526b2a27afad22a927afa0a2222960a11b604082015260600190565b6000825161314e8184602087016125d5565b9190910192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090613192908301846125f9565b979650505050505050565b6000602082840312156131af57600080fd5b8151611aec816125a2565b600060033d11156131d35760046000803e5060005160e01c5b90565b600060443d10156131e45790565b6040516003193d81016004833e81513d6001600160401b03816024840111818411171561321357505050505090565b828501915081518181111561322b5750505050505090565b843d87010160208285010111156132455750505050505090565b613254602082860101876126d7565b509095945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061328b908301866129b2565b828103606084015261329d81866129b2565b90508281036080840152612f5781856125f956fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205c0dc0cb1a4bbf4ae13ecbbe658abcbc4aac9bf98c0c03a1e1b9ee32d38cf6ac64736f6c63430008130033",
    "sourceMap": "1751:10217:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:64:18;;;;;;;;;;-1:-1:-1;645:64:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:25:46;;;585:2;570:18;645:64:18;;;;;;;;7447:449:17;;;;;;;;;;-1:-1:-1;7447:449:17;;;;;:::i;:::-;;:::i;:::-;;;1184:14:46;;1177:22;1159:41;;1147:2;1132:18;7447:449:17;1019:187:46;418:18:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3144:219:17:-;;;;;;;;;;-1:-1:-1;3144:219:17;;;;;:::i;:::-;;:::i;1133:173:31:-;;;;;;;;;;-1:-1:-1;1133:173:31;;;;;:::i;:::-;;:::i;:::-;;1277:203:24;;;;;;;;;;-1:-1:-1;1277:203:24;;;;;:::i;:::-;;:::i;1421:347:32:-;;;;;;;;;;-1:-1:-1;1421:347:32;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2788:32:46;;;2770:51;;2852:2;2837:18;;2830:34;;;;2743:18;1421:347:32;2596:274:46;4524:534:17;;;;;;:::i;:::-;;:::i;9142:303::-;;;;;;;;;;-1:-1:-1;9142:303:17;;;;;:::i;:::-;;:::i;243:208:29:-;;;;;;;;;;-1:-1:-1;243:208:29;;;;;:::i;:::-;;:::i;8160:112:17:-;;;;;;;;;;-1:-1:-1;8244:21:17;;8160:112;;806:142:30;;;;;;;;;;;;905:42;806:142;;;;;-1:-1:-1;;;;;6717:32:46;;;6699:51;;6687:2;6672:18;806:142:30;6520:236:46;5538:128:17;;;;;;;;;;-1:-1:-1;5538:128:17;;;;;:::i;:::-;;;;;2008:381:32;;;;;;;;;;-1:-1:-1;2008:381:32;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6951:32:46;;;6933:51;;7032:6;7020:19;;;7015:2;7000:18;;6993:47;6906:18;2008:381:32;6761:285:46;1788:482:18;;;;;;;;;;-1:-1:-1;1788:482:18;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;205:31:29:-;;;;;;;;;;-1:-1:-1;205:31:29;;;;;;;;3087:256:32;;;;;;;;;;-1:-1:-1;3087:256:32;;;;;:::i;:::-;;:::i;980:96:24:-;;;;;;;;;;-1:-1:-1;1054:8:24;:15;980:96;;6621:564:17;;;;;;;;;;-1:-1:-1;6621:564:17;;;;;:::i;:::-;;:::i;871:86:31:-;;;;;;;;;;-1:-1:-1;944:6:31;;-1:-1:-1;;;;;944:6:31;871:86;;1003:188:25;;;;;;;;;;-1:-1:-1;1003:188:25;;;;;:::i;:::-;;:::i;442:20:18:-;;;;;;;;;;;;;:::i;4281:288:32:-;;;;;;;;;;-1:-1:-1;4281:288:32;;;;;:::i;:::-;;:::i;8505:227:17:-;;;;;;;;;;-1:-1:-1;8505:227:17;;;;;:::i;:::-;;:::i;698:319:28:-;;;;;;;;;;-1:-1:-1;698:319:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2499:144:32:-;;;;;;;;;;-1:-1:-1;2599:16:32;;-1:-1:-1;;;;;2599:16:32;;;-1:-1:-1;;;2624:10:32;;;;2499:144;;2347:46:17;;;;;;;;;;-1:-1:-1;2347:46:17;;;;;:::i;:::-;;;;;;;;;;;;;;1254:592:27;;;;;;;;;;-1:-1:-1;1254:592:27;;;;;:::i;:::-;;:::i;565:34:25:-;;;;;;;;;;;;;:::i;716:68:18:-;;;;;;;;;;-1:-1:-1;716:68:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;8799:271:17;;;;;;;;;;-1:-1:-1;8799:271:17;;;;;:::i;:::-;;:::i;5951:376::-;;;;;;;;;;-1:-1:-1;5951:376:17;;;;;:::i;:::-;;:::i;7447:449::-;7550:4;-1:-1:-1;;;;;;;;;7585:25:17;;;;:100;;-1:-1:-1;;;;;;;;;;7660:25:17;;;7585:100;:176;;;-1:-1:-1;;;;;;;;;;7736:25:17;;;7585:176;:279;;;-1:-1:-1;;;;;;;7823:41:17;;-1:-1:-1;;;7823:41:17;7585:279;7566:298;7447:449;-1:-1:-1;;7447:449:17:o;418:18:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3144:219:17:-;3213:13;3238:22;3263:21;3275:8;3263:11;:21::i;:::-;3238:46;;3325:8;3335:19;:8;:17;:19::i;:::-;3308:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3294:62;;;3144:219;;;:::o;1133:173:31:-;1203:14;:12;:14::i;:::-;1198:70;;1233:24;;-1:-1:-1;;;1233:24:31;;;;;;;:::i;:::-;;;;;;;;1198:70;1277:22;1289:9;1277:11;:22::i;:::-;1133:173;:::o;1277:203:24:-;1341:7;1374:17;1054:8;:15;;980:96;1374:17;1364:6;:27;1360:81;;1407:23;;-1:-1:-1;;;1407:23:24;;15844:2:46;1407:23:24;;;15826:21:46;15883:2;15863:18;;;15856:30;-1:-1:-1;;;15902:18:46;;;15895:43;15955:18;;1407:23:24;15642:337:46;1360:81:24;1457:8;1466:6;1457:16;;;;;;;;:::i;:::-;;;;;;;;;1450:23;;1277:203;;;:::o;1421:347:32:-;1558:16;1576:21;1614:17;1633:11;1648:31;1671:7;1648:22;:31::i;:::-;1613:66;;-1:-1:-1;1613:66:32;;-1:-1:-1;1613:66:32;;;-1:-1:-1;1755:6:32;1736:15;1613:66;1736:9;:15;:::i;:::-;1735:26;;;;:::i;:::-;1719:42;;1603:165;;1421:347;;;;;:::o;4524:534:17:-;245:1:43;548:7;;:19;540:63;;;;-1:-1:-1;;;540:63:43;;16880:2:46;540:63:43;;;16862:21:46;16919:2;16899:18;;;16892:30;16958:33;16938:18;;;16931:61;17009:18;;540:63:43;16678:355:46;540:63:43;245:1;678:7;:18;8244:21:17;;4679:8:::1;:30;4671:53;;;::::0;-1:-1:-1;;;4671:53:17;;17240:2:46;4671:53:17::1;::::0;::::1;17222:21:46::0;17279:2;17259:18;;;17252:30;-1:-1:-1;;;17298:18:46;;;17291:40;17348:18;;4671:53:17::1;17038:334:46::0;4671:53:17::1;4855:54;4878:9;4889:8;4899:9;4855:22;:54::i;:::-;5031:8;5020:9;-1:-1:-1::0;;;;;4994:57:17::1;5008:10;-1:-1:-1::0;;;;;4994:57:17::1;;5041:9;4994:57;;;;597:25:46::0;;585:2;570:18;;451:177;4994:57:17::1;;;;;;;;-1:-1:-1::0;;202:1:43;851:7;:22;-1:-1:-1;4524:534:17:o;9142:303::-;9365:4;-1:-1:-1;;;;;2123:18:30;;2131:10;2123:18;2119:81;;2157:32;2178:10;2157:20;:32::i;:::-;9381:57:17::1;9409:4;9415:2;9419:3;9424:7;9433:4;9381:27;:57::i;:::-;9142:303:::0;;;;;;:::o;243:208:29:-;321:28;:26;:28::i;:::-;313:84;;;;-1:-1:-1;;;313:84:29;;17579:2:46;313:84:29;;;17561:21:46;17618:2;17598:18;;;17591:30;17657:34;17637:18;;;17630:62;-1:-1:-1;;;17708:18:46;;;17701:41;17759:19;;313:84:29;17377:407:46;313:84:29;407:37;431:12;407:23;:37::i;2008:381:32:-;2088:7;2152:29;;;:19;:29;;;;;;;;2115:66;;;;;;;;;;-1:-1:-1;;;;;2115:66:32;;;;;;;;;;;;;;;;2088:7;;2211:39;:171;;2327:25;;2361:19;;;;2211:171;;;2270:16;;-1:-1:-1;;;;;2270:16:32;;;-1:-1:-1;;;2295:10:32;;;;2211:171;2192:190;;;;;2008:381;;;:::o;1788:482:18:-;1939:16;1998:3;:10;1979:8;:15;:29;1971:57;;;;-1:-1:-1;;;1971:57:18;;;;;;;:::i;:::-;2039:30;2086:8;:15;-1:-1:-1;;;;;2072:30:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2072:30:18;;2039:63;;2118:9;2113:120;2137:8;:15;2133:1;:19;2113:120;;;2192:9;:22;2202:8;2211:1;2202:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2192:22:18;-1:-1:-1;;;;;2192:22:18;;;;;;;;;;;;:30;2215:3;2219:1;2215:6;;;;;;;;:::i;:::-;;;;;;;2192:30;;;;;;;;;;;;2173:13;2187:1;2173:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2154:3;;;:::i;:::-;;;2113:120;;;-1:-1:-1;2250:13:18;1788:482;-1:-1:-1;;;1788:482:18:o;3087:256:32:-;3199:20;:18;:20::i;:::-;3194:76;;3235:24;;-1:-1:-1;;;3235:24:32;;;;;;;:::i;3194:76::-;3280:56;3305:17;3324:11;3280:24;:56::i;:::-;3087:256;;:::o;6621:564:17:-;6785:10;-1:-1:-1;;;;;6814:16:17;;;;;:52;;-1:-1:-1;;;;;;6834:24:17;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;6814:52;6806:82;;;;-1:-1:-1;;;6806:82:17;;18475:2:46;6806:82:17;;;18457:21:46;18514:2;18494:18;;;18487:30;-1:-1:-1;;;18533:18:46;;;18526:47;18590:18;;6806:82:17;18273:341:46;6806:82:17;6926:8;:15;6906:9;:16;:35;6898:63;;;;-1:-1:-1;;;6898:63:17;;18821:2:46;6898:63:17;;;18803:21:46;18860:2;18840:18;;;18833:30;-1:-1:-1;;;18879:18:46;;;18872:45;18934:18;;6898:63:17;18619:339:46;6898:63:17;6977:9;6972:157;6996:9;:16;6992:1;:20;6972:157;;;7079:8;7088:1;7079:11;;;;;;;;:::i;:::-;;;;;;;7044:9;:17;7054:6;-1:-1:-1;;;;;7044:17:17;-1:-1:-1;;;;;7044:17:17;;;;;;;;;;;;:31;7062:9;7072:1;7062:12;;;;;;;;:::i;:::-;;;;;;;7044:31;;;;;;;;;;;;:46;;7036:82;;;;-1:-1:-1;;;7036:82:17;;19165:2:46;7036:82:17;;;19147:21:46;19204:2;19184:18;;;19177:30;-1:-1:-1;;;19223:18:46;;;19216:53;19286:18;;7036:82:17;18963:347:46;7036:82:17;7014:6;7019:1;7014:6;;:::i;:::-;;;6972:157;;;;7139:39;7150:6;7158:9;7169:8;7139:10;:39::i;:::-;6758:427;6621:564;;;:::o;1003:188:25:-;1080:20;:18;:20::i;:::-;1075:76;;1116:24;;-1:-1:-1;;;1116:24:25;;;;;;;:::i;1075:76::-;1161:23;1179:4;1161:17;:23::i;442:20:18:-;;;;;;;:::i;4281:288:32:-;4428:20;:18;:20::i;:::-;4423:76;;4464:24;;-1:-1:-1;;;4464:24:32;;;;;;;:::i;4423:76::-;4509:53;4535:8;4545:10;4557:4;4509:25;:53::i;8505:227:17:-;8658:8;2296:30:30;2317:8;2296:20;:30::i;:::-;8682:43:17::1;8706:8;8716;8682:23;:43::i;698:319:28:-:0;775:22;831:4;-1:-1:-1;;;;;819:24:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:34;;858:9;853:134;873:15;;;853:134;;;922:54;961:4;968;;973:1;968:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;922:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;922:30:28;;-1:-1:-1;;;922:54:28:i;:::-;909:7;917:1;909:10;;;;;;;;:::i;:::-;;;;;;:67;;;;890:3;;;;;:::i;:::-;;;;853:134;;;;698:319;;;;:::o;1254:592:27:-;1409:15;1441:14;:12;:14::i;:::-;1436:70;;1471:24;;-1:-1:-1;;;1471:24:27;;;;;;;:::i;1436:70::-;1520:7;1531:1;1520:12;1516:58;;1548:15;;-1:-1:-1;;;1548:15:27;;20173:2:46;1548:15:27;;;20155:21:46;20212:1;20192:18;;;20185:29;-1:-1:-1;;;20230:18:46;;;20223:35;20275:18;;1548:15:27;19971:328:46;1516:58:27;1584:15;1602:21;;1584:39;;1669:55;1688:7;1697;1706:17;;1669:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1669:18:27;;-1:-1:-1;;;1669:55:27:i;:::-;1635:21;1634:90;;;;;-1:-1:-1;1757:7:27;1740:74;1786:1;1766:17;1776:7;1757;1766:17;:::i;:::-;:21;;;;:::i;:::-;1789:17;;1808:5;;1740:74;;;;;;;;;;:::i;:::-;;;;;;;;1825:14;1254:592;;;;;;;:::o;565:34:25:-;;;;;;;:::i;8799:271:17:-;8997:4;-1:-1:-1;;;;;2123:18:30;;2131:10;2123:18;2119:81;;2157:32;2178:10;2157:20;:32::i;:::-;9013:50:17::1;9036:4;9042:2;9046;9050:6;9058:4;9013:22;:50::i;5951:376::-:0;6090:10;-1:-1:-1;;;;;6119:16:17;;;;;:52;;-1:-1:-1;;;;;;6139:24:17;;;;;;;:16;:24;;;;;;;;:32;;;;;;;;;;;;6119:52;6111:82;;;;-1:-1:-1;;;6111:82:17;;18475:2:46;6111:82:17;;;18457:21:46;18514:2;18494:18;;;18487:30;-1:-1:-1;;;18533:18:46;;;18526:47;18590:18;;6111:82:17;18273:341:46;6111:82:17;-1:-1:-1;;;;;6211:17:17;;;;;;:9;:17;;;;;;;;:27;;;;;;;;;:38;-1:-1:-1;6211:38:17;6203:74;;;;-1:-1:-1;;;6203:74:17;;19165:2:46;6203:74:17;;;19147:21:46;19204:2;19184:18;;;19177:30;-1:-1:-1;;;19223:18:46;;;19216:53;19286:18;;6203:74:17;18963:347:46;6203:74:17;6288:32;6294:6;6302:8;6312:7;6288:5;:32::i;2153:390:24:-;2215:13;2240:25;2268:17;1054:8;:15;;980:96;2268:17;2240:45;;2295:24;2322:8;2295:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2341:161;2365:17;2361:1;:21;2341:161;;;2421:7;2429:1;2421:10;;;;;;;;:::i;:::-;;;;;;;2410:8;:21;2406:86;;;2458:7;:19;2466:7;2474:1;2466:10;;;;;;;;:::i;:::-;;;;;;;2458:19;;;;;;;;;;;2451:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:390;;;:::o;2406:86::-;2384:6;2389:1;2384:6;;:::i;:::-;;;2341:161;;;-1:-1:-1;2511:25:24;;-1:-1:-1;;;2511:25:24;;21422:2:46;2511:25:24;;;21404:21:46;21461:2;21441:18;;;21434:30;-1:-1:-1;;;21480:18:46;;;21473:45;21535:18;;2511:25:24;21220:339:46;305:703:42;361:13;578:5;587:1;578:10;574:51;;-1:-1:-1;;604:10:42;;;;;;;;;;;;-1:-1:-1;;;604:10:42;;;;;305:703::o;574:51::-;649:5;634:12;688:75;695:9;;688:75;;720:8;;;;:::i;:::-;;-1:-1:-1;742:10:42;;-1:-1:-1;750:2:42;742:10;;:::i;:::-;;;688:75;;;772:19;804:6;-1:-1:-1;;;;;794:17:42;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:17:42;;772:39;;821:150;828:10;;821:150;;854:11;864:1;854:11;;:::i;:::-;;-1:-1:-1;922:10:42;930:2;922:5;:10;:::i;:::-;909:24;;:2;:24;:::i;:::-;896:39;;879:6;886;879:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;879:56:42;;;;;;;;-1:-1:-1;949:11:42;958:2;949:11;;:::i;:::-;;;821:150;;;994:6;305:703;-1:-1:-1;;;;305:703:42:o;10717:115:17:-;10781:4;10818:7;944:6:31;;-1:-1:-1;;;;;944:6:31;;871:86;10818:7:17;-1:-1:-1;;;;;10804:21:17;:10;-1:-1:-1;;;;;10804:21:17;;10797:28;;10717:115;:::o;1421:172:31:-;1501:6;;;-1:-1:-1;;;;;1517:18:31;;;-1:-1:-1;;;;;;1517:18:31;;;;;;;1551:35;;1501:6;;;1517:18;1501:6;;1551:35;;1480:18;;1551:35;1470:123;1421:172;:::o;10016:193:17:-;10161:41;10167:9;10178:8;10188:9;10161:41;;;;;;;;;;;;:5;:41::i;2350:477:30:-;2539:19;;;;2535:286;;;905:42;2578:45;:49;2574:237;;2652:67;;-1:-1:-1;;;2652:67:30;;2703:4;2652:67;;;21893:34:46;-1:-1:-1;;;;;21963:15:46;;21943:18;;;21936:43;905:42:30;;2652;;21828:18:46;;2652:67:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2647:150;;2750:28;;-1:-1:-1;;;2750:28:30;;-1:-1:-1;;;;;6717:32:46;;2750:28:30;;;6699:51:46;6672:18;;2750:28:30;6520:236:46;3088:360:18;-1:-1:-1;;;;;3300:18:18;;3308:10;3300:18;;:56;;-1:-1:-1;;;;;;3322:22:18;;;;;;:16;:22;;;;;;;;3345:10;3322:34;;;;;;;;;;3300:56;3292:87;;;;-1:-1:-1;;;3292:87:18;;22442:2:46;3292:87:18;;;22424:21:46;22481:2;22461:18;;;22454:30;-1:-1:-1;;;22500:18:46;;;22493:48;22558:18;;3292:87:18;22240:342:46;3292:87:18;3389:52;3412:4;3418:2;3422:3;3427:7;3436:4;3389:22;:52::i;:::-;3088:360;;;;;:::o;457:160:29:-;528:19;:34;;-1:-1:-1;;528:34:29;;;;;;;;;;577:33;;1159:41:46;;;577:33:29;;1147:2:46;1132:18;577:33:29;;;;;;;457:160;:::o;3430:334:32:-;3549:6;3535:11;:20;3531:76;;;3571:25;;-1:-1:-1;;;3571:25:32;;22789:2:46;3571:25:32;;;22771:21:46;22828:2;22808:18;;;22801:30;-1:-1:-1;;;22847:18:46;;;22840:45;22902:18;;3571:25:32;22587:339:46;3531:76:32;3617:16;:36;;-1:-1:-1;;;;;3617:36:32;;-1:-1:-1;;;;;;3663:32:32;;;;;-1:-1:-1;;;3663:32:32;;;;;;;;3711:46;;597:25:46;;;3711:46:32;;585:2:46;570:18;3711:46:32;;;;;;;3430:334;;:::o;7284:799:18:-;-1:-1:-1;;;;;7431:18:18;;7423:45;;;;-1:-1:-1;;;7423:45:18;;23133:2:46;7423:45:18;;;23115:21:46;23172:2;23152:18;;;23145:30;-1:-1:-1;;;23191:18:46;;;23184:44;23245:18;;7423:45:18;22931:338:46;7423:45:18;7500:7;:14;7486:3;:10;:28;7478:56;;;;-1:-1:-1;;;7478:56:18;;;;;;;:::i;:::-;7545:16;7564:10;7545:29;;7585:66;7606:8;7616:4;7630:1;7634:3;7639:7;7585:66;;;;;;;;;;;;:20;:66::i;:::-;7667:9;7662:344;7686:3;:10;7682:1;:14;7662:344;;;7717:10;7730:3;7734:1;7730:6;;;;;;;;:::i;:::-;;;;;;;7717:19;;7750:14;7767:7;7775:1;7767:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7814:15:18;;7792:19;7814:15;;;:9;:15;;;;;;:19;;;;;;;;;;;7767:10;;-1:-1:-1;7855:21:18;;;;7847:50;;;;-1:-1:-1;;;7847:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;7939:15:18;;;;;;:9;:15;;;;;;;;:19;;;;;;;;;;7961:20;;7939:42;;7698:3;;;;:::i;:::-;;;;7662:344;;;;8059:1;-1:-1:-1;;;;;8021:55:18;8045:4;-1:-1:-1;;;;;8021:55:18;8035:8;-1:-1:-1;;;;;8021:55:18;;8063:3;8068:7;8021:55;;;;;;;:::i;:::-;;;;;;;;7413:670;7284:799;;;:::o;1273:185:25:-;1339:21;1363:11;1339:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:4;1384:11;:18;;;;;;:::i;:::-;;1418:33;1437:7;1446:4;1418:33;;;;;;;:::i;:::-;;;;;;;;1329:129;1273:185;:::o;4671:362:32:-;4818:6;4811:4;:13;4807:69;;;4840:25;;-1:-1:-1;;;4840:25:32;;22789:2:46;4840:25:32;;;22771:21:46;22828:2;22808:18;;;22801:30;-1:-1:-1;;;22847:18:46;;;22840:45;22902:18;;4840:25:32;22587:339:46;4807:69:32;4918:49;;;;;;;;-1:-1:-1;;;;;4918:49:32;;;;;;;;;;;;;-1:-1:-1;4886:29:32;;;:19;:29;;;;;:81;;;;-1:-1:-1;;;;;;4886:81:32;;;;;;;;;;;-1:-1:-1;4886:81:32;;;;;;;4983:43;;597:25:46;;;4918:49:32;;4886:29;;4983:43;;570:18:46;4983:43:32;;;;;;;;4671:362;;;:::o;2457:291:18:-;2567:10;-1:-1:-1;;;;;2595:17:18;;;;2587:44;;;;-1:-1:-1;;;2587:44:18;;26883:2:46;2587:44:18;;;26865:21:46;26922:2;26902:18;;;26895:30;-1:-1:-1;;;26941:18:46;;;26934:44;26995:18;;2587:44:18;26681:338:46;2587:44:18;-1:-1:-1;;;;;2641:23:18;;;;;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;:44;;-1:-1:-1;;2641:44:18;;;;;;;;;;2700:41;;1159::46;;;2700::18;;1132:18:46;2700:41:18;1019:187:46;6538:198:41;6621:12;6652:77;6673:6;6681:4;6652:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6645:84;6538:198;-1:-1:-1;;;6538:198:41:o;2840:362:24:-;2990:25;;3054:24;3065:13;3054:8;:24;:::i;:::-;3126:8;:22;;;;;;;;;;;;;-1:-1:-1;3159:16:24;;;:7;3126:22;3159:16;;;;3044:34;;-1:-1:-1;3044:34:24;;-1:-1:-1;3159:36:24;3178:17;3159:16;:36;:::i;:::-;;2840:362;;;;;;:::o;2754:328:18:-;-1:-1:-1;;;;;2941:18:18;;2949:10;2941:18;;:56;;-1:-1:-1;;;;;;2963:22:18;;;;;;:16;:22;;;;;;;;2986:10;2963:34;;;;;;;;;;2941:56;2933:87;;;;-1:-1:-1;;;2933:87:18;;22442:2:46;2933:87:18;;;22424:21:46;22481:2;22461:18;;;22454:30;-1:-1:-1;;;22500:18:46;;;22493:48;22558:18;;2933:87:18;22240:342:46;2933:87:18;3030:45;3048:4;3054:2;3058;3062:6;3070:4;3030:17;:45::i;6691:587::-;-1:-1:-1;;;;;6813:18:18;;6805:45;;;;-1:-1:-1;;;6805:45:18;;23133:2:46;6805:45:18;;;23115:21:46;23172:2;23152:18;;;23145:30;-1:-1:-1;;;23191:18:46;;;23184:44;23245:18;;6805:45:18;22931:338:46;6805:45:18;6880:10;6901:102;6880:10;6932:4;6861:16;6950:21;6968:2;6950:17;:21::i;:::-;6973:25;6991:6;6973:17;:25::i;:::-;6901:102;;;;;;;;;;;;:20;:102::i;:::-;-1:-1:-1;;;;;7036:15:18;;7014:19;7036:15;;;:9;:15;;;;;;;;:19;;;;;;;;;7073:21;;;;7065:50;;;;-1:-1:-1;;;7065:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;7149:15:18;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;7171:20;;;7149:42;;7217:54;;27198:25:46;;;27239:18;;;27232:34;;;7149:15:18;;7217:54;;;;;27171:18:46;7217:54:18;;;;;;;6795:483;;6691:587;;;:::o;5482:530::-;-1:-1:-1;;;;;5629:16:18;;5621:41;;;;-1:-1:-1;;;5621:41:18;;;;;;;:::i;:::-;5692:10;5713:102;5692:10;5673:16;5756:2;5760:21;5778:2;5760:17;:21::i;:::-;5783:25;5801:6;5783:17;:25::i;:::-;5810:4;5713:20;:102::i;:::-;-1:-1:-1;;;;;5826:13:18;;;;;;:9;:13;;;;;;;;:17;;;;;;;;:27;;5847:6;;5826:13;:27;;5847:6;;5826:27;:::i;:::-;;;;-1:-1:-1;;5868:52:18;;;27198:25:46;;;27254:2;27239:18;;27232:34;;;-1:-1:-1;;;;;5868:52:18;;;;5901:1;;5868:52;;;;;;27171:18:46;5868:52:18;;;;;;;5931:74;5962:8;5980:1;5984:2;5988;5992:6;6000:4;5931:30;:74::i;4386:967::-;4606:7;:14;4592:3;:10;:28;4584:56;;;;-1:-1:-1;;;4584:56:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;4658:16:18;;4650:41;;;;-1:-1:-1;;;4650:41:18;;;;;;;:::i;:::-;4721:10;4742:60;4721:10;4773:4;4779:2;4783:3;4788:7;4797:4;4742:20;:60::i;:::-;4818:9;4813:385;4837:3;:10;4833:1;:14;4813:385;;;4868:10;4881:3;4885:1;4881:6;;;;;;;;:::i;:::-;;;;;;;4868:19;;4901:14;4918:7;4926:1;4918:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4965:15:18;;4943:19;4965:15;;;:9;:15;;;;;;:19;;;;;;;;;;;4918:10;;-1:-1:-1;5006:21:18;;;;4998:50;;;;-1:-1:-1;;;4998:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;5090:15:18;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;5112:20;;;5090:42;;5160:13;;;;;;;;;;;:17;;;;;;;;:27;;5126:6;;5090:15;5160:27;;5126:6;;5160:27;:::i;:::-;;;;;;;;4854:344;;;4849:3;;;;:::i;:::-;;;4813:385;;;;5243:2;-1:-1:-1;;;;;5213:47:18;5237:4;-1:-1:-1;;;;;5213:47:18;5227:8;-1:-1:-1;;;;;5213:47:18;;5247:3;5252:7;5213:47;;;;;;;:::i;:::-;;;;;;;;5271:75;5307:8;5317:4;5323:2;5327:3;5332:7;5341:4;5271:35;:75::i;11334:632:17:-;-1:-1:-1;;;;;11646:18:17;;11642:155;;11685:9;11680:107;11704:3;:10;11700:1;:14;11680:107;;;11762:7;11770:1;11762:10;;;;;;;;:::i;:::-;;;;;;;11739:11;:19;11751:3;11755:1;11751:6;;;;;;;;:::i;:::-;;;;;;;11739:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11716:3:17;;-1:-1:-1;11716:3:17;;:::i;:::-;;;11680:107;;;;11642:155;-1:-1:-1;;;;;11811:16:17;;11807:153;;11848:9;11843:107;11867:3;:10;11863:1;:14;11843:107;;;11925:7;11933:1;11925:10;;;;;;;;:::i;:::-;;;;;;;11902:11;:19;11914:3;11918:1;11914:6;;;;;;;;:::i;:::-;;;;;;;11902:19;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;11879:3:17;;-1:-1:-1;11879:3:17;;:::i;:::-;;;11843:107;;;;11334:632;;;;;;:::o;6922:387:41:-;7063:12;-1:-1:-1;;;;;1427:19:41;;;7087:69;;;;-1:-1:-1;;;7087:69:41;;27820:2:46;7087:69:41;;;27802:21:46;27859:2;27839:18;;;27832:30;27898:34;27878:18;;;27871:62;-1:-1:-1;;;27949:18:46;;;27942:36;27995:19;;7087:69:41;27618:402:46;7087:69:41;7168:12;7182:23;7209:6;-1:-1:-1;;;;;7209:19:41;7229:4;7209:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:67;;;;7251:51;7268:7;7277:10;7289:12;7251:16;:51::i;:::-;7244:58;6922:387;-1:-1:-1;;;;;;6922:387:41:o;3636:744:18:-;-1:-1:-1;;;;;3817:16:18;;3809:41;;;;-1:-1:-1;;;3809:41:18;;;;;;;:::i;:::-;3880:10;3901:96;3880:10;3932:4;3938:2;3942:21;3960:2;3942:17;:21::i;3901:96::-;-1:-1:-1;;;;;4030:15:18;;4008:19;4030:15;;;:9;:15;;;;;;;;:19;;;;;;;;;4067:21;;;;4059:50;;;;-1:-1:-1;;;4059:50:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;4143:15:18;;;;;;;:9;:15;;;;;;;;:19;;;;;;;;4165:20;;;4143:42;;4205:13;;;;;;;;;;;:17;;;;;;;;:27;;4179:6;;4143:15;4205:27;;4179:6;;4205:27;:::i;:::-;;;;-1:-1:-1;;4248:46:18;;;27198:25:46;;;27254:2;27239:18;;27232:34;;;-1:-1:-1;;;;;4248:46:18;;;;;;;;;;;;;;27171:18:46;4248:46:18;;;;;;;4305:68;4336:8;4346:4;4352:2;4356;4360:6;4368:4;4305:30;:68::i;9722:193::-;9841:16;;;9855:1;9841:16;;;;;;;;;9788;;9816:22;;9841:16;;;;;;;;;;;;-1:-1:-1;9841:16:18;9816:41;;9878:7;9867:5;9873:1;9867:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;9903:5;9722:193;-1:-1:-1;;9722:193:18:o;8309:667::-;-1:-1:-1;;;;;8516:14:18;;;:18;8512:458;;8554:72;;-1:-1:-1;;;8554:72:18;;-1:-1:-1;;;;;8554:38:18;;;;;:72;;8593:8;;8603:4;;8609:2;;8613:6;;8621:4;;8554:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8554:72:18;;;;;;;;-1:-1:-1;;8554:72:18;;;;;;;;;;;;:::i;:::-;;;8550:410;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8872:6;8865:14;;-1:-1:-1;;;8865:14:18;;;;;;;;:::i;8550:410::-;;;8919:26;;-1:-1:-1;;;8919:26:18;;30199:2:46;8919:26:18;;;30181:21:46;30238:2;30218:18;;;30211:30;-1:-1:-1;;;30257:18:46;;;30250:46;30313:18;;8919:26:18;29997:340:46;8550:410:18;-1:-1:-1;;;;;;8675:55:18;;-1:-1:-1;;;8675:55:18;8671:127;;8754:25;;-1:-1:-1;;;8754:25:18;;30544:2:46;8754:25:18;;;30526:21:46;30583:2;30563:18;;;30556:30;-1:-1:-1;;;30602:18:46;;;30595:45;30657:18;;8754:25:18;30342:339:46;8982:734:18;-1:-1:-1;;;;;9214:14:18;;;:18;9210:500;;9252:79;;-1:-1:-1;;;9252:79:18;;-1:-1:-1;;;;;9252:43:18;;;;;:79;;9296:8;;9306:4;;9312:3;;9317:7;;9326:4;;9252:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9252:79:18;;;;;;;;-1:-1:-1;;9252:79:18;;;;;;;;;;;;:::i;:::-;;;9248:452;;;;:::i;:::-;-1:-1:-1;;;;;;9410:60:18;;-1:-1:-1;;;9410:60:18;9406:132;;9494:25;;-1:-1:-1;;;9494:25:18;;30544:2:46;9494:25:18;;;30526:21:46;30583:2;30563:18;;;30556:30;-1:-1:-1;;;30602:18:46;;;30595:45;30657:18;;9494:25:18;30342:339:46;7529:692:41;7675:12;7703:7;7699:516;;;-1:-1:-1;7733:10:41;7726:17;;7699:516;7844:17;;:21;7840:365;;8038:10;8032:17;8098:15;8085:10;8081:2;8077:19;8070:44;7840:365;8177:12;8170:20;;-1:-1:-1;;;8170:20:41;;;;;;;;:::i;14:173:46:-;82:20;;-1:-1:-1;;;;;131:31:46;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:46:o;633:131::-;-1:-1:-1;;;;;;707:32:46;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:250::-;1296:1;1306:113;1320:6;1317:1;1314:13;1306:113;;;1396:11;;;1390:18;1377:11;;;1370:39;1342:2;1335:10;1306:113;;;-1:-1:-1;;1453:1:46;1435:16;;1428:27;1211:250::o;1466:271::-;1508:3;1546:5;1540:12;1573:6;1568:3;1561:19;1589:76;1658:6;1651:4;1646:3;1642:14;1635:4;1628:5;1624:16;1589:76;:::i;:::-;1719:2;1698:15;-1:-1:-1;;1694:29:46;1685:39;;;;1726:4;1681:50;;1466:271;-1:-1:-1;;1466:271:46:o;1742:220::-;1891:2;1880:9;1873:21;1854:4;1911:45;1952:2;1941:9;1937:18;1929:6;1911:45;:::i;1967:180::-;2026:6;2079:2;2067:9;2058:7;2054:23;2050:32;2047:52;;;2095:1;2092;2085:12;2047:52;-1:-1:-1;2118:23:46;;1967:180;-1:-1:-1;1967:180:46:o;2152:186::-;2211:6;2264:2;2252:9;2243:7;2239:23;2235:32;2232:52;;;2280:1;2277;2270:12;2232:52;2303:29;2322:9;2303:29;:::i;2343:248::-;2411:6;2419;2472:2;2460:9;2451:7;2447:23;2443:32;2440:52;;;2488:1;2485;2478:12;2440:52;-1:-1:-1;;2511:23:46;;;2581:2;2566:18;;;2553:32;;-1:-1:-1;2343:248:46:o;2875:322::-;2952:6;2960;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3060:29;3079:9;3060:29;:::i;:::-;3050:39;3136:2;3121:18;;3108:32;;-1:-1:-1;3187:2:46;3172:18;;;3159:32;;2875:322;-1:-1:-1;;;2875:322:46:o;3202:127::-;3263:10;3258:3;3254:20;3251:1;3244:31;3294:4;3291:1;3284:15;3318:4;3315:1;3308:15;3334:249;3444:2;3425:13;;-1:-1:-1;;3421:27:46;3409:40;;-1:-1:-1;;;;;3464:34:46;;3500:22;;;3461:62;3458:88;;;3526:18;;:::i;:::-;3562:2;3555:22;-1:-1:-1;;3334:249:46:o;3588:183::-;3648:4;-1:-1:-1;;;;;3673:6:46;3670:30;3667:56;;;3703:18;;:::i;:::-;-1:-1:-1;3748:1:46;3744:14;3760:4;3740:25;;3588:183::o;3776:724::-;3830:5;3883:3;3876:4;3868:6;3864:17;3860:27;3850:55;;3901:1;3898;3891:12;3850:55;3937:6;3924:20;3963:4;3986:43;4026:2;3986:43;:::i;:::-;4058:2;4052:9;4070:31;4098:2;4090:6;4070:31;:::i;:::-;4136:18;;;4228:1;4224:10;;;;4212:23;;4208:32;;;4170:15;;;;-1:-1:-1;4252:15:46;;;4249:35;;;4280:1;4277;4270:12;4249:35;4316:2;4308:6;4304:15;4328:142;4344:6;4339:3;4336:15;4328:142;;;4410:17;;4398:30;;4448:12;;;;4361;;4328:142;;;-1:-1:-1;4488:6:46;3776:724;-1:-1:-1;;;;;;3776:724:46:o;4505:468::-;4569:5;-1:-1:-1;;;;;4595:6:46;4592:30;4589:56;;;4625:18;;:::i;:::-;4674:2;4668:9;4686:69;4743:2;4722:15;;-1:-1:-1;;4718:29:46;4749:4;4714:40;4668:9;4686:69;:::i;:::-;4773:6;4764:15;;4803:6;4795;4788:22;4843:3;4834:6;4829:3;4825:16;4822:25;4819:45;;;4860:1;4857;4850:12;4819:45;4910:6;4905:3;4898:4;4890:6;4886:17;4873:44;4965:1;4958:4;4949:6;4941;4937:19;4933:30;4926:41;;4505:468;;;;;:::o;4978:220::-;5020:5;5073:3;5066:4;5058:6;5054:17;5050:27;5040:55;;5091:1;5088;5081:12;5040:55;5113:79;5188:3;5179:6;5166:20;5159:4;5151:6;5147:17;5113:79;:::i;5203:943::-;5357:6;5365;5373;5381;5389;5442:3;5430:9;5421:7;5417:23;5413:33;5410:53;;;5459:1;5456;5449:12;5410:53;5482:29;5501:9;5482:29;:::i;:::-;5472:39;;5530:38;5564:2;5553:9;5549:18;5530:38;:::i;:::-;5520:48;;5619:2;5608:9;5604:18;5591:32;-1:-1:-1;;;;;5683:2:46;5675:6;5672:14;5669:34;;;5699:1;5696;5689:12;5669:34;5722:61;5775:7;5766:6;5755:9;5751:22;5722:61;:::i;:::-;5712:71;;5836:2;5825:9;5821:18;5808:32;5792:48;;5865:2;5855:8;5852:16;5849:36;;;5881:1;5878;5871:12;5849:36;5904:63;5959:7;5948:8;5937:9;5933:24;5904:63;:::i;:::-;5894:73;;6020:3;6009:9;6005:19;5992:33;5976:49;;6050:2;6040:8;6037:16;6034:36;;;6066:1;6063;6056:12;6034:36;;6089:51;6132:7;6121:8;6110:9;6106:24;6089:51;:::i;:::-;6079:61;;;5203:943;;;;;;;;:::o;6151:118::-;6237:5;6230:13;6223:21;6216:5;6213:32;6203:60;;6259:1;6256;6249:12;6274:241;6330:6;6383:2;6371:9;6362:7;6358:23;6354:32;6351:52;;;6399:1;6396;6389:12;6351:52;6438:9;6425:23;6457:28;6479:5;6457:28;:::i;7051:1208::-;7169:6;7177;7230:2;7218:9;7209:7;7205:23;7201:32;7198:52;;;7246:1;7243;7236:12;7198:52;7286:9;7273:23;-1:-1:-1;;;;;7356:2:46;7348:6;7345:14;7342:34;;;7372:1;7369;7362:12;7342:34;7410:6;7399:9;7395:22;7385:32;;7455:7;7448:4;7444:2;7440:13;7436:27;7426:55;;7477:1;7474;7467:12;7426:55;7513:2;7500:16;7535:4;7558:43;7598:2;7558:43;:::i;:::-;7630:2;7624:9;7642:31;7670:2;7662:6;7642:31;:::i;:::-;7708:18;;;7796:1;7792:10;;;;7784:19;;7780:28;;;7742:15;;;;-1:-1:-1;7820:19:46;;;7817:39;;;7852:1;7849;7842:12;7817:39;7876:11;;;;7896:148;7912:6;7907:3;7904:15;7896:148;;;7978:23;7997:3;7978:23;:::i;:::-;7966:36;;7929:12;;;;8022;;;;7896:148;;;8063:6;-1:-1:-1;;8107:18:46;;8094:32;;-1:-1:-1;;8138:16:46;;;8135:36;;;8167:1;8164;8157:12;8135:36;;8190:63;8245:7;8234:8;8223:9;8219:24;8190:63;:::i;:::-;8180:73;;;7051:1208;;;;;:::o;8264:435::-;8317:3;8355:5;8349:12;8382:6;8377:3;8370:19;8408:4;8437:2;8432:3;8428:12;8421:19;;8474:2;8467:5;8463:14;8495:1;8505:169;8519:6;8516:1;8513:13;8505:169;;;8580:13;;8568:26;;8614:12;;;;8649:15;;;;8541:1;8534:9;8505:169;;;-1:-1:-1;8690:3:46;;8264:435;-1:-1:-1;;;;;8264:435:46:o;8704:261::-;8883:2;8872:9;8865:21;8846:4;8903:56;8955:2;8944:9;8940:18;8932:6;8903:56;:::i;8970:669::-;9097:6;9105;9113;9166:2;9154:9;9145:7;9141:23;9137:32;9134:52;;;9182:1;9179;9172:12;9134:52;9205:29;9224:9;9205:29;:::i;:::-;9195:39;;9285:2;9274:9;9270:18;9257:32;-1:-1:-1;;;;;9349:2:46;9341:6;9338:14;9335:34;;;9365:1;9362;9355:12;9335:34;9388:61;9441:7;9432:6;9421:9;9417:22;9388:61;:::i;:::-;9378:71;;9502:2;9491:9;9487:18;9474:32;9458:48;;9531:2;9521:8;9518:16;9515:36;;;9547:1;9544;9537:12;9515:36;;9570:63;9625:7;9614:8;9603:9;9599:24;9570:63;:::i;:::-;9560:73;;;8970:669;;;;;:::o;9852:450::-;9921:6;9974:2;9962:9;9953:7;9949:23;9945:32;9942:52;;;9990:1;9987;9980:12;9942:52;10030:9;10017:23;-1:-1:-1;;;;;10055:6:46;10052:30;10049:50;;;10095:1;10092;10085:12;10049:50;10118:22;;10171:4;10163:13;;10159:27;-1:-1:-1;10149:55:46;;10200:1;10197;10190:12;10149:55;10223:73;10288:7;10283:2;10270:16;10265:2;10261;10257:11;10223:73;:::i;10307:322::-;10384:6;10392;10400;10453:2;10441:9;10432:7;10428:23;10424:32;10421:52;;;10469:1;10466;10459:12;10421:52;10505:9;10492:23;10482:33;;10534:38;10568:2;10557:9;10553:18;10534:38;:::i;:::-;10524:48;;10619:2;10608:9;10604:18;10591:32;10581:42;;10307:322;;;;;:::o;10634:315::-;10699:6;10707;10760:2;10748:9;10739:7;10735:23;10731:32;10728:52;;;10776:1;10773;10766:12;10728:52;10799:29;10818:9;10799:29;:::i;:::-;10789:39;;10878:2;10867:9;10863:18;10850:32;10891:28;10913:5;10891:28;:::i;:::-;10938:5;10928:15;;;10634:315;;;;;:::o;10954:626::-;11051:6;11059;11112:2;11100:9;11091:7;11087:23;11083:32;11080:52;;;11128:1;11125;11118:12;11080:52;11168:9;11155:23;-1:-1:-1;;;;;11238:2:46;11230:6;11227:14;11224:34;;;11254:1;11251;11244:12;11224:34;11292:6;11281:9;11277:22;11267:32;;11337:7;11330:4;11326:2;11322:13;11318:27;11308:55;;11359:1;11356;11349:12;11308:55;11399:2;11386:16;11425:2;11417:6;11414:14;11411:34;;;11441:1;11438;11431:12;11411:34;11494:7;11489:2;11479:6;11476:1;11472:14;11468:2;11464:23;11460:32;11457:45;11454:65;;;11515:1;11512;11505:12;11454:65;11546:2;11538:11;;;;;11568:6;;-1:-1:-1;10954:626:46;;-1:-1:-1;;;;10954:626:46:o;11585:801::-;11745:4;11774:2;11814;11803:9;11799:18;11844:2;11833:9;11826:21;11867:6;11902;11896:13;11933:6;11925;11918:22;11971:2;11960:9;11956:18;11949:25;;12033:2;12023:6;12020:1;12016:14;12005:9;12001:30;11997:39;11983:53;;12071:2;12063:6;12059:15;12092:1;12102:255;12116:6;12113:1;12110:13;12102:255;;;12209:2;12205:7;12193:9;12185:6;12181:22;12177:36;12172:3;12165:49;12237:40;12270:6;12261;12255:13;12237:40;:::i;:::-;12227:50;-1:-1:-1;12335:12:46;;;;12300:15;;;;12138:1;12131:9;12102:255;;;-1:-1:-1;12374:6:46;;11585:801;-1:-1:-1;;;;;;;11585:801:46:o;12391:348::-;12443:8;12453:6;12507:3;12500:4;12492:6;12488:17;12484:27;12474:55;;12525:1;12522;12515:12;12474:55;-1:-1:-1;12548:20:46;;-1:-1:-1;;;;;12580:30:46;;12577:50;;;12623:1;12620;12613:12;12577:50;12660:4;12652:6;12648:17;12636:29;;12712:3;12705:4;12696:6;12688;12684:19;12680:30;12677:39;12674:59;;;12729:1;12726;12719:12;12674:59;12391:348;;;;;:::o;12744:788::-;12844:6;12852;12860;12868;12876;12929:2;12917:9;12908:7;12904:23;12900:32;12897:52;;;12945:1;12942;12935:12;12897:52;12981:9;12968:23;12958:33;;13042:2;13031:9;13027:18;13014:32;-1:-1:-1;;;;;13106:2:46;13098:6;13095:14;13092:34;;;13122:1;13119;13112:12;13092:34;13161:59;13212:7;13203:6;13192:9;13188:22;13161:59;:::i;:::-;13239:8;;-1:-1:-1;13135:85:46;-1:-1:-1;13327:2:46;13312:18;;13299:32;;-1:-1:-1;13343:16:46;;;13340:36;;;13372:1;13369;13362:12;13340:36;;13411:61;13464:7;13453:8;13442:9;13438:24;13411:61;:::i;:::-;12744:788;;;;-1:-1:-1;12744:788:46;;-1:-1:-1;13491:8:46;;13385:87;12744:788;-1:-1:-1;;;12744:788:46:o;13537:260::-;13605:6;13613;13666:2;13654:9;13645:7;13641:23;13637:32;13634:52;;;13682:1;13679;13672:12;13634:52;13705:29;13724:9;13705:29;:::i;:::-;13695:39;;13753:38;13787:2;13776:9;13772:18;13753:38;:::i;:::-;13743:48;;13537:260;;;;;:::o;13802:606::-;13906:6;13914;13922;13930;13938;13991:3;13979:9;13970:7;13966:23;13962:33;13959:53;;;14008:1;14005;13998:12;13959:53;14031:29;14050:9;14031:29;:::i;:::-;14021:39;;14079:38;14113:2;14102:9;14098:18;14079:38;:::i;:::-;14069:48;;14164:2;14153:9;14149:18;14136:32;14126:42;;14215:2;14204:9;14200:18;14187:32;14177:42;;14270:3;14259:9;14255:19;14242:33;-1:-1:-1;;;;;14290:6:46;14287:30;14284:50;;;14330:1;14327;14320:12;14284:50;14353:49;14394:7;14385:6;14374:9;14370:22;14353:49;:::i;14413:380::-;14492:1;14488:12;;;;14535;;;14556:61;;14610:4;14602:6;14598:17;14588:27;;14556:61;14663:2;14655:6;14652:14;14632:18;14629:38;14626:161;;14709:10;14704:3;14700:20;14697:1;14690:31;14744:4;14741:1;14734:15;14772:4;14769:1;14762:15;14626:161;;14413:380;;;:::o;14798:496::-;14977:3;15015:6;15009:13;15031:66;15090:6;15085:3;15078:4;15070:6;15066:17;15031:66;:::i;:::-;15160:13;;15119:16;;;;15182:70;15160:13;15119:16;15229:4;15217:17;;15182:70;:::i;:::-;15268:20;;14798:496;-1:-1:-1;;;;14798:496:46:o;15299:338::-;15501:2;15483:21;;;15540:2;15520:18;;;15513:30;-1:-1:-1;;;15574:2:46;15559:18;;15552:44;15628:2;15613:18;;15299:338::o;15984:127::-;16045:10;16040:3;16036:20;16033:1;16026:31;16076:4;16073:1;16066:15;16100:4;16097:1;16090:15;16116:127;16177:10;16172:3;16168:20;16165:1;16158:31;16208:4;16205:1;16198:15;16232:4;16229:1;16222:15;16248:168;16321:9;;;16352;;16369:15;;;16363:22;;16349:37;16339:71;;16390:18;;:::i;16421:127::-;16482:10;16477:3;16473:20;16470:1;16463:31;16513:4;16510:1;16503:15;16537:4;16534:1;16527:15;16553:120;16593:1;16619;16609:35;;16624:18;;:::i;:::-;-1:-1:-1;16658:9:46;;16553:120::o;17789:339::-;17991:2;17973:21;;;18030:2;18010:18;;;18003:30;-1:-1:-1;;;18064:2:46;18049:18;;18042:45;18119:2;18104:18;;17789:339::o;18133:135::-;18172:3;18193:17;;;18190:43;;18213:18;;:::i;:::-;-1:-1:-1;18260:1:46;18249:13;;18133:135::o;19315:125::-;19380:9;;;19401:10;;;19398:36;;;19414:18;;:::i;19445:521::-;19522:4;19528:6;19588:11;19575:25;19682:2;19678:7;19667:8;19651:14;19647:29;19643:43;19623:18;19619:68;19609:96;;19701:1;19698;19691:12;19609:96;19728:33;;19780:20;;;-1:-1:-1;;;;;;19812:30:46;;19809:50;;;19855:1;19852;19845:12;19809:50;19888:4;19876:17;;-1:-1:-1;19919:14:46;19915:27;;;19905:38;;19902:58;;;19956:1;19953;19946:12;20304:128;20371:9;;;20392:11;;;20389:37;;;20406:18;;:::i;20437:267::-;20526:6;20521:3;20514:19;20578:6;20571:5;20564:4;20559:3;20555:14;20542:43;-1:-1:-1;20630:1:46;20605:16;;;20623:4;20601:27;;;20594:38;;;;20686:2;20665:15;;;-1:-1:-1;;20661:29:46;20652:39;;;20648:50;;20437:267::o;20709:506::-;20952:6;20941:9;20934:25;20995:2;20990;20979:9;20975:18;20968:30;20915:4;21021:62;21079:2;21068:9;21064:18;21056:6;21048;21021:62;:::i;:::-;21131:9;21123:6;21119:22;21114:2;21103:9;21099:18;21092:50;21159;21202:6;21194;21186;21159:50;:::i;:::-;21151:58;20709:506;-1:-1:-1;;;;;;;;20709:506:46:o;21564:112::-;21596:1;21622;21612:35;;21627:18;;:::i;:::-;-1:-1:-1;21661:9:46;;21564:112::o;21990:245::-;22057:6;22110:2;22098:9;22089:7;22085:23;22081:32;22078:52;;;22126:1;22123;22116:12;22078:52;22158:9;22152:16;22177:28;22199:5;22177:28;:::i;23274:340::-;23476:2;23458:21;;;23515:2;23495:18;;;23488:30;-1:-1:-1;;;23549:2:46;23534:18;;23527:46;23605:2;23590:18;;23274:340::o;23619:465::-;23876:2;23865:9;23858:21;23839:4;23902:56;23954:2;23943:9;23939:18;23931:6;23902:56;:::i;:::-;24006:9;23998:6;23994:22;23989:2;23978:9;23974:18;23967:50;24034:44;24071:6;24063;24034:44;:::i;:::-;24026:52;23619:465;-1:-1:-1;;;;;23619:465:46:o;24215:545::-;24317:2;24312:3;24309:11;24306:448;;;24353:1;24378:5;24374:2;24367:17;24423:4;24419:2;24409:19;24493:2;24481:10;24477:19;24474:1;24470:27;24464:4;24460:38;24529:4;24517:10;24514:20;24511:47;;;-1:-1:-1;24552:4:46;24511:47;24607:2;24602:3;24598:12;24595:1;24591:20;24585:4;24581:31;24571:41;;24662:82;24680:2;24673:5;24670:13;24662:82;;;24725:17;;;24706:1;24695:13;24662:82;;24936:1352;25062:3;25056:10;-1:-1:-1;;;;;25081:6:46;25078:30;25075:56;;;25111:18;;:::i;:::-;25140:97;25230:6;25190:38;25222:4;25216:11;25190:38;:::i;:::-;25184:4;25140:97;:::i;:::-;25292:4;;25356:2;25345:14;;25373:1;25368:663;;;;26075:1;26092:6;26089:89;;;-1:-1:-1;26144:19:46;;;26138:26;26089:89;-1:-1:-1;;24893:1:46;24889:11;;;24885:24;24881:29;24871:40;24917:1;24913:11;;;24868:57;26191:81;;25338:944;;25368:663;24162:1;24155:14;;;24199:4;24186:18;;-1:-1:-1;;25404:20:46;;;25522:236;25536:7;25533:1;25530:14;25522:236;;;25625:19;;;25619:26;25604:42;;25717:27;;;;25685:1;25673:14;;;;25552:19;;25522:236;;;25526:3;25786:6;25777:7;25774:19;25771:201;;;25847:19;;;25841:26;-1:-1:-1;;25930:1:46;25926:14;;;25942:3;25922:24;25918:37;25914:42;25899:58;25884:74;;25771:201;-1:-1:-1;;;;;26018:1:46;26002:14;;;25998:22;25985:36;;-1:-1:-1;24936:1352:46:o;26293:383::-;26490:2;26479:9;26472:21;26453:4;26516:45;26557:2;26546:9;26542:18;26534:6;26516:45;:::i;:::-;26609:9;26601:6;26597:22;26592:2;26581:9;26577:18;26570:50;26637:33;26663:6;26655;26637:33;:::i;27277:336::-;27479:2;27461:21;;;27518:2;27498:18;;;27491:30;-1:-1:-1;;;27552:2:46;27537:18;;27530:42;27604:2;27589:18;;27277:336::o;28025:287::-;28154:3;28192:6;28186:13;28208:66;28267:6;28262:3;28255:4;28247:6;28243:17;28208:66;:::i;:::-;28290:16;;;;;28025:287;-1:-1:-1;;28025:287:46:o;28317:561::-;-1:-1:-1;;;;;28614:15:46;;;28596:34;;28666:15;;28661:2;28646:18;;28639:43;28713:2;28698:18;;28691:34;;;28756:2;28741:18;;28734:34;;;28576:3;28799;28784:19;;28777:32;;;28539:4;;28826:46;;28852:19;;28844:6;28826:46;:::i;:::-;28818:54;28317:561;-1:-1:-1;;;;;;;28317:561:46:o;28883:249::-;28952:6;29005:2;28993:9;28984:7;28980:23;28976:32;28973:52;;;29021:1;29018;29011:12;28973:52;29053:9;29047:16;29072:30;29096:5;29072:30;:::i;29137:179::-;29172:3;29214:1;29196:16;29193:23;29190:120;;;29260:1;29257;29254;29239:23;-1:-1:-1;29297:1:46;29291:8;29286:3;29282:18;29190:120;29137:179;:::o;29321:671::-;29360:3;29402:4;29384:16;29381:26;29378:39;;;29321:671;:::o;29378:39::-;29444:2;29438:9;-1:-1:-1;;29509:16:46;29505:25;;29502:1;29438:9;29481:50;29560:4;29554:11;29584:16;-1:-1:-1;;;;;29690:2:46;29683:4;29675:6;29671:17;29668:25;29663:2;29655:6;29652:14;29649:45;29646:58;;;29697:5;;;;;29321:671;:::o;29646:58::-;29734:6;29728:4;29724:17;29713:28;;29770:3;29764:10;29797:2;29789:6;29786:14;29783:27;;;29803:5;;;;;;29321:671;:::o;29783:27::-;29887:2;29868:16;29862:4;29858:27;29854:36;29847:4;29838:6;29833:3;29829:16;29825:27;29822:69;29819:82;;;29894:5;;;;;;29321:671;:::o;29819:82::-;29910:57;29961:4;29952:6;29944;29940:19;29936:30;29930:4;29910:57;:::i;:::-;-1:-1:-1;29983:3:46;;29321:671;-1:-1:-1;;;;;29321:671:46:o;30686:827::-;-1:-1:-1;;;;;31083:15:46;;;31065:34;;31135:15;;31130:2;31115:18;;31108:43;31045:3;31182:2;31167:18;;31160:31;;;31008:4;;31214:57;;31251:19;;31243:6;31214:57;:::i;:::-;31319:9;31311:6;31307:22;31302:2;31291:9;31287:18;31280:50;31353:44;31390:6;31382;31353:44;:::i;:::-;31339:58;;31446:9;31438:6;31434:22;31428:3;31417:9;31413:19;31406:51;31474:33;31500:6;31492;31474:33;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "OPERATOR_FILTER_REGISTRY()": "41f43434",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "burn(address,uint256,uint256)": "f5298aca",
    "burnBatch(address,uint256[],uint256[])": "6b20c454",
    "claim(address,uint256,uint256)": "2bc43fd9",
    "contractURI()": "e8a3d485",
    "getBaseURICount()": "63b45e2d",
    "getBatchIdAtIndex(uint256)": "2419f51b",
    "getDefaultRoyaltyInfo()": "b24f2d39",
    "getRoyaltyInfoForToken(uint256)": "4cc157df",
    "isApprovedForAll(address,address)": "e985e9c5",
    "lazyMint(uint256,string,bytes)": "d37c353b",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nextTokenIdToMint()": "3b1475a7",
    "operatorRestriction()": "504c6e01",
    "owner()": "8da5cb5b",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setContractURI(string)": "938e3d7b",
    "setDefaultRoyaltyInfo(address,uint256)": "600dd5ea",
    "setOperatorRestriction(bool)": "32f0cd64",
    "setOwner(address)": "13af4035",
    "setRoyaltyInfoForToken(uint256,address,uint256)": "9bcf7a15",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply(uint256)": "bd85b039",
    "uri(uint256)": "0e89341c",
    "verifyClaim(address,uint256,uint256)": "4bbb1abf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_royaltyBps\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoyaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoyaltyBps\",\"type\":\"uint256\"}],\"name\":\"DefaultRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restriction\",\"type\":\"bool\"}],\"name\":\"OperatorRestriction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyBps\",\"type\":\"uint256\"}],\"name\":\"RoyaltyForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedBaseURI\",\"type\":\"bytes\"}],\"name\":\"TokensLazyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_FILTER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IOperatorFilterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseURICount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBatchIdAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfoForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_baseURIForTokens\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lazyMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenIdToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorRestriction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltyBps\",\"type\":\"uint256\"}],\"name\":\"setDefaultRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_restriction\",\"type\":\"bool\"}],\"name\":\"setOperatorRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bps\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyInfoForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when approval for a second party/operator address to manage all tokens for an owner address is enabled or disabled (absense of an event assumes disabled).\"},\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"DefaultRoyalty(address,uint256)\":{\"details\":\"Emitted when royalty info is updated.\"},\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"},\"RoyaltyForToken(uint256,address,uint256)\":{\"details\":\"Emitted when royalty recipient for tokenId is set\"},\"TokensClaimed(address,address,uint256,uint256)\":{\"details\":\"Emitted when tokens are claimed\"},\"TokensLazyMinted(uint256,uint256,string,bytes)\":{\"details\":\"Emitted when tokens are lazy minted.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \\\"Safe Transfer Rules\\\" section of the standard). The `_operator` argument MUST be msg.sender. The `_from` argument MUST be the address of the holder whose balance is decreased. The `_to` argument MUST be the address of the recipient whose balance is increased. The `_ids` argument MUST be the list of tokens being transferred. The `_values` argument MUST be the list of number of tokens (matching the list and order of tokens specified in _ids) the holder balance is decreased by and match what the recipient balance is increased by. When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address). When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \\\"Safe Transfer Rules\\\" section of the standard). The `_operator` argument MUST be msg.sender. The `_from` argument MUST be the address of the holder whose balance is decreased. The `_to` argument MUST be the address of the recipient whose balance is increased. The `_id` argument MUST be the token type being transferred. The `_value` argument MUST be the number of tokens the holder balance is decreased by and match what the recipient balance is increased by. When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address). When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\"},\"URI(string,uint256)\":{\"details\":\"MUST emit when the URI is updated for a token ID. URIs are defined in RFC 3986. The URI MUST point a JSON file that conforms to the \\\"ERC-1155 Metadata URI JSON Schema\\\".\"}},\"kind\":\"dev\",\"methods\":{\"burn(address,uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of the NFT to burn.\",\"_owner\":\"The owner of the NFT to burn.\",\"_tokenId\":\"The tokenId of the NFT to burn.\"}},\"burnBatch(address,uint256[],uint256[])\":{\"params\":{\"_amounts\":\"The amounts of the NFTs to burn.\",\"_owner\":\"The owner of the NFTs to burn.\",\"_tokenIds\":\"The tokenIds of the NFTs to burn.\"}},\"claim(address,uint256,uint256)\":{\"details\":\"The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.                   The logic in `transferTokensOnClaim` does actual minting of tokens,                   can also be used to apply other state changes.\",\"params\":{\"_quantity\":\"The number of tokens to mint.\",\"_receiver\":\"The recipient of the tokens to mint.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}},\"getBaseURICount()\":{\"details\":\"Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}.\"},\"getBatchIdAtIndex(uint256)\":{\"details\":\"See {getBaseURICount}.\",\"params\":{\"_index\":\"ID of a token.\"}},\"getRoyaltyInfoForToken(uint256)\":{\"details\":\"Returns royalty recipient and bps for `_tokenId`.\",\"params\":{\"_tokenId\":\"The tokenID of the NFT for which to query royalty info.\"}},\"lazyMint(uint256,string,bytes)\":{\"params\":{\"_amount\":\"The number of NFTs to lazy mint.\",\"_baseURIForTokens\":\"The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.\",\"_data\":\"Additional bytes data to be used at the discretion of the consumer of the contract.\"},\"returns\":{\"batchId\":\"         A unique integer identifier for the batch of NFTs lazy minted together.\"}},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns royalty amount and recipient for `tokenId` and `salePrice`.\",\"params\":{\"salePrice\":\"Sale price of the token.\",\"tokenId\":\"The tokenID of the NFT for which to query royalty info.\"},\"returns\":{\"receiver\":\"       Address of royalty recipient account.\",\"royaltyAmount\":\"  Royalty amount calculated at current royaltyBps value.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {ERC1155-setApprovalForAll}\"},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setDefaultRoyaltyInfo(address,uint256)\":{\"details\":\"Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.\",\"params\":{\"_royaltyBps\":\"Updated royalty bps.\",\"_royaltyRecipient\":\"Address to be set as default royalty recipient.\"}},\"setOwner(address)\":{\"params\":{\"_newOwner\":\"The address to set as the new owner of the contract.\"}},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"details\":\"Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.\",\"params\":{\"_bps\":\"Updated royalty bps for the token Id.\",\"_recipient\":\"Address to be set as royalty recipient for given token Id.\"}},\"verifyClaim(address,uint256,uint256)\":{\"details\":\"Checks a request to claim NFTs against a custom condition.\",\"params\":{\"_claimer\":\"Caller of the claim function.\",\"_quantity\":\"The number of NFTs being claimed.\",\"_tokenId\":\"The tokenId of the lazy minted NFT to mint.\"}}},\"stateVariables\":{\"totalSupply\":{\"details\":\"Mapping from tokenId => total circulating supply of NFTs of that tokenId.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens.\"},\"burn(address,uint256,uint256)\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenId.\"},\"burnBatch(address,uint256[],uint256[])\":{\"notice\":\"Lets an owner or approved operator burn NFTs of the given tokenIds.\"},\"claim(address,uint256,uint256)\":{\"notice\":\"Lets an address claim multiple lazy minted NFTs at once to a recipient.                   This function prevents any reentrant calls, and is not allowed to be overridden.                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`                   functions to create custom logic for verification and claiming,                   for e.g. price collection, allowlist, max quantity, etc.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"getBaseURICount()\":{\"notice\":\"Returns the count of batches of NFTs.\"},\"getBatchIdAtIndex(uint256)\":{\"notice\":\"Returns the ID for the batch of tokens the given tokenId belongs to.\"},\"getDefaultRoyaltyInfo()\":{\"notice\":\"Returns the defualt royalty recipient and BPS for this contract's NFTs.\"},\"getRoyaltyInfoForToken(uint256)\":{\"notice\":\"View royalty info for a given token.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner.\"},\"lazyMint(uint256,string,bytes)\":{\"notice\":\"Lets an authorized address lazy mint a given amount of NFTs.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"nextTokenIdToMint()\":{\"notice\":\"The tokenId assigned to the next new NFT to be lazy minted.\"},\"owner()\":{\"notice\":\"Returns the owner of the contract.\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"View royalty info for a given token and sale price.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setDefaultRoyaltyInfo(address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps.\"},\"setOwner(address)\":{\"notice\":\"Lets an authorized wallet set a new owner for the contract.\"},\"setRoyaltyInfoForToken(uint256,address,uint256)\":{\"notice\":\"Updates default royalty recipient and bps for a particular token.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract supports the given interface.\"},\"totalSupply(uint256)\":{\"notice\":\"Returns the total supply of NFTs of a given tokenId\"},\"uri(uint256)\":{\"notice\":\"Returns the metadata URI for the given tokenId.\"},\"verifyClaim(address,uint256,uint256)\":{\"notice\":\"Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc.\"}},\"notice\":\"BASE:      ERC1155Base      EXTENSION: LazyMint  The `ERC1155LazyMint` smart contract implements the ERC1155 NFT standard.  It includes the following additions to standard ERC1155 logic:      - Lazy minting      - Ability to mint NFTs via the provided `mintTo` and `batchMintTo` functions.      - Contract metadata for royalty support on platforms such as OpenSea that use        off-chain information to distribute roaylties.      - Ownership of the contract, with the ability to restrict certain functions to        only be called by the contract's owner.      - Multicall capability to perform multiple actions atomically      - EIP 2981 compliance for royalty support on NFT marketplaces.  The `ERC1155LazyMint` contract uses the `LazyMint` extension.  'Lazy minting' means defining the metadata of NFTs without minting it to an address. Regular 'minting'  of  NFTs means actually assigning an owner to an NFT.  As a contract admin, this lets you prepare the metadata for NFTs that will be minted by an external party,  without paying the gas cost for actually minting the NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol\":\"ERC1155LazyMint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol\":{\"keccak256\":\"0xd379ce942de3bc9da5cfe23416daf81e7e42371f97fe4c0df70de4f47973b0eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://40d501e5cd293ee1bfcb0965f4f6604d8b16ef143674e3f1a75d2dbc476c5a1c\",\"dweb:/ipfs/QmYAgPi6oyxqnrkR8DLEmk5vnBb3j5reDeEgGJLUnjdMcS\"]},\"node_modules/@thirdweb-dev/contracts/eip/ERC1155.sol\":{\"keccak256\":\"0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b\",\"dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155.sol\":{\"keccak256\":\"0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552\",\"dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Metadata.sol\":{\"keccak256\":\"0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43\",\"dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"node_modules/@thirdweb-dev/contracts/eip/interface/IERC2981.sol\":{\"keccak256\":\"0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf\",\"dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He\"]},\"node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol\":{\"keccak256\":\"0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7\",\"dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5\"]},\"node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392\",\"dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6\"]},\"node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol\":{\"keccak256\":\"0x445161870535140ce42418fa5857bdea248b4c9485fd15b3b876138330d65cd2\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ce42f04a1f0d9dce0987b5907f2cfc4919033e862f0b0d13777a90fb4679f400\",\"dweb:/ipfs/QmYyRrecF1vZ8pv1KKUWy25evTuNP5BSj8vUs4EnZ2YJv5\"]},\"node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol\":{\"keccak256\":\"0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827\",\"dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9\"]},\"node_modules/@thirdweb-dev/contracts/extension/Multicall.sol\":{\"keccak256\":\"0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2\",\"dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg\"]},\"node_modules/@thirdweb-dev/contracts/extension/OperatorFilterToggle.sol\":{\"keccak256\":\"0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac\",\"dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA\"]},\"node_modules/@thirdweb-dev/contracts/extension/OperatorFilterer.sol\":{\"keccak256\":\"0x1de27fa31eb5989508ca5c67e81b71bca975497ba1d6180ad2ae3a187511bddd\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://88a19808fcb9d4d84ca7fba1d32022e905ba3306dd93b7f874bd2241ff7c535e\",\"dweb:/ipfs/QmaBCo2piS6xJQnrCAW4Ws39teVKaJTBzf8k6d2MzpcXAx\"]},\"node_modules/@thirdweb-dev/contracts/extension/Ownable.sol\":{\"keccak256\":\"0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782\",\"dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ\"]},\"node_modules/@thirdweb-dev/contracts/extension/Royalty.sol\":{\"keccak256\":\"0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485\",\"dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol\":{\"keccak256\":\"0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df\",\"dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol\":{\"keccak256\":\"0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3\",\"dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34\",\"dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterToggle.sol\":{\"keccak256\":\"0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674\",\"dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IOwnable.sol\":{\"keccak256\":\"0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9\",\"dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC\"]},\"node_modules/@thirdweb-dev/contracts/extension/interface/IRoyalty.sol\":{\"keccak256\":\"0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b\",\"dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8\"]},\"node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol\":{\"keccak256\":\"0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e\",\"dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6\"]},\"node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol\":{\"keccak256\":\"0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9\",\"dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt\"]},\"node_modules/@thirdweb-dev/contracts/openzeppelin-presets/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623\",\"dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_royaltyBps",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OperatorNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoyaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "restriction",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRestriction",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "prevOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "royaltyRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "royaltyBps",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoyaltyForToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "quantityClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "startTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "endTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "encryptedBaseURI",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensLazyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "_values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_FILTER_REGISTRY",
          "outputs": [
            {
              "internalType": "contract IOperatorFilterRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnBatch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseURICount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBatchIdAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyInfoForToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_baseURIForTokens",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lazyMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "batchId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextTokenIdToMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorRestriction",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyRecipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_royaltyBps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_restriction",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorRestriction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_bps",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfoForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burn(address,uint256,uint256)": {
            "params": {
              "_amount": "The amount of the NFT to burn.",
              "_owner": "The owner of the NFT to burn.",
              "_tokenId": "The tokenId of the NFT to burn."
            }
          },
          "burnBatch(address,uint256[],uint256[])": {
            "params": {
              "_amounts": "The amounts of the NFTs to burn.",
              "_owner": "The owner of the NFTs to burn.",
              "_tokenIds": "The tokenIds of the NFTs to burn."
            }
          },
          "claim(address,uint256,uint256)": {
            "details": "The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.                   The logic in `transferTokensOnClaim` does actual minting of tokens,                   can also be used to apply other state changes.",
            "params": {
              "_quantity": "The number of tokens to mint.",
              "_receiver": "The recipient of the tokens to mint.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          },
          "getBaseURICount()": {
            "details": "Each batch of tokens has an in ID and an associated `baseURI`.                  See {batchIds}."
          },
          "getBatchIdAtIndex(uint256)": {
            "details": "See {getBaseURICount}.",
            "params": {
              "_index": "ID of a token."
            }
          },
          "getRoyaltyInfoForToken(uint256)": {
            "details": "Returns royalty recipient and bps for `_tokenId`.",
            "params": {
              "_tokenId": "The tokenID of the NFT for which to query royalty info."
            }
          },
          "lazyMint(uint256,string,bytes)": {
            "params": {
              "_amount": "The number of NFTs to lazy mint.",
              "_baseURIForTokens": "The base URI for the 'n' number of NFTs being lazy minted, where the metadata for each                           of those NFTs is `${baseURIForTokens}/${tokenId}`.",
              "_data": "Additional bytes data to be used at the discretion of the consumer of the contract."
            },
            "returns": {
              "batchId": "         A unique integer identifier for the batch of NFTs lazy minted together."
            }
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "details": "Returns royalty amount and recipient for `tokenId` and `salePrice`.",
            "params": {
              "salePrice": "Sale price of the token.",
              "tokenId": "The tokenID of the NFT for which to query royalty info."
            },
            "returns": {
              "receiver": "       Address of royalty recipient account.",
              "royaltyAmount": "  Royalty amount calculated at current royaltyBps value."
            }
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {ERC1155-setApprovalForAll}"
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "details": "Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {DefaultRoyalty Event}; See {_setupDefaultRoyaltyInfo}.",
            "params": {
              "_royaltyBps": "Updated royalty bps.",
              "_royaltyRecipient": "Address to be set as default royalty recipient."
            }
          },
          "setOwner(address)": {
            "params": {
              "_newOwner": "The address to set as the new owner of the contract."
            }
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "details": "Sets royalty info for `_tokenId`. Caller should be authorized to set royalty info.                  See {_canSetRoyaltyInfo}.                  Emits {RoyaltyForToken Event}; See {_setupRoyaltyInfoForToken}.",
            "params": {
              "_bps": "Updated royalty bps for the token Id.",
              "_recipient": "Address to be set as royalty recipient for given token Id."
            }
          },
          "verifyClaim(address,uint256,uint256)": {
            "details": "Checks a request to claim NFTs against a custom condition.",
            "params": {
              "_claimer": "Caller of the claim function.",
              "_quantity": "The number of NFTs being claimed.",
              "_tokenId": "The tokenId of the lazy minted NFT to mint."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address,uint256)": {
            "notice": "Get the balance of an account's Tokens."
          },
          "burn(address,uint256,uint256)": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenId."
          },
          "burnBatch(address,uint256[],uint256[])": {
            "notice": "Lets an owner or approved operator burn NFTs of the given tokenIds."
          },
          "claim(address,uint256,uint256)": {
            "notice": "Lets an address claim multiple lazy minted NFTs at once to a recipient.                   This function prevents any reentrant calls, and is not allowed to be overridden.                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`                   functions to create custom logic for verification and claiming,                   for e.g. price collection, allowlist, max quantity, etc."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "getBaseURICount()": {
            "notice": "Returns the count of batches of NFTs."
          },
          "getBatchIdAtIndex(uint256)": {
            "notice": "Returns the ID for the batch of tokens the given tokenId belongs to."
          },
          "getDefaultRoyaltyInfo()": {
            "notice": "Returns the defualt royalty recipient and BPS for this contract's NFTs."
          },
          "getRoyaltyInfoForToken(uint256)": {
            "notice": "View royalty info for a given token."
          },
          "isApprovedForAll(address,address)": {
            "notice": "Queries the approval status of an operator for a given owner."
          },
          "lazyMint(uint256,string,bytes)": {
            "notice": "Lets an authorized address lazy mint a given amount of NFTs."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "nextTokenIdToMint()": {
            "notice": "The tokenId assigned to the next new NFT to be lazy minted."
          },
          "owner()": {
            "notice": "Returns the owner of the contract."
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "View royalty info for a given token and sale price."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "setDefaultRoyaltyInfo(address,uint256)": {
            "notice": "Updates default royalty recipient and bps."
          },
          "setOwner(address)": {
            "notice": "Lets an authorized wallet set a new owner for the contract."
          },
          "setRoyaltyInfoForToken(uint256,address,uint256)": {
            "notice": "Updates default royalty recipient and bps for a particular token."
          },
          "supportsInterface(bytes4)": {
            "notice": "Returns whether this contract supports the given interface."
          },
          "totalSupply(uint256)": {
            "notice": "Returns the total supply of NFTs of a given tokenId"
          },
          "uri(uint256)": {
            "notice": "Returns the metadata URI for the given tokenId."
          },
          "verifyClaim(address,uint256,uint256)": {
            "notice": "Override this function to add logic for claim verification, based on conditions                   such as allowlist, price, max quantity etc."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol": "ERC1155LazyMint"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol": {
        "keccak256": "0xd379ce942de3bc9da5cfe23416daf81e7e42371f97fe4c0df70de4f47973b0eb",
        "urls": [
          "bzz-raw://40d501e5cd293ee1bfcb0965f4f6604d8b16ef143674e3f1a75d2dbc476c5a1c",
          "dweb:/ipfs/QmYAgPi6oyxqnrkR8DLEmk5vnBb3j5reDeEgGJLUnjdMcS"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/ERC1155.sol": {
        "keccak256": "0x378fcbe3a191a44060f66b2b2932391cbf31f945039087b9024bb2eee91ba5b6",
        "urls": [
          "bzz-raw://f36697fa07898c79d77d0b294849de4eab4b6d24679c33f0b448b8d82e172f4b",
          "dweb:/ipfs/QmZ8jqskjHnjHuoDqa9dQdP6KrRDyHcvBKVDZZNXX9e7bS"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155.sol": {
        "keccak256": "0x17c265f3f47161c9d2f6c7f7f4040440df9ad4cd7eb74eb411bf25a94b542f9e",
        "urls": [
          "bzz-raw://c4f468eb184f2a08909834b51e33e854741647f9798aa1e6746f3f1b69525552",
          "dweb:/ipfs/QmbCMy9vJLga2dCxGG6nXW7VKGqsMrzU8phPhcd58xkapq"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Metadata.sol": {
        "keccak256": "0xe9d530111d75c5d6db4ca4f30dd76d6a29d9363ab7390e922942a0fc9e3ce32e",
        "urls": [
          "bzz-raw://8272be1ca643bd3038fd67b00acad09a8dca44536284bcca6b862d09f8b53e43",
          "dweb:/ipfs/Qme9wiWPDfh36xm7TNaxpAYxv5jAptMNLtYksRwc5zNFbU"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC1155Receiver.sol": {
        "keccak256": "0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00",
        "urls": [
          "bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5",
          "dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/eip/interface/IERC2981.sol": {
        "keccak256": "0x7886c17b1bc3df885201378fd070d2f00d05fa54f20f7daf10382ec6ff4bd0c9",
        "urls": [
          "bzz-raw://a0802623ba9555f6d186bab5fd139203b643e88ea31d78f4f05cddd4008ac6cf",
          "dweb:/ipfs/QmYbqzSKkKmF2xYeH1zGNewBDNAhukuaZEUVAvYgnKt1He"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol": {
        "keccak256": "0xc0aa1014d8e7dac53199204ea1e95d2488ad5aa85420d97853d3f8dee96f5f67",
        "urls": [
          "bzz-raw://e7ebb973ce9804b0ef03b0a6336dd4da4ace59543ab499fe84ba60f8495ee8d7",
          "dweb:/ipfs/Qmdee8gPVFtQ6sP44bRdtKVkykm8Q41bpxfFrPfXkaxRt5"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol": {
        "keccak256": "0xf53ab08ec3057056872c15e35a5610f7a43426bd2829786aed006d527177adfe",
        "urls": [
          "bzz-raw://ee132ae5efdd372152febfcd8fd3a7cb82c7019367d92c886f5096003a79f392",
          "dweb:/ipfs/QmRW1cGWmZAu57huZpTUwsWB8AxUFrBp6g4NqozXpbWsR6"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol": {
        "keccak256": "0x445161870535140ce42418fa5857bdea248b4c9485fd15b3b876138330d65cd2",
        "urls": [
          "bzz-raw://ce42f04a1f0d9dce0987b5907f2cfc4919033e862f0b0d13777a90fb4679f400",
          "dweb:/ipfs/QmYyRrecF1vZ8pv1KKUWy25evTuNP5BSj8vUs4EnZ2YJv5"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol": {
        "keccak256": "0xe88710d7f2ac2834be6ed3c2bff1314f0d9c8c65aec7d05df9a6381d48a6f170",
        "urls": [
          "bzz-raw://c4734764afb84ecb1c5a99a441296a38f524c602227d0eae9bca3b325c895827",
          "dweb:/ipfs/QmWbwqzY6SqgitawoYeZmHiFvW6dp2fHoQfnb9WuVNr6E9"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol": {
        "keccak256": "0x737a71c74307fa360863550d64bbaef599bbcb47829b19c3743ed1ff22b9af55",
        "urls": [
          "bzz-raw://7e82a79ee183dffa3ec01faac0907e04d72a185e55b7c24bff8e8e952b05f4c2",
          "dweb:/ipfs/QmQ9neZqpcgJtGgm84FBzMqFntZ1Sk1KFTWhjCMq8vnKDg"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/OperatorFilterToggle.sol": {
        "keccak256": "0x7f4a59c3d0cd32b1b22a87eeaf74f395e8c56b2729e2418960c4c6dbfaf70329",
        "urls": [
          "bzz-raw://193acd7afa57a8410ff53978c316114df95268a22601862acab8f60f695b52ac",
          "dweb:/ipfs/QmQx3Ary3ZEo9EKZ53W81rVP9dUGX4vxsB6UbFUNk3vfzA"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/OperatorFilterer.sol": {
        "keccak256": "0x1de27fa31eb5989508ca5c67e81b71bca975497ba1d6180ad2ae3a187511bddd",
        "urls": [
          "bzz-raw://88a19808fcb9d4d84ca7fba1d32022e905ba3306dd93b7f874bd2241ff7c535e",
          "dweb:/ipfs/QmaBCo2piS6xJQnrCAW4Ws39teVKaJTBzf8k6d2MzpcXAx"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Ownable.sol": {
        "keccak256": "0x45447691686861237d5e1acb9d723d861a3fb3d561335e4f385d1547f25e27a5",
        "urls": [
          "bzz-raw://5142293e36c736f744c73aaecab5f7be8e2d5ac70acc67851e0cea5171fd6782",
          "dweb:/ipfs/QmVJT5B84o5vFc5E2VteZdBhrT1HMutc7Ax72UKD1aZatJ"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/Royalty.sol": {
        "keccak256": "0xcc3110048db91d4ecd05afcc6721fce6ade5eee8c2da0af8955e86ece8754350",
        "urls": [
          "bzz-raw://a1e830502fda46ab7618b65e155341d42bf007717edb27711b09bf6250ce1485",
          "dweb:/ipfs/QmY5fKpg7aCubR7fENu9htRFspU8hpSo7CVUNJxQdh8kv1"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol": {
        "keccak256": "0x022e90a3152a20e95fedacf8282e0c31b768627cb6310fa8ffa0615064fb15db",
        "urls": [
          "bzz-raw://c51a34ea5c85413cbb501e8115162897e4e51076905daa488f19870410cf80df",
          "dweb:/ipfs/Qmee9iQDzWTeyKioibkeX67YCRz51AJYkvLS2yuyjy4AwX"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol": {
        "keccak256": "0x480953502a40e438d855392e322adc0369e2109f6d46fb9ec2bb3ad0afbb0aec",
        "urls": [
          "bzz-raw://2b3bb332d4f5e38f9786b00564ad417e48c689b4a92a60888c3845b986c995a3",
          "dweb:/ipfs/QmPVM4KTUeLD7uVCfP8MBQNRo7pU8xF3rXQuDcx3C6cLxA"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterRegistry.sol": {
        "keccak256": "0xd43ac6f703d7692f51537838fcee1a17a6d1414a5965c41351f147b211d0d2da",
        "urls": [
          "bzz-raw://cbfa4ac6486f17865b1f28cdbc93d89a268988aecd75435f15cf2c74d6f04e34",
          "dweb:/ipfs/QmQcBAWV5d3cD4z7euEasc6WYYTpkS1eHHEF1bVk6nbhSg"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOperatorFilterToggle.sol": {
        "keccak256": "0xff05e83218d75f27210f20357d27849a2963b82830ca673a25c787f14b4203b1",
        "urls": [
          "bzz-raw://36434c142d2e2f74a826f1240f8c12432eba0924fa7c888514592c46d4071674",
          "dweb:/ipfs/QmYntnzMvf6Duc9yhFyP4eheicbfUvBGcaXde9xqCrXPan"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IOwnable.sol": {
        "keccak256": "0xd659a64da6264fdd50ee379be032fea4917eba4fadfd6d366107fb17e46907f3",
        "urls": [
          "bzz-raw://c15940c4a3d229f4fdd1226fe297a58fde10b07b86a34de1ed11a8802dd5dea9",
          "dweb:/ipfs/QmS8p8CxWiahLkYsCWNhFjCnmQzuc4ck3kjYYuCFj8LsmC"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/extension/interface/IRoyalty.sol": {
        "keccak256": "0x13912ba3970fdedd1eb5bf8bf0bcc5e64e43f2cadb8d22c3d6fb695fd9877385",
        "urls": [
          "bzz-raw://b84d19df7aa9cb7460cca50ab050cdcfffb62f53c246daf35df276cad7088e9b",
          "dweb:/ipfs/QmNPPHJuiW1KCcq3aXELnA4X8NaSPM9S2vHbsBEEDYiwP8"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol": {
        "keccak256": "0x460f032cf3bf43d586e126ab2ec8be4335767f497ccb699741546a1cfba94a7e",
        "urls": [
          "bzz-raw://28fcbf6dde6c2eeb9864f6ec6f21dcc81ec426877debf4b912f2f3bc5b0fc91e",
          "dweb:/ipfs/QmS1SHrZDfefX8EE7DdvszTY6VPCHydf4HM7NKJ2gP72e6"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol": {
        "keccak256": "0xef7e9954d888f99baffc10db1d9bf6a2beb66c842d81dea90352ddded22cbbf8",
        "urls": [
          "bzz-raw://832415134684f5413f9d0f3f5536aa30848690cfe54769f7730a3807438f3bf9",
          "dweb:/ipfs/QmduTiUdtsnyJVMXpdomohEWDVg46aZhnS9uTURu4x1NYt"
        ],
        "license": "Apache 2.0"
      },
      "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/security/ReentrancyGuard.sol": {
        "keccak256": "0x2030bba0e41fb3daead24cdba39cd9d8ce2748de68e57f1c811420419a739afb",
        "urls": [
          "bzz-raw://1a64e19e10d66555abcf0b5392bb27f9e65f674d7688761f02f2c8b508490623",
          "dweb:/ipfs/QmNhMchAD6kuHFAAgdwCwuNUS3uaUD2gwofT5kxQAQeWH6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@thirdweb-dev/contracts/base/ERC1155LazyMint.sol",
    "id": 28968,
    "exportedSymbols": {
      "BatchMintMetadata": [
        30406
      ],
      "ContractMetadata": [
        30464
      ],
      "DefaultOperatorFilterer": [
        30486
      ],
      "ERC1155": [
        29993
      ],
      "ERC1155LazyMint": [
        28967
      ],
      "IClaimableERC1155": [
        31161
      ],
      "IContractMetadata": [
        31184
      ],
      "IERC165": [
        30177
      ],
      "IERC2981": [
        30196
      ],
      "ILazyMint": [
        31211
      ],
      "IMulticall": [
        31225
      ],
      "IOwnable": [
        31461
      ],
      "IRoyalty": [
        31525
      ],
      "LazyMint": [
        30564
      ],
      "Multicall": [
        30623
      ],
      "OperatorFilterer": [
        30805
      ],
      "Ownable": [
        30887
      ],
      "ReentrancyGuard": [
        32062
      ],
      "Royalty": [
        31126
      ],
      "TWAddress": [
        31820
      ],
      "TWStrings": [
        32023
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:11930:17",
    "nodes": [
      {
        "id": 28390,
        "nodeType": "PragmaDirective",
        "src": "39:23:17",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28392,
        "nodeType": "ImportDirective",
        "src": "86:45:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/eip/ERC1155.sol",
        "file": "../eip/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 29994,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28391,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29993,
              "src": "95:7:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28393,
        "nodeType": "ImportDirective",
        "src": "133:43:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/ContractMetadata.sol",
        "file": "../extension/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 30465,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28394,
        "nodeType": "ImportDirective",
        "src": "177:36:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol",
        "file": "../extension/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 30624,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28395,
        "nodeType": "ImportDirective",
        "src": "214:34:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/Ownable.sol",
        "file": "../extension/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 30888,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28396,
        "nodeType": "ImportDirective",
        "src": "249:34:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/Royalty.sol",
        "file": "../extension/Royalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 31127,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28397,
        "nodeType": "ImportDirective",
        "src": "284:44:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol",
        "file": "../extension/BatchMintMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 30407,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28398,
        "nodeType": "ImportDirective",
        "src": "329:35:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol",
        "file": "../extension/LazyMint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 30565,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28399,
        "nodeType": "ImportDirective",
        "src": "365:54:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimableERC1155.sol",
        "file": "../extension/interface/IClaimableERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 31162,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28400,
        "nodeType": "ImportDirective",
        "src": "420:50:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/extension/DefaultOperatorFilterer.sol",
        "file": "../extension/DefaultOperatorFilterer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 30487,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28401,
        "nodeType": "ImportDirective",
        "src": "472:30:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/lib/TWStrings.sol",
        "file": "../lib/TWStrings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 32024,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28402,
        "nodeType": "ImportDirective",
        "src": "503:62:17",
        "nodes": [],
        "absolutePath": "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/security/ReentrancyGuard.sol",
        "file": "../openzeppelin-presets/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28968,
        "sourceUnit": 32063,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28967,
        "nodeType": "ContractDefinition",
        "src": "1751:10217:17",
        "nodes": [
          {
            "id": 28426,
            "nodeType": "UsingForDirective",
            "src": "1970:28:17",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 28424,
              "name": "TWStrings",
              "nameLocations": [
                "1976:9:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32023,
              "src": "1976:9:17"
            },
            "typeName": {
              "id": 28425,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1990:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 28431,
            "nodeType": "VariableDeclaration",
            "src": "2347:46:17",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 28427,
              "nodeType": "StructuredDocumentation",
              "src": "2176:166:17",
              "text": "  @notice Returns the total supply of NFTs of a given tokenId\n  @dev Mapping from tokenId => total circulating supply of NFTs of that tokenId."
            },
            "functionSelector": "bd85b039",
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "2382:11:17",
            "scope": 28967,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 28430,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 28428,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2355:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2347:27:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 28429,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2366:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28461,
            "nodeType": "FunctionDefinition",
            "src": "2579:311:17",
            "nodes": [],
            "body": {
              "id": 28460,
              "nodeType": "Block",
              "src": "2745:145:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28447,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2767:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2771:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2767:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28446,
                      "name": "_setupOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30880,
                      "src": "2755:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 28449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2755:23:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28450,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:23:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28452,
                        "name": "_royaltyRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28437,
                        "src": "2813:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28453,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28439,
                        "src": "2832:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 28451,
                      "name": "_setupDefaultRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31057,
                      "src": "2788:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:56:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28455,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:56:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 28457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2878:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 28456,
                      "name": "_setOperatorRestriction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30660,
                      "src": "2854:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 28458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2854:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28459,
                  "nodeType": "ExpressionStatement",
                  "src": "2854:29:17"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28442,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28433,
                    "src": "2729:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 28443,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28435,
                    "src": "2736:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 28444,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28441,
                  "name": "ERC1155",
                  "nameLocations": [
                    "2721:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29993,
                  "src": "2721:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2721:23:17"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28433,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2614:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28461,
                  "src": "2600:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28435,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2643:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28461,
                  "src": "2629:21:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28434,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2629:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28437,
                  "mutability": "mutable",
                  "name": "_royaltyRecipient",
                  "nameLocation": "2668:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28461,
                  "src": "2660:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28439,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "2703:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28461,
                  "src": "2695:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 28438,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2695:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2590:130:17"
            },
            "returnParameters": {
              "id": 28445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2745:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28488,
            "nodeType": "FunctionDefinition",
            "src": "3144:219:17",
            "nodes": [],
            "body": {
              "id": 28487,
              "nodeType": "Block",
              "src": "3228:135:17",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28471,
                      "mutability": "mutable",
                      "name": "batchUri",
                      "nameLocation": "3252:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 28487,
                      "src": "3238:22:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 28470,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3238:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28475,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 28473,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28464,
                        "src": "3275:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28472,
                      "name": "_getBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30353,
                      "src": "3263:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 28474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3263:21:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3238:46:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28480,
                            "name": "batchUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28471,
                            "src": "3325:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 28481,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28464,
                                "src": "3335:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 28482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3344:8:17",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31905,
                              "src": "3335:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 28483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3335:19:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 28478,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3308:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 28479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3312:12:17",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3308:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 28484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3308:47:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 28477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3301:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 28476,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3301:6:17",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 28485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3301:55:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 28469,
                  "id": 28486,
                  "nodeType": "Return",
                  "src": "3294:62:17"
                }
              ]
            },
            "baseFunctions": [
              29045
            ],
            "documentation": {
              "id": 28462,
              "nodeType": "StructuredDocumentation",
              "src": "3080:59:17",
              "text": "@notice Returns the metadata URI for the given tokenId."
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "3153:3:17",
            "overrides": {
              "id": 28466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3195:8:17"
            },
            "parameters": {
              "id": 28465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28464,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3165:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28488,
                  "src": "3157:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3157:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3156:18:17"
            },
            "returnParameters": {
              "id": 28469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28488,
                  "src": "3213:13:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28467,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3213:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3212:15:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28530,
            "nodeType": "FunctionDefinition",
            "src": "4524:534:17",
            "nodes": [],
            "body": {
              "id": 28529,
              "nodeType": "Block",
              "src": "4661:397:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28501,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28493,
                          "src": "4679:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 28502,
                            "name": "nextTokenIdToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28702,
                            "src": "4690:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 28503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4690:19:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4679:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206964",
                        "id": 28505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4711:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        },
                        "value": "invalid id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        }
                      ],
                      "id": 28500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4671:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4671:53:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28507,
                  "nodeType": "ExpressionStatement",
                  "src": "4671:53:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28509,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4746:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4750:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4746:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28511,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28493,
                        "src": "4758:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28512,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28495,
                        "src": "4768:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28508,
                      "name": "verifyClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28541,
                      "src": "4734:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) view"
                      }
                    },
                    "id": 28513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4734:44:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28514,
                  "nodeType": "ExpressionStatement",
                  "src": "4734:44:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28516,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28491,
                        "src": "4878:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28517,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28493,
                        "src": "4889:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28518,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28495,
                        "src": "4899:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28515,
                      "name": "_transferTokensOnClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28803,
                      "src": "4855:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 28519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28520,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:54:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28522,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5008:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5012:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5008:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28524,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28491,
                        "src": "5020:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28525,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28493,
                        "src": "5031:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28526,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28495,
                        "src": "5041:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28521,
                      "name": "TokensClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31140,
                      "src": "4994:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 28527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4994:57:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28528,
                  "nodeType": "EmitStatement",
                  "src": "4989:62:17"
                }
              ]
            },
            "baseFunctions": [
              31150
            ],
            "documentation": {
              "id": 28489,
              "nodeType": "StructuredDocumentation",
              "src": "3548:971:17",
              "text": "  @notice          Lets an address claim multiple lazy minted NFTs at once to a recipient.\n                   This function prevents any reentrant calls, and is not allowed to be overridden.\n                   Contract creators should override `verifyClaim` and `transferTokensOnClaim`\n                   functions to create custom logic for verification and claiming,\n                   for e.g. price collection, allowlist, max quantity, etc.\n  @dev             The logic in `verifyClaim` determines whether the caller is authorized to mint NFTs.\n                   The logic in `transferTokensOnClaim` does actual minting of tokens,\n                   can also be used to apply other state changes.\n  @param _receiver  The recipient of the tokens to mint.\n  @param _tokenId   The tokenId of the lazy minted NFT to mint.\n  @param _quantity  The number of tokens to mint."
            },
            "functionSelector": "2bc43fd9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28497,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4648:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32061,
                  "src": "4648:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4648:12:17"
              }
            ],
            "name": "claim",
            "nameLocation": "4533:5:17",
            "parameters": {
              "id": 28496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28491,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "4556:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28530,
                  "src": "4548:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4548:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28493,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4583:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28530,
                  "src": "4575:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4575:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28495,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4609:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28530,
                  "src": "4601:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4601:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4538:86:17"
            },
            "returnParameters": {
              "id": 28499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4661:0:17"
            },
            "scope": 28967,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28541,
            "nodeType": "FunctionDefinition",
            "src": "5538:128:17",
            "nodes": [],
            "body": {
              "id": 28540,
              "nodeType": "Block",
              "src": "5664:2:17",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              31160
            ],
            "documentation": {
              "id": 28531,
              "nodeType": "StructuredDocumentation",
              "src": "5064:469:17",
              "text": "  @notice          Override this function to add logic for claim verification, based on conditions\n                   such as allowlist, price, max quantity etc.\n  @dev             Checks a request to claim NFTs against a custom condition.\n  @param _claimer   Caller of the claim function.\n  @param _tokenId   The tokenId of the lazy minted NFT to mint.\n  @param _quantity  The number of NFTs being claimed."
            },
            "functionSelector": "4bbb1abf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "5547:11:17",
            "parameters": {
              "id": 28538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28533,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "5576:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28541,
                  "src": "5568:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28535,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5602:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28541,
                  "src": "5594:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5594:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28537,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "5628:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28541,
                  "src": "5620:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5620:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:85:17"
            },
            "returnParameters": {
              "id": 28539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5664:0:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28587,
            "nodeType": "FunctionDefinition",
            "src": "5951:376:17",
            "nodes": [],
            "body": {
              "id": 28586,
              "nodeType": "Block",
              "src": "6063:264:17",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28552,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "6081:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 28586,
                      "src": "6073:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28551,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6073:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28555,
                  "initialValue": {
                    "expression": {
                      "id": 28553,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6090:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 28554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6094:6:17",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6090:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6073:27:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 28565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 28559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 28557,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28552,
                            "src": "6119:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 28558,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28544,
                            "src": "6129:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6119:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 28560,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28992,
                              "src": "6139:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 28562,
                            "indexExpression": {
                              "id": 28561,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28544,
                              "src": "6156:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6139:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 28564,
                          "indexExpression": {
                            "id": 28563,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28552,
                            "src": "6164:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6139:32:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6119:52:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617070726f7665642063616c6c6572",
                        "id": 28566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6173:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        },
                        "value": "Unapproved caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        }
                      ],
                      "id": 28556,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6111:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6111:82:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28568,
                  "nodeType": "ExpressionStatement",
                  "src": "6111:82:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 28570,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28986,
                              "src": "6211:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 28572,
                            "indexExpression": {
                              "id": 28571,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28544,
                              "src": "6221:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6211:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 28574,
                          "indexExpression": {
                            "id": 28573,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28546,
                            "src": "6229:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6211:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 28575,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28548,
                          "src": "6242:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6211:38:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e73206f776e6564",
                        "id": 28577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6251:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                          "typeString": "literal_string \"Not enough tokens owned\""
                        },
                        "value": "Not enough tokens owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                          "typeString": "literal_string \"Not enough tokens owned\""
                        }
                      ],
                      "id": 28569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6203:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6203:74:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28579,
                  "nodeType": "ExpressionStatement",
                  "src": "6203:74:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28581,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28544,
                        "src": "6294:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28582,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28546,
                        "src": "6302:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28583,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28548,
                        "src": "6312:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28580,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29704,
                      "src": "6288:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 28584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6288:32:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28585,
                  "nodeType": "ExpressionStatement",
                  "src": "6288:32:17"
                }
              ]
            },
            "documentation": {
              "id": 28542,
              "nodeType": "StructuredDocumentation",
              "src": "5672:274:17",
              "text": "  @notice         Lets an owner or approved operator burn NFTs of the given tokenId.\n  @param _owner   The owner of the NFT to burn.\n  @param _tokenId The tokenId of the NFT to burn.\n  @param _amount  The amount of the NFT to burn."
            },
            "functionSelector": "f5298aca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5960:4:17",
            "parameters": {
              "id": 28549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28544,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5982:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28587,
                  "src": "5974:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5974:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28546,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6006:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28587,
                  "src": "5998:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5998:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28548,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6032:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28587,
                  "src": "6024:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6024:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5964:81:17"
            },
            "returnParameters": {
              "id": 28550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6063:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 28662,
            "nodeType": "FunctionDefinition",
            "src": "6621:564:17",
            "nodes": [],
            "body": {
              "id": 28661,
              "nodeType": "Block",
              "src": "6758:427:17",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28600,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "6776:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 28661,
                      "src": "6768:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28599,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6768:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28603,
                  "initialValue": {
                    "expression": {
                      "id": 28601,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6785:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 28602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6789:6:17",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6785:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6768:27:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 28613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 28607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 28605,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28600,
                            "src": "6814:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 28606,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28590,
                            "src": "6824:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6814:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 28608,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28992,
                              "src": "6834:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 28610,
                            "indexExpression": {
                              "id": 28609,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28590,
                              "src": "6851:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6834:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 28612,
                          "indexExpression": {
                            "id": 28611,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28600,
                            "src": "6859:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6834:32:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6814:52:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617070726f7665642063616c6c6572",
                        "id": 28614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6868:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        },
                        "value": "Unapproved caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49a5eff66ae485633226c672b4dcae217f841ad5e05f15a24e4ca584e30f2297",
                          "typeString": "literal_string \"Unapproved caller\""
                        }
                      ],
                      "id": 28604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6806:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6806:82:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28616,
                  "nodeType": "ExpressionStatement",
                  "src": "6806:82:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28618,
                            "name": "_tokenIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28593,
                            "src": "6906:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 28619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6916:6:17",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6906:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 28620,
                            "name": "_amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28596,
                            "src": "6926:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 28621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6935:6:17",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6926:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6906:35:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c656e677468206d69736d61746368",
                        "id": 28623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6943:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8",
                          "typeString": "literal_string \"Length mismatch\""
                        },
                        "value": "Length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8",
                          "typeString": "literal_string \"Length mismatch\""
                        }
                      ],
                      "id": 28617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6898:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6898:63:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28625,
                  "nodeType": "ExpressionStatement",
                  "src": "6898:63:17"
                },
                {
                  "body": {
                    "id": 28653,
                    "nodeType": "Block",
                    "src": "7022:107:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 28649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 28639,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28986,
                                    "src": "7044:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(uint256 => uint256))"
                                    }
                                  },
                                  "id": 28641,
                                  "indexExpression": {
                                    "id": 28640,
                                    "name": "_owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28590,
                                    "src": "7054:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7044:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 28645,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 28642,
                                    "name": "_tokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28593,
                                    "src": "7062:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 28644,
                                  "indexExpression": {
                                    "id": 28643,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28627,
                                    "src": "7072:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7062:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7044:31:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 28646,
                                  "name": "_amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28596,
                                  "src": "7079:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 28648,
                                "indexExpression": {
                                  "id": 28647,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28627,
                                  "src": "7088:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7079:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7044:46:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820746f6b656e73206f776e6564",
                              "id": 28650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7092:25:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                                "typeString": "literal_string \"Not enough tokens owned\""
                              },
                              "value": "Not enough tokens owned"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47eab5721628f7afefa1eed5fb909d6745dd50704b33f0e2bec737b19f989da9",
                                "typeString": "literal_string \"Not enough tokens owned\""
                              }
                            ],
                            "id": 28638,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7036:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 28651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7036:82:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28652,
                        "nodeType": "ExpressionStatement",
                        "src": "7036:82:17"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28630,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28627,
                      "src": "6992:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 28631,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28593,
                        "src": "6996:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 28632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7006:6:17",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6996:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6992:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28654,
                  "initializationExpression": {
                    "assignments": [
                      28627
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 28627,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6985:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 28654,
                        "src": "6977:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 28626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6977:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 28629,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 28628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6989:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6977:13:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 28636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 28634,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28627,
                        "src": "7014:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 28635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7019:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7014:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28637,
                    "nodeType": "ExpressionStatement",
                    "src": "7014:6:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "6972:157:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28656,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28590,
                        "src": "7150:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28657,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28593,
                        "src": "7158:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 28658,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28596,
                        "src": "7169:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 28655,
                      "name": "_burnBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29814,
                      "src": "7139:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 28659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7139:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28660,
                  "nodeType": "ExpressionStatement",
                  "src": "7139:39:17"
                }
              ]
            },
            "documentation": {
              "id": 28588,
              "nodeType": "StructuredDocumentation",
              "src": "6333:283:17",
              "text": "  @notice         Lets an owner or approved operator burn NFTs of the given tokenIds.\n  @param _owner    The owner of the NFTs to burn.\n  @param _tokenIds The tokenIds of the NFTs to burn.\n  @param _amounts  The amounts of the NFTs to burn."
            },
            "functionSelector": "6b20c454",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnBatch",
            "nameLocation": "6630:9:17",
            "parameters": {
              "id": 28597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28590,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6657:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28662,
                  "src": "6649:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28593,
                  "mutability": "mutable",
                  "name": "_tokenIds",
                  "nameLocation": "6690:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28662,
                  "src": "6673:26:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28591,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6673:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28592,
                    "nodeType": "ArrayTypeName",
                    "src": "6673:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28596,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "6726:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28662,
                  "src": "6709:25:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28594,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6709:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28595,
                    "nodeType": "ArrayTypeName",
                    "src": "6709:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6639:101:17"
            },
            "returnParameters": {
              "id": 28598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6758:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 28693,
            "nodeType": "FunctionDefinition",
            "src": "7447:449:17",
            "nodes": [],
            "body": {
              "id": 28692,
              "nodeType": "Block",
              "src": "7556:340:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 28683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 28679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 28675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 28673,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28665,
                            "src": "7585:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783031666663396137",
                            "id": 28674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7600:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_33540519_by_1",
                              "typeString": "int_const 33540519"
                            },
                            "value": "0x01ffc9a7"
                          },
                          "src": "7585:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 28678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 28676,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28665,
                            "src": "7660:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30786439623637613236",
                            "id": 28677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7675:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3652614694_by_1",
                              "typeString": "int_const 3652614694"
                            },
                            "value": "0xd9b67a26"
                          },
                          "src": "7660:25:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7585:100:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 28682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28680,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28665,
                          "src": "7736:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30783065383933343163",
                          "id": 28681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7751:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_243872796_by_1",
                            "typeString": "int_const 243872796"
                          },
                          "value": "0x0e89341c"
                        },
                        "src": "7736:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7585:176:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 28689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 28684,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28665,
                        "src": "7823:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28686,
                              "name": "IERC2981",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30196,
                              "src": "7843:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$30196_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2981_$30196_$",
                                "typeString": "type(contract IERC2981)"
                              }
                            ],
                            "id": 28685,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "7838:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 28687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7838:14:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$30196",
                            "typeString": "type(contract IERC2981)"
                          }
                        },
                        "id": 28688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7853:11:17",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "7838:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "7823:41:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7585:279:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28672,
                  "id": 28691,
                  "nodeType": "Return",
                  "src": "7566:298:17"
                }
              ]
            },
            "baseFunctions": [
              29032,
              30176
            ],
            "documentation": {
              "id": 28663,
              "nodeType": "StructuredDocumentation",
              "src": "7371:71:17",
              "text": "@notice Returns whether this contract supports the given interface."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "7456:17:17",
            "overrides": {
              "id": 28669,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 28667,
                  "name": "ERC1155",
                  "nameLocations": [
                    "7523:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29993,
                  "src": "7523:7:17"
                },
                {
                  "id": 28668,
                  "name": "IERC165",
                  "nameLocations": [
                    "7532:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30177,
                  "src": "7532:7:17"
                }
              ],
              "src": "7514:26:17"
            },
            "parameters": {
              "id": 28666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28665,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "7481:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28693,
                  "src": "7474:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 28664,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7474:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7473:20:17"
            },
            "returnParameters": {
              "id": 28672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28693,
                  "src": "7550:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28670,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7550:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7549:6:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28702,
            "nodeType": "FunctionDefinition",
            "src": "8160:112:17",
            "nodes": [],
            "body": {
              "id": 28701,
              "nodeType": "Block",
              "src": "8227:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28699,
                    "name": "nextTokenIdToLazyMint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30498,
                    "src": "8244:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 28698,
                  "id": 28700,
                  "nodeType": "Return",
                  "src": "8237:28:17"
                }
              ]
            },
            "documentation": {
              "id": 28694,
              "nodeType": "StructuredDocumentation",
              "src": "8084:71:17",
              "text": "@notice The tokenId assigned to the next new NFT to be lazy minted."
            },
            "functionSelector": "3b1475a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextTokenIdToMint",
            "nameLocation": "8169:17:17",
            "parameters": {
              "id": 28695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8186:2:17"
            },
            "returnParameters": {
              "id": 28698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28697,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28702,
                  "src": "8218:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8218:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8217:9:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28723,
            "nodeType": "FunctionDefinition",
            "src": "8505:227:17",
            "nodes": [],
            "body": {
              "id": 28722,
              "nodeType": "Block",
              "src": "8672:60:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28718,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28705,
                        "src": "8706:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28719,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28707,
                        "src": "8716:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 28715,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8682:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$28967_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 28717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8688:17:17",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29144,
                      "src": "8682:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 28720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8682:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28721,
                  "nodeType": "ExpressionStatement",
                  "src": "8682:43:17"
                }
              ]
            },
            "baseFunctions": [
              29144
            ],
            "documentation": {
              "id": 28703,
              "nodeType": "StructuredDocumentation",
              "src": "8460:40:17",
              "text": "@dev See {ERC1155-setApprovalForAll}"
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28712,
                    "name": "operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28705,
                    "src": "8658:8:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 28713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28711,
                  "name": "onlyAllowedOperatorApproval",
                  "nameLocations": [
                    "8630:27:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30770,
                  "src": "8630:27:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "8630:37:17"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "8514:17:17",
            "overrides": {
              "id": 28710,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 28709,
                  "name": "ERC1155",
                  "nameLocations": [
                    "8613:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29993,
                  "src": "8613:7:17"
                }
              ],
              "src": "8604:17:17"
            },
            "parameters": {
              "id": 28708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28705,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "8540:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28723,
                  "src": "8532:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8532:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28707,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "8555:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28723,
                  "src": "8550:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28706,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8550:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8531:33:17"
            },
            "returnParameters": {
              "id": 28714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8672:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28753,
            "nodeType": "FunctionDefinition",
            "src": "8799:271:17",
            "nodes": [],
            "body": {
              "id": 28752,
              "nodeType": "Block",
              "src": "9003:67:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28745,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28726,
                        "src": "9036:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28746,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28728,
                        "src": "9042:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28747,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28730,
                        "src": "9046:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28748,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28732,
                        "src": "9050:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28749,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28734,
                        "src": "9058:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 28742,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9013:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$28967_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 28744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9019:16:17",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29182,
                      "src": "9013:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 28750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9013:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28751,
                  "nodeType": "ExpressionStatement",
                  "src": "9013:50:17"
                }
              ]
            },
            "baseFunctions": [
              29182
            ],
            "documentation": {
              "id": 28724,
              "nodeType": "StructuredDocumentation",
              "src": "8738:56:17",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28739,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28726,
                    "src": "8997:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 28740,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28738,
                  "name": "onlyAllowedOperator",
                  "nameLocations": [
                    "8977:19:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30760,
                  "src": "8977:19:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "8977:25:17"
              }
            ],
            "name": "safeTransferFrom",
            "nameLocation": "8808:16:17",
            "overrides": {
              "id": 28737,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 28736,
                  "name": "ERC1155",
                  "nameLocations": [
                    "8968:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29993,
                  "src": "8968:7:17"
                }
              ],
              "src": "8959:17:17"
            },
            "parameters": {
              "id": 28735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28726,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8842:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28753,
                  "src": "8834:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8834:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28728,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8864:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28753,
                  "src": "8856:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8856:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28730,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8884:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28753,
                  "src": "8876:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8876:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28732,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8904:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28753,
                  "src": "8896:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8896:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28734,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8933:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28753,
                  "src": "8920:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28733,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8920:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8824:119:17"
            },
            "returnParameters": {
              "id": 28741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9003:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28785,
            "nodeType": "FunctionDefinition",
            "src": "9142:303:17",
            "nodes": [],
            "body": {
              "id": 28784,
              "nodeType": "Block",
              "src": "9371:74:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28777,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28756,
                        "src": "9409:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28778,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28758,
                        "src": "9415:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28779,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28761,
                        "src": "9419:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 28780,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28764,
                        "src": "9424:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 28781,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28766,
                        "src": "9433:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 28774,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9381:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$28967_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 28776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9387:21:17",
                      "memberName": "safeBatchTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29222,
                      "src": "9381:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 28782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9381:57:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28783,
                  "nodeType": "ExpressionStatement",
                  "src": "9381:57:17"
                }
              ]
            },
            "baseFunctions": [
              29222
            ],
            "documentation": {
              "id": 28754,
              "nodeType": "StructuredDocumentation",
              "src": "9076:61:17",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28771,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28756,
                    "src": "9365:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 28772,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28770,
                  "name": "onlyAllowedOperator",
                  "nameLocations": [
                    "9345:19:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30760,
                  "src": "9345:19:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9345:25:17"
              }
            ],
            "name": "safeBatchTransferFrom",
            "nameLocation": "9151:21:17",
            "overrides": {
              "id": 28769,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 28768,
                  "name": "ERC1155",
                  "nameLocations": [
                    "9336:7:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29993,
                  "src": "9336:7:17"
                }
              ],
              "src": "9327:17:17"
            },
            "parameters": {
              "id": 28767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28756,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "9190:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28785,
                  "src": "9182:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9182:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28758,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9212:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28785,
                  "src": "9204:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9204:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28761,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9241:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28785,
                  "src": "9224:20:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28759,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9224:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28760,
                    "nodeType": "ArrayTypeName",
                    "src": "9224:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28764,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9271:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28785,
                  "src": "9254:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28762,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9254:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28763,
                    "nodeType": "ArrayTypeName",
                    "src": "9254:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28766,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9301:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28785,
                  "src": "9288:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28765,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9288:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9172:139:17"
            },
            "returnParameters": {
              "id": 28773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9371:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28803,
            "nodeType": "FunctionDefinition",
            "src": "10016:193:17",
            "nodes": [],
            "body": {
              "id": 28802,
              "nodeType": "Block",
              "src": "10151:58:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28796,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28788,
                        "src": "10167:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28797,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28790,
                        "src": "10178:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 28798,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28792,
                        "src": "10188:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 28799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10199:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 28795,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29528,
                      "src": "10161:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 28800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10161:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28801,
                  "nodeType": "ExpressionStatement",
                  "src": "10161:41:17"
                }
              ]
            },
            "documentation": {
              "id": 28786,
              "nodeType": "StructuredDocumentation",
              "src": "9633:378:17",
              "text": "  @notice          Mints tokens to receiver on claim.\n                   Any state changes related to `claim` must be applied\n                   here by overriding this function.\n  @dev             Override this function to add logic for state updation.\n                   When overriding, apply any state changes before `_mint`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferTokensOnClaim",
            "nameLocation": "10025:22:17",
            "parameters": {
              "id": 28793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28788,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10065:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28803,
                  "src": "10057:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10057:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28790,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10092:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28803,
                  "src": "10084:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10084:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28792,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "10118:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28803,
                  "src": "10110:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10110:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10047:86:17"
            },
            "returnParameters": {
              "id": 28794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10151:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28817,
            "nodeType": "FunctionDefinition",
            "src": "10301:115:17",
            "nodes": [],
            "body": {
              "id": 28816,
              "nodeType": "Block",
              "src": "10371:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28810,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10388:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10392:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10388:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28812,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30839,
                        "src": "10402:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 28813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10402:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10388:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28809,
                  "id": 28815,
                  "nodeType": "Return",
                  "src": "10381:28:17"
                }
              ]
            },
            "baseFunctions": [
              30563
            ],
            "documentation": {
              "id": 28804,
              "nodeType": "StructuredDocumentation",
              "src": "10215:81:17",
              "text": "@dev Returns whether lazy minting can be done in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canLazyMint",
            "nameLocation": "10310:12:17",
            "overrides": {
              "id": 28806,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10347:8:17"
            },
            "parameters": {
              "id": 28805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10322:2:17"
            },
            "returnParameters": {
              "id": 28809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28817,
                  "src": "10365:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28807,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10365:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10364:6:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28831,
            "nodeType": "FunctionDefinition",
            "src": "10512:121:17",
            "nodes": [],
            "body": {
              "id": 28830,
              "nodeType": "Block",
              "src": "10588:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28824,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10605:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10609:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10605:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28826,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30839,
                        "src": "10619:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 28827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10619:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10605:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28823,
                  "id": 28829,
                  "nodeType": "Return",
                  "src": "10598:28:17"
                }
              ]
            },
            "baseFunctions": [
              30463
            ],
            "documentation": {
              "id": 28818,
              "nodeType": "StructuredDocumentation",
              "src": "10422:85:17",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "10521:18:17",
            "overrides": {
              "id": 28820,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10564:8:17"
            },
            "parameters": {
              "id": 28819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10539:2:17"
            },
            "returnParameters": {
              "id": 28823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28831,
                  "src": "10582:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10582:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10581:6:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28845,
            "nodeType": "FunctionDefinition",
            "src": "10717:115:17",
            "nodes": [],
            "body": {
              "id": 28844,
              "nodeType": "Block",
              "src": "10787:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28838,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10804:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10808:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10804:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28840,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30839,
                        "src": "10818:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 28841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10818:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10804:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28837,
                  "id": 28843,
                  "nodeType": "Return",
                  "src": "10797:28:17"
                }
              ]
            },
            "baseFunctions": [
              30886
            ],
            "documentation": {
              "id": 28832,
              "nodeType": "StructuredDocumentation",
              "src": "10639:73:17",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOwner",
            "nameLocation": "10726:12:17",
            "overrides": {
              "id": 28834,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10763:8:17"
            },
            "parameters": {
              "id": 28833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10738:2:17"
            },
            "returnParameters": {
              "id": 28837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28845,
                  "src": "10781:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10781:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10780:6:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28859,
            "nodeType": "FunctionDefinition",
            "src": "10923:121:17",
            "nodes": [],
            "body": {
              "id": 28858,
              "nodeType": "Block",
              "src": "10999:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28852,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11016:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11020:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11016:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28854,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30839,
                        "src": "11030:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 28855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11030:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11016:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28851,
                  "id": 28857,
                  "nodeType": "Return",
                  "src": "11009:28:17"
                }
              ]
            },
            "baseFunctions": [
              31125
            ],
            "documentation": {
              "id": 28846,
              "nodeType": "StructuredDocumentation",
              "src": "10838:80:17",
              "text": "@dev Returns whether royalty info can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetRoyaltyInfo",
            "nameLocation": "10932:18:17",
            "overrides": {
              "id": 28848,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10975:8:17"
            },
            "parameters": {
              "id": 28847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10950:2:17"
            },
            "returnParameters": {
              "id": 28851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28850,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28859,
                  "src": "10993:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28849,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10993:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10992:6:17"
            },
            "scope": 28967,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28873,
            "nodeType": "FunctionDefinition",
            "src": "11143:124:17",
            "nodes": [],
            "body": {
              "id": 28872,
              "nodeType": "Block",
              "src": "11222:45:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28866,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11239:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11243:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11239:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28868,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30839,
                        "src": "11253:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 28869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11253:7:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11239:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28865,
                  "id": 28871,
                  "nodeType": "Return",
                  "src": "11232:28:17"
                }
              ]
            },
            "baseFunctions": [
              30665
            ],
            "documentation": {
              "id": 28860,
              "nodeType": "StructuredDocumentation",
              "src": "11050:88:17",
              "text": "@dev Returns whether operator restriction can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetOperatorRestriction",
            "nameLocation": "11152:26:17",
            "overrides": {
              "id": 28862,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11198:8:17"
            },
            "parameters": {
              "id": 28861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11178:2:17"
            },
            "returnParameters": {
              "id": 28865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28873,
                  "src": "11216:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28863,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11216:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11215:6:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 28966,
            "nodeType": "FunctionDefinition",
            "src": "11334:632:17",
            "nodes": [],
            "body": {
              "id": 28965,
              "nodeType": "Block",
              "src": "11555:411:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28895,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28876,
                        "src": "11592:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28896,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28878,
                        "src": "11602:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28897,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28880,
                        "src": "11608:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28898,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28883,
                        "src": "11612:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 28899,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28886,
                        "src": "11617:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 28900,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28888,
                        "src": "11626:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 28892,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11565:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC1155LazyMint_$28967_$",
                          "typeString": "type(contract super ERC1155LazyMint)"
                        }
                      },
                      "id": 28894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11571:20:17",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29832,
                      "src": "11565:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 28901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11565:66:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28902,
                  "nodeType": "ExpressionStatement",
                  "src": "11565:66:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28903,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28878,
                      "src": "11646:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 28906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11662:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 28905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11654:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 28904,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11654:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 28907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11654:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11646:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28933,
                  "nodeType": "IfStatement",
                  "src": "11642:155:17",
                  "trueBody": {
                    "id": 28932,
                    "nodeType": "Block",
                    "src": "11666:131:17",
                    "statements": [
                      {
                        "body": {
                          "id": 28930,
                          "nodeType": "Block",
                          "src": "11721:66:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 28928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 28920,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28431,
                                    "src": "11739:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 28924,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 28921,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28883,
                                      "src": "11751:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 28923,
                                    "indexExpression": {
                                      "id": 28922,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28910,
                                      "src": "11755:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11751:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11739:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 28925,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28886,
                                    "src": "11762:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 28927,
                                  "indexExpression": {
                                    "id": 28926,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28910,
                                    "src": "11770:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11762:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11739:33:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 28929,
                              "nodeType": "ExpressionStatement",
                              "src": "11739:33:17"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 28916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 28913,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28910,
                            "src": "11700:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 28914,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28883,
                              "src": "11704:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 28915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11708:6:17",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11704:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11700:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28931,
                        "initializationExpression": {
                          "assignments": [
                            28910
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 28910,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11693:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 28931,
                              "src": "11685:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 28909,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11685:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 28912,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 28911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11697:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11685:13:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 28918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "11716:3:17",
                            "subExpression": {
                              "id": 28917,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28910,
                              "src": "11718:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28919,
                          "nodeType": "ExpressionStatement",
                          "src": "11716:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "11680:107:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 28939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28934,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28880,
                      "src": "11811:2:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 28937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11825:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 28936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11817:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 28935,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11817:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 28938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11817:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11811:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28964,
                  "nodeType": "IfStatement",
                  "src": "11807:153:17",
                  "trueBody": {
                    "id": 28963,
                    "nodeType": "Block",
                    "src": "11829:131:17",
                    "statements": [
                      {
                        "body": {
                          "id": 28961,
                          "nodeType": "Block",
                          "src": "11884:66:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 28959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 28951,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28431,
                                    "src": "11902:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 28955,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 28952,
                                      "name": "ids",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28883,
                                      "src": "11914:3:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 28954,
                                    "indexExpression": {
                                      "id": 28953,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28941,
                                      "src": "11918:1:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11914:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11902:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 28956,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28886,
                                    "src": "11925:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 28958,
                                  "indexExpression": {
                                    "id": 28957,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28941,
                                    "src": "11933:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11925:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11902:33:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 28960,
                              "nodeType": "ExpressionStatement",
                              "src": "11902:33:17"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 28947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 28944,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28941,
                            "src": "11863:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 28945,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28883,
                              "src": "11867:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 28946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11871:6:17",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11867:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11863:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28962,
                        "initializationExpression": {
                          "assignments": [
                            28941
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 28941,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11856:1:17",
                              "nodeType": "VariableDeclaration",
                              "scope": 28962,
                              "src": "11848:9:17",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 28940,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11848:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 28943,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 28942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11860:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11848:13:17"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 28949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "11879:3:17",
                            "subExpression": {
                              "id": 28948,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28941,
                              "src": "11881:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28950,
                          "nodeType": "ExpressionStatement",
                          "src": "11879:3:17"
                        },
                        "nodeType": "ForStatement",
                        "src": "11843:107:17"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              29832
            ],
            "documentation": {
              "id": 28874,
              "nodeType": "StructuredDocumentation",
              "src": "11273:56:17",
              "text": "@dev Runs before every token transfer / mint / burn."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11343:20:17",
            "overrides": {
              "id": 28890,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11546:8:17"
            },
            "parameters": {
              "id": 28889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28876,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11381:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28966,
                  "src": "11373:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11373:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28878,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11407:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28966,
                  "src": "11399:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11399:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28880,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11429:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28966,
                  "src": "11421:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11421:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28883,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11458:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28966,
                  "src": "11441:20:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28881,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11441:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28882,
                    "nodeType": "ArrayTypeName",
                    "src": "11441:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28886,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11488:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28966,
                  "src": "11471:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28884,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11471:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28885,
                    "nodeType": "ArrayTypeName",
                    "src": "11471:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28888,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11518:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 28966,
                  "src": "11505:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28887,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11505:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11363:165:17"
            },
            "returnParameters": {
              "id": 28891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11555:0:17"
            },
            "scope": 28967,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28404,
              "name": "ERC1155",
              "nameLocations": [
                "1783:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29993,
              "src": "1783:7:17"
            },
            "id": 28405,
            "nodeType": "InheritanceSpecifier",
            "src": "1783:7:17"
          },
          {
            "baseName": {
              "id": 28406,
              "name": "ContractMetadata",
              "nameLocations": [
                "1796:16:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30464,
              "src": "1796:16:17"
            },
            "id": 28407,
            "nodeType": "InheritanceSpecifier",
            "src": "1796:16:17"
          },
          {
            "baseName": {
              "id": 28408,
              "name": "Ownable",
              "nameLocations": [
                "1818:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30887,
              "src": "1818:7:17"
            },
            "id": 28409,
            "nodeType": "InheritanceSpecifier",
            "src": "1818:7:17"
          },
          {
            "baseName": {
              "id": 28410,
              "name": "Royalty",
              "nameLocations": [
                "1831:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31126,
              "src": "1831:7:17"
            },
            "id": 28411,
            "nodeType": "InheritanceSpecifier",
            "src": "1831:7:17"
          },
          {
            "baseName": {
              "id": 28412,
              "name": "Multicall",
              "nameLocations": [
                "1844:9:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30623,
              "src": "1844:9:17"
            },
            "id": 28413,
            "nodeType": "InheritanceSpecifier",
            "src": "1844:9:17"
          },
          {
            "baseName": {
              "id": 28414,
              "name": "BatchMintMetadata",
              "nameLocations": [
                "1859:17:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30406,
              "src": "1859:17:17"
            },
            "id": 28415,
            "nodeType": "InheritanceSpecifier",
            "src": "1859:17:17"
          },
          {
            "baseName": {
              "id": 28416,
              "name": "LazyMint",
              "nameLocations": [
                "1882:8:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30564,
              "src": "1882:8:17"
            },
            "id": 28417,
            "nodeType": "InheritanceSpecifier",
            "src": "1882:8:17"
          },
          {
            "baseName": {
              "id": 28418,
              "name": "IClaimableERC1155",
              "nameLocations": [
                "1896:17:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31161,
              "src": "1896:17:17"
            },
            "id": 28419,
            "nodeType": "InheritanceSpecifier",
            "src": "1896:17:17"
          },
          {
            "baseName": {
              "id": 28420,
              "name": "DefaultOperatorFilterer",
              "nameLocations": [
                "1919:23:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30486,
              "src": "1919:23:17"
            },
            "id": 28421,
            "nodeType": "InheritanceSpecifier",
            "src": "1919:23:17"
          },
          {
            "baseName": {
              "id": 28422,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1948:15:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32062,
              "src": "1948:15:17"
            },
            "id": 28423,
            "nodeType": "InheritanceSpecifier",
            "src": "1948:15:17"
          }
        ],
        "canonicalName": "ERC1155LazyMint",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28403,
          "nodeType": "StructuredDocumentation",
          "src": "567:1182:17",
          "text": "      BASE:      ERC1155Base\n      EXTENSION: LazyMint\n  The `ERC1155LazyMint` smart contract implements the ERC1155 NFT standard.\n  It includes the following additions to standard ERC1155 logic:\n      - Lazy minting\n      - Ability to mint NFTs via the provided `mintTo` and `batchMintTo` functions.\n      - Contract metadata for royalty support on platforms such as OpenSea that use\n        off-chain information to distribute roaylties.\n      - Ownership of the contract, with the ability to restrict certain functions to\n        only be called by the contract's owner.\n      - Multicall capability to perform multiple actions atomically\n      - EIP 2981 compliance for royalty support on NFT marketplaces.\n  The `ERC1155LazyMint` contract uses the `LazyMint` extension.\n  'Lazy minting' means defining the metadata of NFTs without minting it to an address. Regular 'minting'\n  of  NFTs means actually assigning an owner to an NFT.\n  As a contract admin, this lets you prepare the metadata for NFTs that will be minted by an external party,\n  without paying the gas cost for actually minting the NFTs."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28967,
          32062,
          30486,
          30805,
          30666,
          31438,
          31161,
          30564,
          30406,
          31211,
          30623,
          31225,
          31126,
          31525,
          30196,
          30177,
          30887,
          31461,
          30464,
          31184,
          29993,
          30124,
          30112
        ],
        "name": "ERC1155LazyMint",
        "nameLocation": "1760:15:17",
        "scope": 28968,
        "usedErrors": [
          30677
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 17
}